From c96d8e5e770a49fb22f7105209b49128b25d8d2d Mon Sep 17 00:00:00 2001
From: nxa22940 <xiaodong.zhang@nxp.com>
Date: Mon, 13 Nov 2023 14:48:58 +0800
Subject: [PATCH 2/3] Rename ORB-SLAM3 to imx-hc-slam, add imx prefix to
 application and add NXP copyright

Signed-off-by: nxa22940 <xiaodong.zhang@nxp.com>
---
 CMakeLists.txt                                | 280 +++++------------
 ...T265.cc => imx_recorder_realsense_T265.cc} |   9 +-
 .../Calibration/recorder_realsense_D435i.cc   | 286 ------------------
 ...al_euroc.cc => imx_mono_inertial_euroc.cc} |  15 +-
 ...c => imx_mono_inertial_realsense_D435i.cc} |  15 +-
 ...cc => imx_mono_inertial_realsense_t265.cc} |  15 +-
 ..._tum_vi.cc => imx_mono_inertial_tum_vi.cc} |  15 +-
 .../{mono_euroc.cc => imx_mono_euroc.cc}      |  11 +-
 .../{mono_kitti.cc => imx_mono_kitti.cc}      |  13 +-
 ...e_D435i.cc => imx_mono_realsense_D435i.cc} |  11 +-
 ...nse_t265.cc => imx_mono_realsense_t265.cc} |  11 +-
 .../{mono_tum.cc => imx_mono_tum.cc}          |  11 +-
 .../{mono_tum_vi.cc => imx_mono_tum_vi.cc}    |  11 +-
 Examples/REAMDME.md                           |   1 -
 ...c => imx_rgbd_inertial_realsense_D435i.cc} |  15 +-
 ...e_D435i.cc => imx_rgbd_realsense_D435i.cc} |  11 +-
 .../RGB-D/{rgbd_tum.cc => imx_rgbd_tum.cc}    |  11 +-
 ..._euroc.cc => imx_stereo_inertial_euroc.cc} |  15 +-
 ...=> imx_stereo_inertial_realsense_D435i.cc} |  15 +-
 ... => imx_stereo_inertial_realsense_t265.cc} |  15 +-
 ...um_vi.cc => imx_stereo_inertial_tum_vi.cc} |  17 +-
 .../{stereo_euroc.cc => imx_stereo_euroc.cc}  |  13 +-
 .../{stereo_kitti.cc => imx_stereo_kitti.cc}  |  11 +-
 ...D435i.cc => imx_stereo_realsense_D435i.cc} |  11 +-
 ...e_t265.cc => imx_stereo_realsense_t265.cc} |  13 +-
 ...{stereo_tum_vi.cc => imx_stereo_tum_vi.cc} |  11 +-
 .../{DBoW2 => DBoW2-imx}/CMakeLists.txt       |   6 +-
 .../{DBoW2 => DBoW2-imx}/DBoW2/BowVector.cpp  |   0
 .../{DBoW2 => DBoW2-imx}/DBoW2/BowVector.h    |   0
 .../{DBoW2 => DBoW2-imx}/DBoW2/FClass.h       |   0
 .../{DBoW2 => DBoW2-imx}/DBoW2/FORB.cpp       |   0
 Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/FORB.h  |   0
 .../DBoW2/FeatureVector.cpp                   |   0
 .../DBoW2/FeatureVector.h                     |   0
 .../DBoW2/ScoringObject.cpp                   |   0
 .../DBoW2/ScoringObject.h                     |   0
 .../DBoW2/TemplatedVocabulary.h               |   0
 .../{DBoW2 => DBoW2-imx}/DUtils/Random.cpp    |   0
 .../{DBoW2 => DBoW2-imx}/DUtils/Random.h      |   0
 Thirdparty/{DBoW2 => DBoW2-imx}/README.txt    |   0
 Thirdparty/DBoW2/DUtils/Timestamp.cpp         | 246 ---------------
 Thirdparty/DBoW2/DUtils/Timestamp.h           | 204 -------------
 .../{Sophus => Sophus-imx}/.clang-format      |   0
 Thirdparty/{Sophus => Sophus-imx}/.gitignore  |   0
 Thirdparty/{Sophus => Sophus-imx}/.travis.yml |   0
 .../{Sophus => Sophus-imx}/CMakeLists.txt     |   0
 Thirdparty/{Sophus => Sophus-imx}/LICENSE.txt |   0
 Thirdparty/{Sophus => Sophus-imx}/README.rst  |   0
 .../SophusConfig.cmake.in                     |   0
 .../{Sophus => Sophus-imx}/appveyor.yml       |   0
 .../doxyrest-config.lua                       |   0
 .../examples/CMakeLists.txt                   |   0
 .../examples/HelloSO3.cpp                     |   0
 .../{Sophus => Sophus-imx}/make_docs.sh       |   0
 Thirdparty/{Sophus => Sophus-imx}/package.xml |   0
 .../py/cpp_gencode/Se2_Dx_exp_x.cpp           |   0
 .../Se2_Dx_this_mul_exp_x_at_0.cpp            |   0
 .../py/cpp_gencode/Se3_Dx_exp_x.cpp           |   0
 .../Se3_Dx_this_mul_exp_x_at_0.cpp            |   0
 .../py/cpp_gencode/So2_Dx_exp_x.cpp           |   0
 .../So2_Dx_this_mul_exp_x_at_0.cpp            |   0
 .../py/cpp_gencode/So3_Dx_exp_x.cpp           |   0
 .../So3_Dx_this_mul_exp_x_at_0.cpp            |   0
 .../{Sophus => Sophus-imx}/py/run_tests.sh    |   0
 .../py/sophus/__init__.py                     |   0
 .../py/sophus/complex.py                      |   0
 .../py/sophus/cse_codegen.py                  |   0
 .../py/sophus/dual_quaternion.py              |   0
 .../py/sophus/matrix.py                       |   0
 .../py/sophus/quaternion.py                   |   0
 .../{Sophus => Sophus-imx}/py/sophus/se2.py   |   0
 .../{Sophus => Sophus-imx}/py/sophus/se3.py   |   0
 .../{Sophus => Sophus-imx}/py/sophus/so2.py   |   0
 .../{Sophus => Sophus-imx}/py/sophus/so3.py   |   0
 .../py/sophus/so3_codegen.py                  |   0
 .../{Sophus => Sophus-imx}/rst-dir/conf.py    |   0
 .../rst-dir/page_index.rst                    |   0
 .../rst-dir/pysophus.rst                      |   0
 .../{Sophus => Sophus-imx}/run_format.sh      |   0
 .../scripts/install_docs_deps.sh              |   0
 .../scripts/install_linux_deps.sh             |   0
 .../scripts/install_osx_deps.sh               |   0
 .../scripts/run_cpp_tests.sh                  |   0
 .../{Sophus => Sophus-imx}/sophus/average.hpp |   0
 .../{Sophus => Sophus-imx}/sophus/common.hpp  |   0
 .../sophus/example_ensure_handler.cpp         |   0
 .../sophus/formatstring.hpp                   |   0
 .../sophus/geometry.hpp                       |   0
 .../sophus/interpolate.hpp                    |   0
 .../sophus/interpolate_details.hpp            |   0
 .../sophus/num_diff.hpp                       |   0
 .../sophus/rotation_matrix.hpp                |   0
 .../{Sophus => Sophus-imx}/sophus/rxso2.hpp   |   0
 .../{Sophus => Sophus-imx}/sophus/rxso3.hpp   |   0
 .../{Sophus => Sophus-imx}/sophus/se2.hpp     |   0
 .../{Sophus => Sophus-imx}/sophus/se3.hpp     |   0
 .../{Sophus => Sophus-imx}/sophus/sim2.hpp    |   0
 .../{Sophus => Sophus-imx}/sophus/sim3.hpp    |   0
 .../sophus/sim_details.hpp                    |   0
 .../{Sophus => Sophus-imx}/sophus/so2.hpp     |   0
 .../{Sophus => Sophus-imx}/sophus/so3.hpp     |   0
 .../sophus/test_macros.hpp                    |   0
 .../{Sophus => Sophus-imx}/sophus/types.hpp   |   0
 .../sophus/velocities.hpp                     |   0
 .../test/CMakeLists.txt                       |   0
 .../test/ceres/CMakeLists.txt                 |   0
 .../test/ceres/local_parameterization_se3.hpp |   0
 .../test/ceres/test_ceres_se3.cpp             |   0
 .../test/core/CMakeLists.txt                  |   0
 .../test/core/test_common.cpp                 |   0
 .../test/core/test_geometry.cpp               |   0
 .../test/core/test_rxso2.cpp                  |   0
 .../test/core/test_rxso3.cpp                  |   0
 .../test/core/test_se2.cpp                    |   0
 .../test/core/test_se3.cpp                    |   0
 .../test/core/test_sim2.cpp                   |   0
 .../test/core/test_sim3.cpp                   |   0
 .../test/core/test_so2.cpp                    |   0
 .../test/core/test_so3.cpp                    |   0
 .../test/core/test_velocities.cpp             |   0
 .../test/core/tests.hpp                       |   0
 Thirdparty/{g2o => g2o-imx}/CMakeLists.txt    |   2 +-
 Thirdparty/{g2o => g2o-imx}/README.txt        |   0
 Thirdparty/{g2o => g2o-imx}/config.h.in       |   0
 .../g2o/core/base_binary_edge.h               |   0
 .../g2o/core/base_binary_edge.hpp             |   0
 .../{g2o => g2o-imx}/g2o/core/base_edge.h     |   0
 .../g2o/core/base_multi_edge.h                |   0
 .../g2o/core/base_multi_edge.hpp              |   0
 .../g2o/core/base_unary_edge.h                |   0
 .../g2o/core/base_unary_edge.hpp              |   0
 .../{g2o => g2o-imx}/g2o/core/base_vertex.h   |   0
 .../{g2o => g2o-imx}/g2o/core/base_vertex.hpp |   0
 .../{g2o => g2o-imx}/g2o/core/batch_stats.cpp |   0
 .../{g2o => g2o-imx}/g2o/core/batch_stats.h   |   0
 .../{g2o => g2o-imx}/g2o/core/block_solver.h  |   0
 .../g2o/core/block_solver.hpp                 |   0
 .../{g2o => g2o-imx}/g2o/core/cache.cpp       |   0
 Thirdparty/{g2o => g2o-imx}/g2o/core/cache.h  |   0
 .../{g2o => g2o-imx}/g2o/core/creators.h      |   0
 .../{g2o => g2o-imx}/g2o/core/eigen_types.h   |   0
 .../g2o/core/estimate_propagator.cpp          |   0
 .../g2o/core/estimate_propagator.h            |   0
 .../{g2o => g2o-imx}/g2o/core/factory.cpp     |   0
 .../{g2o => g2o-imx}/g2o/core/factory.h       |   0
 .../g2o/core/hyper_dijkstra.cpp               |   0
 .../g2o/core/hyper_dijkstra.h                 |   0
 .../{g2o => g2o-imx}/g2o/core/hyper_graph.cpp |   0
 .../{g2o => g2o-imx}/g2o/core/hyper_graph.h   |   0
 .../g2o/core/hyper_graph_action.cpp           |   0
 .../g2o/core/hyper_graph_action.h             |   0
 .../g2o/core/jacobian_workspace.cpp           |   0
 .../g2o/core/jacobian_workspace.h             |   0
 .../{g2o => g2o-imx}/g2o/core/linear_solver.h |   0
 .../g2o/core/marginal_covariance_cholesky.cpp |   0
 .../g2o/core/marginal_covariance_cholesky.h   |   0
 .../g2o/core/matrix_operations.h              |   0
 .../g2o/core/matrix_structure.cpp             |   0
 .../g2o/core/matrix_structure.h               |   0
 .../{g2o => g2o-imx}/g2o/core/openmp_mutex.h  |   0
 .../g2o/core/optimizable_graph.cpp            |   0
 .../g2o/core/optimizable_graph.h              |   0
 .../g2o/core/optimization_algorithm.cpp       |   0
 .../g2o/core/optimization_algorithm.h         |   0
 .../core/optimization_algorithm_dogleg.cpp    |   0
 .../g2o/core/optimization_algorithm_dogleg.h  |   0
 .../core/optimization_algorithm_factory.cpp   |   0
 .../g2o/core/optimization_algorithm_factory.h |   0
 .../optimization_algorithm_gauss_newton.cpp   |   0
 .../optimization_algorithm_gauss_newton.h     |   0
 .../core/optimization_algorithm_levenberg.cpp |   0
 .../core/optimization_algorithm_levenberg.h   |   0
 .../core/optimization_algorithm_property.h    |   0
 .../optimization_algorithm_with_hessian.cpp   |   0
 .../optimization_algorithm_with_hessian.h     |   0
 .../{g2o => g2o-imx}/g2o/core/parameter.cpp   |   0
 .../{g2o => g2o-imx}/g2o/core/parameter.h     |   0
 .../g2o/core/parameter_container.cpp          |   0
 .../g2o/core/parameter_container.h            |   0
 .../g2o/core/robust_kernel.cpp                |   0
 .../{g2o => g2o-imx}/g2o/core/robust_kernel.h |   0
 .../g2o/core/robust_kernel_factory.cpp        |   0
 .../g2o/core/robust_kernel_factory.h          |   0
 .../g2o/core/robust_kernel_impl.cpp           |   0
 .../g2o/core/robust_kernel_impl.h             |   0
 .../{g2o => g2o-imx}/g2o/core/solver.cpp      |   0
 Thirdparty/{g2o => g2o-imx}/g2o/core/solver.h |   0
 .../g2o/core/sparse_block_matrix.h            |   0
 .../g2o/core/sparse_block_matrix.hpp          |   0
 .../g2o/core/sparse_block_matrix_ccs.h        |   0
 .../g2o/core/sparse_block_matrix_diagonal.h   |   0
 .../g2o/core/sparse_block_matrix_test.cpp     |   0
 .../g2o/core/sparse_optimizer.cpp             |   0
 .../g2o/core/sparse_optimizer.h               |   0
 .../g2o/solvers/linear_solver_dense.h         |   0
 .../g2o/solvers/linear_solver_eigen.h         |   0
 .../{g2o => g2o-imx}/g2o/stuff/color_macros.h |   0
 .../{g2o => g2o-imx}/g2o/stuff/macros.h       |   0
 Thirdparty/{g2o => g2o-imx}/g2o/stuff/misc.h  |   0
 .../{g2o => g2o-imx}/g2o/stuff/os_specific.c  |   0
 .../{g2o => g2o-imx}/g2o/stuff/os_specific.h  |   0
 .../{g2o => g2o-imx}/g2o/stuff/property.cpp   |   0
 .../{g2o => g2o-imx}/g2o/stuff/property.h     |   0
 .../g2o/stuff/string_tools.cpp                |   0
 .../{g2o => g2o-imx}/g2o/stuff/string_tools.h |   0
 .../{g2o => g2o-imx}/g2o/types/se3_ops.h      |   0
 .../{g2o => g2o-imx}/g2o/types/se3_ops.hpp    |   0
 .../{g2o => g2o-imx}/g2o/types/se3mat.cpp     |   0
 .../{g2o => g2o-imx}/g2o/types/se3mat.h       |   0
 .../{g2o => g2o-imx}/g2o/types/se3quat.h      |   0
 Thirdparty/{g2o => g2o-imx}/g2o/types/sim3.h  |   0
 .../{g2o => g2o-imx}/g2o/types/types_sba.cpp  |   0
 .../{g2o => g2o-imx}/g2o/types/types_sba.h    |   0
 .../g2o/types/types_seven_dof_expmap.cpp      |   0
 .../g2o/types/types_seven_dof_expmap.h        |   0
 .../g2o/types/types_six_dof_expmap.cpp        |   0
 .../g2o/types/types_six_dof_expmap.h          |   0
 Thirdparty/{g2o => g2o-imx}/license-bsd.txt   |   0
 Thirdparty/g2o/g2o/stuff/timeutil.cpp         | 124 --------
 Thirdparty/g2o/g2o/stuff/timeutil.h           | 132 --------
 include/Atlas.h                               |  13 +-
 include/CameraModels/GeometricCamera.h        |  13 +-
 include/CameraModels/KannalaBrandt8.h         |  11 +-
 include/CameraModels/Pinhole.h                |  11 +-
 include/Config.h                              |  11 +-
 include/Converter.h                           |  19 +-
 include/Frame.h                               |  19 +-
 include/FrameDrawer.h                         |  11 +-
 include/G2oTypes.h                            |  21 +-
 include/GeometricTools.h                      |  13 +-
 include/ImuTypes.h                            |  13 +-
 include/KeyFrame.h                            |  15 +-
 include/KeyFrameDatabase.h                    |  11 +-
 include/LocalMapping.h                        |  11 +-
 include/LoopClosing.h                         |  13 +-
 include/MLPnPsolver.h                         |  11 +-
 include/Map.h                                 |  13 +-
 include/MapDrawer.h                           |  11 +-
 include/MapPoint.h                            |  11 +-
 include/ORBVocabulary.h                       |  15 +-
 include/ORBextractor.h                        |  11 +-
 include/ORBmatcher.h                          |  13 +-
 include/OptimizableTypes.h                    |  23 +-
 include/Optimizer.h                           |  33 +-
 include/SerializationUtils.h                  |  15 +-
 include/Settings.h                            |  11 +-
 include/Sim3Solver.h                          |  11 +-
 include/System.h                              |  11 +-
 include/Tracking.h                            |  11 +-
 include/TwoViewReconstruction.h               |  13 +-
 include/Viewer.h                              |  11 +-
 src/Atlas.cc                                  |  13 +-
 src/CameraModels/KannalaBrandt8.cpp           |  13 +-
 src/CameraModels/Pinhole.cpp                  |  13 +-
 src/Config.cc                                 |  11 +-
 src/Converter.cc                              |  11 +-
 src/Frame.cc                                  |  11 +-
 src/FrameDrawer.cc                            |  11 +-
 src/G2oTypes.cc                               |  11 +-
 src/GeometricTools.cc                         |  11 +-
 src/ImuTypes.cc                               |  11 +-
 src/KeyFrame.cc                               |  11 +-
 src/KeyFrameDatabase.cc                       |  13 +-
 src/LocalMapping.cc                           |  11 +-
 src/LoopClosing.cc                            |  11 +-
 src/MLPnPsolver.cpp                           |  11 +-
 src/Map.cc                                    |  13 +-
 src/MapDrawer.cc                              |  11 +-
 src/MapPoint.cc                               |  11 +-
 src/ORBextractor.cc                           |  11 +-
 src/ORBmatcher.cc                             |  13 +-
 src/OptimizableTypes.cpp                      |  11 +-
 src/Optimizer.cc                              |  95 +++---
 src/Settings.cc                               |  11 +-
 src/Sim3Solver.cc                             |  13 +-
 src/System.cc                                 |  33 +-
 src/Tracking.cc                               |  13 +-
 src/TwoViewReconstruction.cc                  |  13 +-
 src/Viewer.cc                                 |  17 +-
 279 files changed, 706 insertions(+), 1737 deletions(-)
 mode change 100644 => 100755 CMakeLists.txt
 rename Examples/Calibration/{recorder_realsense_T265.cc => imx_recorder_realsense_T265.cc} (96%)
 delete mode 100644 Examples/Calibration/recorder_realsense_D435i.cc
 rename Examples/Monocular-Inertial/{mono_inertial_euroc.cc => imx_mono_inertial_euroc.cc} (94%)
 rename Examples/Monocular-Inertial/{mono_inertial_realsense_D435i.cc => imx_mono_inertial_realsense_D435i.cc} (96%)
 rename Examples/Monocular-Inertial/{mono_inertial_realsense_t265.cc => imx_mono_inertial_realsense_t265.cc} (96%)
 rename Examples/Monocular-Inertial/{mono_inertial_tum_vi.cc => imx_mono_inertial_tum_vi.cc} (94%)
 rename Examples/Monocular/{mono_euroc.cc => imx_mono_euroc.cc} (95%)
 rename Examples/Monocular/{mono_kitti.cc => imx_mono_kitti.cc} (91%)
 rename Examples/Monocular/{mono_realsense_D435i.cc => imx_mono_realsense_D435i.cc} (96%)
 rename Examples/Monocular/{mono_realsense_t265.cc => imx_mono_realsense_t265.cc} (93%)
 rename Examples/Monocular/{mono_tum.cc => imx_mono_tum.cc} (93%)
 rename Examples/Monocular/{mono_tum_vi.cc => imx_mono_tum_vi.cc} (94%)
 delete mode 100644 Examples/REAMDME.md
 rename Examples/RGB-D-Inertial/{rgbd_inertial_realsense_D435i.cc => imx_rgbd_inertial_realsense_D435i.cc} (97%)
 rename Examples/RGB-D/{rgbd_realsense_D435i.cc => imx_rgbd_realsense_D435i.cc} (97%)
 rename Examples/RGB-D/{rgbd_tum.cc => imx_rgbd_tum.cc} (93%)
 rename Examples/Stereo-Inertial/{stereo_inertial_euroc.cc => imx_stereo_inertial_euroc.cc} (94%)
 rename Examples/Stereo-Inertial/{stereo_inertial_realsense_D435i.cc => imx_stereo_inertial_realsense_D435i.cc} (97%)
 rename Examples/Stereo-Inertial/{stereo_inertial_realsense_t265.cc => imx_stereo_inertial_realsense_t265.cc} (95%)
 rename Examples/Stereo-Inertial/{stereo_inertial_tum_vi.cc => imx_stereo_inertial_tum_vi.cc} (94%)
 rename Examples/Stereo/{stereo_euroc.cc => imx_stereo_euroc.cc} (93%)
 rename Examples/Stereo/{stereo_kitti.cc => imx_stereo_kitti.cc} (93%)
 rename Examples/Stereo/{stereo_realsense_D435i.cc => imx_stereo_realsense_D435i.cc} (96%)
 rename Examples/Stereo/{stereo_realsense_t265.cc => imx_stereo_realsense_t265.cc} (93%)
 rename Examples/Stereo/{stereo_tum_vi.cc => imx_stereo_tum_vi.cc} (96%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/CMakeLists.txt (87%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/BowVector.cpp (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/BowVector.h (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/FClass.h (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/FORB.cpp (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/FORB.h (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/FeatureVector.cpp (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/FeatureVector.h (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/ScoringObject.cpp (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/ScoringObject.h (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DBoW2/TemplatedVocabulary.h (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DUtils/Random.cpp (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/DUtils/Random.h (100%)
 rename Thirdparty/{DBoW2 => DBoW2-imx}/README.txt (100%)
 delete mode 100644 Thirdparty/DBoW2/DUtils/Timestamp.cpp
 delete mode 100644 Thirdparty/DBoW2/DUtils/Timestamp.h
 rename Thirdparty/{Sophus => Sophus-imx}/.clang-format (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/.gitignore (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/.travis.yml (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/CMakeLists.txt (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/LICENSE.txt (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/README.rst (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/SophusConfig.cmake.in (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/appveyor.yml (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/doxyrest-config.lua (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/examples/CMakeLists.txt (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/examples/HelloSO3.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/make_docs.sh (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/package.xml (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/cpp_gencode/Se2_Dx_exp_x.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/cpp_gencode/Se2_Dx_this_mul_exp_x_at_0.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/cpp_gencode/Se3_Dx_exp_x.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/cpp_gencode/Se3_Dx_this_mul_exp_x_at_0.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/cpp_gencode/So2_Dx_exp_x.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/cpp_gencode/So2_Dx_this_mul_exp_x_at_0.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/cpp_gencode/So3_Dx_exp_x.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/cpp_gencode/So3_Dx_this_mul_exp_x_at_0.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/run_tests.sh (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/__init__.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/complex.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/cse_codegen.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/dual_quaternion.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/matrix.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/quaternion.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/se2.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/se3.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/so2.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/so3.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/py/sophus/so3_codegen.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/rst-dir/conf.py (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/rst-dir/page_index.rst (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/rst-dir/pysophus.rst (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/run_format.sh (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/scripts/install_docs_deps.sh (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/scripts/install_linux_deps.sh (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/scripts/install_osx_deps.sh (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/scripts/run_cpp_tests.sh (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/average.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/common.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/example_ensure_handler.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/formatstring.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/geometry.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/interpolate.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/interpolate_details.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/num_diff.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/rotation_matrix.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/rxso2.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/rxso3.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/se2.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/se3.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/sim2.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/sim3.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/sim_details.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/so2.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/so3.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/test_macros.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/types.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/sophus/velocities.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/CMakeLists.txt (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/ceres/CMakeLists.txt (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/ceres/local_parameterization_se3.hpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/ceres/test_ceres_se3.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/CMakeLists.txt (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_common.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_geometry.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_rxso2.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_rxso3.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_se2.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_se3.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_sim2.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_sim3.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_so2.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_so3.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/test_velocities.cpp (100%)
 rename Thirdparty/{Sophus => Sophus-imx}/test/core/tests.hpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/CMakeLists.txt (99%)
 rename Thirdparty/{g2o => g2o-imx}/README.txt (100%)
 rename Thirdparty/{g2o => g2o-imx}/config.h.in (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_binary_edge.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_binary_edge.hpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_edge.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_multi_edge.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_multi_edge.hpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_unary_edge.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_unary_edge.hpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_vertex.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/base_vertex.hpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/batch_stats.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/batch_stats.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/block_solver.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/block_solver.hpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/cache.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/cache.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/creators.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/eigen_types.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/estimate_propagator.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/estimate_propagator.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/factory.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/factory.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/hyper_dijkstra.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/hyper_dijkstra.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/hyper_graph.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/hyper_graph.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/hyper_graph_action.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/hyper_graph_action.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/jacobian_workspace.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/jacobian_workspace.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/linear_solver.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/marginal_covariance_cholesky.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/marginal_covariance_cholesky.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/matrix_operations.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/matrix_structure.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/matrix_structure.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/openmp_mutex.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimizable_graph.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimizable_graph.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_dogleg.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_dogleg.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_factory.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_factory.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_gauss_newton.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_gauss_newton.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_levenberg.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_levenberg.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_property.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_with_hessian.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/optimization_algorithm_with_hessian.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/parameter.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/parameter.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/parameter_container.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/parameter_container.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/robust_kernel.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/robust_kernel.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/robust_kernel_factory.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/robust_kernel_factory.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/robust_kernel_impl.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/robust_kernel_impl.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/solver.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/solver.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/sparse_block_matrix.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/sparse_block_matrix.hpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/sparse_block_matrix_ccs.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/sparse_block_matrix_diagonal.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/sparse_block_matrix_test.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/sparse_optimizer.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/core/sparse_optimizer.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/solvers/linear_solver_dense.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/solvers/linear_solver_eigen.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/color_macros.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/macros.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/misc.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/os_specific.c (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/os_specific.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/property.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/property.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/string_tools.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/stuff/string_tools.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/se3_ops.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/se3_ops.hpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/se3mat.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/se3mat.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/se3quat.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/sim3.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/types_sba.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/types_sba.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/types_seven_dof_expmap.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/types_seven_dof_expmap.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/types_six_dof_expmap.cpp (100%)
 rename Thirdparty/{g2o => g2o-imx}/g2o/types/types_six_dof_expmap.h (100%)
 rename Thirdparty/{g2o => g2o-imx}/license-bsd.txt (100%)
 delete mode 100644 Thirdparty/g2o/g2o/stuff/timeutil.cpp
 delete mode 100644 Thirdparty/g2o/g2o/stuff/timeutil.h

diff --git a/CMakeLists.txt b/CMakeLists.txt
old mode 100644
new mode 100755
index 761f1d2..096a45f
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,5 @@
 cmake_minimum_required(VERSION 2.8)
-project(ORB-SLAM3)
+project(imx-hc-slam)
 
 IF(NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE Release)
@@ -31,9 +31,9 @@ endif()
 
 LIST(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)
 
-add_subdirectory(Thirdparty/DBoW2)
-add_subdirectory(Thirdparty/g2o)
-add_subdirectory(Thirdparty/Sophus)
+add_subdirectory(Thirdparty/DBoW2-imx)
+add_subdirectory(Thirdparty/g2o-imx)
+add_subdirectory(Thirdparty/Sophus-imx)
 
 find_package(OpenCV 4.4)
 if(NOT OpenCV_FOUND)
@@ -46,7 +46,7 @@ endif()
 MESSAGE("OPENCV VERSION:")
 MESSAGE(${OpenCV_VERSION})
 
-find_package(Eigen3 3.1.0 REQUIRED)
+find_package(Eigen3 3.3.0 REQUIRED)
 find_package(Pangolin REQUIRED)
 find_package(realsense2)
 find_package(PkgConfig REQUIRED)
@@ -57,7 +57,7 @@ include_directories(
 ${PROJECT_SOURCE_DIR}
 ${PROJECT_SOURCE_DIR}/include
 ${PROJECT_SOURCE_DIR}/include/CameraModels
-${PROJECT_SOURCE_DIR}/Thirdparty/Sophus
+${PROJECT_SOURCE_DIR}/Thirdparty/Sophus_imx
 ${EIGEN3_INCLUDE_DIR}
 ${Pangolin_INCLUDE_DIRS}
 )
@@ -128,8 +128,8 @@ target_link_libraries(${PROJECT_NAME}
 ${OpenCV_LIBS}
 ${EIGEN3_LIBS}
 ${Pangolin_LIBRARY}
-${PROJECT_SOURCE_DIR}/Thirdparty/DBoW2/lib/libDBoW2.so
-${PROJECT_SOURCE_DIR}/Thirdparty/g2o/lib/libg2o.so
+${PROJECT_SOURCE_DIR}/Thirdparty/DBoW2-imx/lib/libDBoW2-imx.so
+${PROJECT_SOURCE_DIR}/Thirdparty/g2o-imx/lib/libg2o-imx.so
 -lboost_serialization
 -lcrypto
 )
@@ -150,14 +150,14 @@ endif()
 # RGB-D examples
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/RGB-D)
 
-add_executable(rgbd_tum
-        Examples/RGB-D/rgbd_tum.cc)
-target_link_libraries(rgbd_tum ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_rgbd_tum
+        Examples/RGB-D/imx_rgbd_tum.cc)
+target_link_libraries(imx_rgbd_tum ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
 if(realsense2_FOUND)
-    add_executable(rgbd_realsense_D435i
-            Examples/RGB-D/rgbd_realsense_D435i.cc)
-    target_link_libraries(rgbd_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_rgbd_realsense_D435i
+            Examples/RGB-D/imx_rgbd_realsense_D435i.cc)
+    target_link_libraries(imx_rgbd_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 endif()
 
 
@@ -165,235 +165,115 @@ endif()
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/RGB-D-Inertial)
 
 if(realsense2_FOUND)
-    add_executable(rgbd_inertial_realsense_D435i
-            Examples/RGB-D-Inertial/rgbd_inertial_realsense_D435i.cc)
-    target_link_libraries(rgbd_inertial_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_rgbd_inertial_realsense_D435i
+            Examples/imx_RGB-D-Inertial/rgbd_inertial_realsense_D435i.cc)
+    target_link_libraries(imx_rgbd_inertial_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 endif()
 
 #Stereo examples
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Stereo)
 
-add_executable(stereo_kitti
-        Examples/Stereo/stereo_kitti.cc)
-target_link_libraries(stereo_kitti ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_stereo_kitti
+        Examples/Stereo/imx_stereo_kitti.cc)
+target_link_libraries(imx_stereo_kitti ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-add_executable(stereo_euroc
-        Examples/Stereo/stereo_euroc.cc)
-target_link_libraries(stereo_euroc ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_stereo_euroc
+        Examples/Stereo/imx_stereo_euroc.cc)
+target_link_libraries(imx_stereo_euroc ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-add_executable(stereo_tum_vi
-        Examples/Stereo/stereo_tum_vi.cc)
-target_link_libraries(stereo_tum_vi ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_stereo_tum_vi
+        Examples/Stereo/imx_stereo_tum_vi.cc)
+target_link_libraries(imx_stereo_tum_vi ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
 if(realsense2_FOUND)
-    add_executable(stereo_realsense_t265
-            Examples/Stereo/stereo_realsense_t265.cc)
-    target_link_libraries(stereo_realsense_t265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_stereo_realsense_t265
+            Examples/Stereo/imx_stereo_realsense_t265.cc)
+    target_link_libraries(imx_stereo_realsense_t265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-    add_executable(stereo_realsense_D435i
-            Examples/Stereo/stereo_realsense_D435i.cc)
-    target_link_libraries(stereo_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_stereo_realsense_D435i
+            Examples/Stereo/imx_stereo_realsense_D435i.cc)
+    target_link_libraries(imx_stereo_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 endif()
 
 #Monocular examples
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Monocular)
 
-add_executable(mono_tum
-        Examples/Monocular/mono_tum.cc)
-target_link_libraries(mono_tum ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_mono_tum
+        Examples/Monocular/imx_mono_tum.cc)
+target_link_libraries(imx_mono_tum ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-add_executable(mono_kitti
-        Examples/Monocular/mono_kitti.cc)
-target_link_libraries(mono_kitti ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_mono_kitti
+        Examples/Monocular/imx_mono_kitti.cc)
+target_link_libraries(imx_mono_kitti ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-add_executable(mono_euroc
-        Examples/Monocular/mono_euroc.cc)
-target_link_libraries(mono_euroc ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_mono_euroc
+        Examples/Monocular/imx_mono_euroc.cc)
+target_link_libraries(imx_mono_euroc ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-add_executable(mono_tum_vi
-        Examples/Monocular/mono_tum_vi.cc)
-target_link_libraries(mono_tum_vi ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_mono_tum_vi
+        Examples/Monocular/imx_mono_tum_vi.cc)
+target_link_libraries(imx_mono_tum_vi ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
 if(realsense2_FOUND)
-    add_executable(mono_realsense_t265
-            Examples/Monocular/mono_realsense_t265.cc)
-    target_link_libraries(mono_realsense_t265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_mono_realsense_t265
+            Examples/Monocular/imx_mono_realsense_t265.cc)
+    target_link_libraries(imx_mono_realsense_t265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-    add_executable(mono_realsense_D435i
-            Examples/Monocular/mono_realsense_D435i.cc)
-    target_link_libraries(mono_realsense_D435i ${PROJECT_NAME})
+    add_executableimx_(mono_realsense_D435i
+            Examples/Monocular/imx_mono_realsense_D435i.cc)
+    target_link_libraries(imx_mono_realsense_D435i ${PROJECT_NAME})
 endif()
 
 #Monocular inertial examples
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Monocular-Inertial)
 
-add_executable(mono_inertial_euroc
-        Examples/Monocular-Inertial/mono_inertial_euroc.cc)
-target_link_libraries(mono_inertial_euroc ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_mono_inertial_euroc
+        Examples/Monocular-Inertial/imx_mono_inertial_euroc.cc)
+target_link_libraries(imx_mono_inertial_euroc ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-add_executable(mono_inertial_tum_vi
-        Examples/Monocular-Inertial/mono_inertial_tum_vi.cc)
-target_link_libraries(mono_inertial_tum_vi ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_mono_inertial_tum_vi
+        Examples/Monocular-Inertial/imx_mono_inertial_tum_vi.cc)
+target_link_libraries(imx_mono_inertial_tum_vi ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
 if(realsense2_FOUND)
-    add_executable(mono_inertial_realsense_t265
-            Examples/Monocular-Inertial/mono_inertial_realsense_t265.cc)
-    target_link_libraries(mono_inertial_realsense_t265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_mono_inertial_realsense_t265
+            Examples/Monocular-Inertial/imx_mono_inertial_realsense_t265.cc)
+    target_link_libraries(imx_mono_inertial_realsense_t265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-    add_executable(mono_inertial_realsense_D435i
-            Examples/Monocular-Inertial/mono_inertial_realsense_D435i.cc)
-    target_link_libraries(mono_inertial_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_mono_inertial_realsense_D435i
+            Examples/Monocular-Inertial/imx_mono_inertial_realsense_D435i.cc)
+    target_link_libraries(imx_mono_inertial_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 endif()
 
 #Stereo Inertial examples
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Stereo-Inertial)
 
-add_executable(stereo_inertial_euroc
-        Examples/Stereo-Inertial/stereo_inertial_euroc.cc)
-target_link_libraries(stereo_inertial_euroc ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_stereo_inertial_euroc
+        Examples/Stereo-Inertial/imx_stereo_inertial_euroc.cc)
+target_link_libraries(imx_stereo_inertial_euroc ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-add_executable(stereo_inertial_tum_vi
-        Examples/Stereo-Inertial/stereo_inertial_tum_vi.cc)
-target_link_libraries(stereo_inertial_tum_vi ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+add_executable(imx_stereo_inertial_tum_vi
+        Examples/Stereo-Inertial/imx_stereo_inertial_tum_vi.cc)
+target_link_libraries(imx_stereo_inertial_tum_vi ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
 if(realsense2_FOUND)
-    add_executable(stereo_inertial_realsense_t265
-            Examples/Stereo-Inertial/stereo_inertial_realsense_t265.cc)
-    target_link_libraries(stereo_inertial_realsense_t265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_stereo_inertial_realsense_t265
+            Examples/Stereo-Inertial/imx_stereo_inertial_realsense_t265.cc)
+    target_link_libraries(imx_stereo_inertial_realsense_t265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-    add_executable(stereo_inertial_realsense_D435i
-            Examples/Stereo-Inertial/stereo_inertial_realsense_D435i.cc)
-    target_link_libraries(stereo_inertial_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_stereo_inertial_realsense_D435i
+            Examples/Stereo-Inertial/imx_stereo_inertial_realsense_D435i.cc)
+    target_link_libraries(imx_stereo_inertial_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 endif()
 
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Calibration)
 if(realsense2_FOUND)
-    add_executable(recorder_realsense_D435i
-            Examples/Calibration/recorder_realsense_D435i.cc)
-    target_link_libraries(recorder_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_recorder_realsense_D435i
+            Examples/Calibration/imx_recorder_realsense_D435i.cc)
+    target_link_libraries(imx_recorder_realsense_D435i ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 
-    add_executable(recorder_realsense_T265
-            Examples/Calibration/recorder_realsense_T265.cc)
-    target_link_libraries(recorder_realsense_T265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
+    add_executable(imx_recorder_realsense_T265
+            Examples/Calibration/imx_recorder_realsense_T265.cc)
+    target_link_libraries(imx_recorder_realsense_T265 ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
 endif()
 
-#Old examples
-
-# RGB-D examples
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples_old/RGB-D)
-
-add_executable(rgbd_tum_old
-        Examples_old/RGB-D/rgbd_tum.cc)
-target_link_libraries(rgbd_tum_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-if(realsense2_FOUND)
-    add_executable(rgbd_realsense_D435i_old
-            Examples_old/RGB-D/rgbd_realsense_D435i.cc)
-    target_link_libraries(rgbd_realsense_D435i_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-endif()
-
-
-# RGB-D inertial examples
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples_old/RGB-D-Inertial)
-
-if(realsense2_FOUND)
-    add_executable(rgbd_inertial_realsense_D435i_old
-            Examples_old/RGB-D-Inertial/rgbd_inertial_realsense_D435i.cc)
-    target_link_libraries(rgbd_inertial_realsense_D435i_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-endif()
-
-#Stereo examples
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples_old/Stereo)
-
-add_executable(stereo_kitti_old
-        Examples_old/Stereo/stereo_kitti.cc)
-target_link_libraries(stereo_kitti_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-add_executable(stereo_euroc_old
-        Examples_old/Stereo/stereo_euroc.cc)
-target_link_libraries(stereo_euroc_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-add_executable(stereo_tum_vi_old
-        Examples_old/Stereo/stereo_tum_vi.cc)
-target_link_libraries(stereo_tum_vi_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-if(realsense2_FOUND)
-    add_executable(stereo_realsense_t265_old
-            Examples_old/Stereo/stereo_realsense_t265.cc)
-    target_link_libraries(stereo_realsense_t265_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-    add_executable(stereo_realsense_D435i_old
-            Examples_old/Stereo/stereo_realsense_D435i.cc)
-    target_link_libraries(stereo_realsense_D435i_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-endif()
-
-#Monocular examples
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples_old/Monocular)
-
-add_executable(mono_tum_old
-        Examples_old/Monocular/mono_tum.cc)
-target_link_libraries(mono_tum_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-add_executable(mono_kitti_old
-        Examples_old/Monocular/mono_kitti.cc)
-target_link_libraries(mono_kitti_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-add_executable(mono_euroc_old
-        Examples_old/Monocular/mono_euroc.cc)
-target_link_libraries(mono_euroc_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-add_executable(mono_tum_vi_old
-        Examples_old/Monocular/mono_tum_vi.cc)
-target_link_libraries(mono_tum_vi_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-if(realsense2_FOUND)
-    add_executable(mono_realsense_t265_old
-            Examples_old/Monocular/mono_realsense_t265.cc)
-    target_link_libraries(mono_realsense_t265_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-    add_executable(mono_realsense_D435i_old
-            Examples_old/Monocular/mono_realsense_D435i.cc)
-    target_link_libraries(mono_realsense_D435i_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-endif()
-
-#Monocular inertial examples
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples_old/Monocular-Inertial)
-
-add_executable(mono_inertial_euroc_old
-        Examples_old/Monocular-Inertial/mono_inertial_euroc.cc)
-target_link_libraries(mono_inertial_euroc_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-add_executable(mono_inertial_tum_vi_old
-        Examples_old/Monocular-Inertial/mono_inertial_tum_vi.cc)
-target_link_libraries(mono_inertial_tum_vi_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-if(realsense2_FOUND)
-    add_executable(mono_inertial_realsense_t265_old
-            Examples_old/Monocular-Inertial/mono_inertial_realsense_t265.cc)
-    target_link_libraries(mono_inertial_realsense_t265_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-    add_executable(mono_inertial_realsense_D435i_old
-            Examples_old/Monocular-Inertial/mono_inertial_realsense_D435i.cc)
-    target_link_libraries(mono_inertial_realsense_D435i_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-endif()
-
-#Stereo Inertial examples
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples_old/Stereo-Inertial)
-
-add_executable(stereo_inertial_euroc_old
-        Examples_old/Stereo-Inertial/stereo_inertial_euroc.cc)
-target_link_libraries(stereo_inertial_euroc_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-add_executable(stereo_inertial_tum_vi_old
-        Examples_old/Stereo-Inertial/stereo_inertial_tum_vi.cc)
-target_link_libraries(stereo_inertial_tum_vi_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-if(realsense2_FOUND)
-    add_executable(stereo_inertial_realsense_t265_old
-            Examples_old/Stereo-Inertial/stereo_inertial_realsense_t265.cc)
-    target_link_libraries(stereo_inertial_realsense_t265_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-
-    add_executable(stereo_inertial_realsense_D435i_old
-            Examples_old/Stereo-Inertial/stereo_inertial_realsense_D435i.cc)
-    target_link_libraries(stereo_inertial_realsense_D435i_old ${PROJECT_NAME} -ldl ${EGL_LIBRARIES} ${GLES_LIBRARIES})
-endif()
diff --git a/Examples/Calibration/recorder_realsense_T265.cc b/Examples/Calibration/imx_recorder_realsense_T265.cc
similarity index 96%
rename from Examples/Calibration/recorder_realsense_T265.cc
rename to Examples/Calibration/imx_recorder_realsense_T265.cc
index a846777..38929c1 100644
--- a/Examples/Calibration/recorder_realsense_T265.cc
+++ b/Examples/Calibration/imx_recorder_realsense_T265.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
diff --git a/Examples/Calibration/recorder_realsense_D435i.cc b/Examples/Calibration/recorder_realsense_D435i.cc
deleted file mode 100644
index 1d38dca..0000000
--- a/Examples/Calibration/recorder_realsense_D435i.cc
+++ /dev/null
@@ -1,286 +0,0 @@
-/**
-* This file is part of ORB-SLAM3
-*
-* Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
-* Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
-*
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
-* License as published by the Free Software Foundation, either version 3 of the License, or
-* (at your option) any later version.
-*
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
-* the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-* GNU General Public License for more details.
-*
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
-* If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include <signal.h>
-#include <stdlib.h>
-#include <iostream>
-#include <algorithm>
-#include <fstream>
-#include <chrono>
-#include <ctime>
-#include <sstream>
-#include <iomanip>
-
-#include <condition_variable>
-
-#include <opencv2/core/core.hpp>
-#include <opencv2/highgui.hpp>
-
-#include <librealsense2/rs.hpp>
-#include "librealsense2/rsutil.h"
-
-using namespace std;
-
-bool b_continue_session;
-
-void exit_loop_handler(int s){
-    cout << "Finishing session" << endl;
-    b_continue_session = false;
-
-}
-
-static rs2_option get_sensor_option(const rs2::sensor& sensor)
-{
-    // Sensors usually have several options to control their properties
-    //  such as Exposure, Brightness etc.
-
-    std::cout << "Sensor supports the following options:\n" << std::endl;
-
-    // The following loop shows how to iterate over all available options
-    // Starting from 0 until RS2_OPTION_COUNT (exclusive)
-    for (int i = 0; i < static_cast<int>(RS2_OPTION_COUNT); i++)
-    {
-        rs2_option option_type = static_cast<rs2_option>(i);
-        //SDK enum types can be streamed to get a string that represents them
-        std::cout << "  " << i << ": " << option_type;
-
-        // To control an option, use the following api:
-
-        // First, verify that the sensor actually supports this option
-        if (sensor.supports(option_type))
-        {
-            std::cout << std::endl;
-
-            // Get a human readable description of the option
-            const char* description = sensor.get_option_description(option_type);
-            std::cout << "       Description   : " << description << std::endl;
-
-            // Get the current value of the option
-            float current_value = sensor.get_option(option_type);
-            std::cout << "       Current Value : " << current_value << std::endl;
-
-            //To change the value of an option, please follow the change_sensor_option() function
-        }
-        else
-        {
-            std::cout << " is not supported" << std::endl;
-        }
-    }
-
-    uint32_t selected_sensor_option = 0;
-    return static_cast<rs2_option>(selected_sensor_option);
-}
-
-int main(int argc, char **argv) {
-
-    if (argc != 2) {
-        cerr << endl
-             << "Usage: ./recorder_realsense_D435i path_to_saving_folder"
-             << endl;
-        return 1;
-    }
-
-    string directory = string(argv[argc - 1]);
-
-    struct sigaction sigIntHandler;
-
-
-    sigIntHandler.sa_handler = exit_loop_handler;
-    sigemptyset(&sigIntHandler.sa_mask);
-    sigIntHandler.sa_flags = 0;
-
-    sigaction(SIGINT, &sigIntHandler, NULL);
-    b_continue_session = true;
-
-    double offset = 0; // ms
-
-    rs2::context ctx;
-    rs2::device_list devices = ctx.query_devices();
-    rs2::device selected_device;
-    if (devices.size() == 0)
-    {
-        std::cerr << "No device connected, please connect a RealSense device" << std::endl;
-        return 0;
-    }
-    else
-        selected_device = devices[0];
-
-    std::vector<rs2::sensor> sensors = selected_device.query_sensors();
-    int index = 0;
-    // We can now iterate the sensors and print their names
-    for (rs2::sensor sensor : sensors)
-        if (sensor.supports(RS2_CAMERA_INFO_NAME)) {
-            ++index;
-            if (index == 1) {
-                sensor.set_option(RS2_OPTION_ENABLE_AUTO_EXPOSURE, 1);
-                sensor.set_option(RS2_OPTION_AUTO_EXPOSURE_LIMIT,5000);
-                sensor.set_option(RS2_OPTION_EMITTER_ENABLED, 0);
-            }
-            // std::cout << "  " << index << " : " << sensor.get_info(RS2_CAMERA_INFO_NAME) << std::endl;
-            get_sensor_option(sensor);
-            if (index == 2){
-                // RGB camera
-                sensor.set_option(RS2_OPTION_EXPOSURE,100.f);
-            }
-
-            if (index == 3){
-                sensor.set_option(RS2_OPTION_ENABLE_MOTION_CORRECTION,0);
-            }
-
-        }
-
-    // Declare RealSense pipeline, encapsulating the actual device and sensors
-    rs2::pipeline pipe;
-    // Create a configuration for configuring the pipeline with a non default profile
-    rs2::config cfg;
-    cfg.enable_stream(RS2_STREAM_INFRARED, 1, 640, 480, RS2_FORMAT_Y8, 30);
-    cfg.enable_stream(RS2_STREAM_ACCEL, RS2_FORMAT_MOTION_XYZ32F); //, 250); // 63
-    cfg.enable_stream(RS2_STREAM_GYRO, RS2_FORMAT_MOTION_XYZ32F); //, 400);
-
-    // IMU callback
-    std::mutex imu_mutex;
-    std::condition_variable cond_image_rec;
-
-    vector<double> v_gyro_timestamp;
-    vector<rs2_vector> v_gyro_data;
-    vector<double> v_acc_timestamp;
-    vector<rs2_vector> v_acc_data;
-
-    cv::Mat imCV;
-    int width_img, height_img;
-    double timestamp_image;
-    bool image_ready = false;
-
-
-    auto imu_callback = [&](const rs2::frame& frame)
-    {
-        std::unique_lock<std::mutex> lock(imu_mutex);
-
-        if(rs2::frameset fs = frame.as<rs2::frameset>())
-        {
-            rs2::video_frame color_frame = fs.get_infrared_frame();
-            imCV = cv::Mat(cv::Size(width_img, height_img), CV_8U, (void*)(color_frame.get_data()), cv::Mat::AUTO_STEP);
-
-            timestamp_image = fs.get_timestamp()*1e-3;
-            image_ready = true;
-
-            lock.unlock();
-            cond_image_rec.notify_all();
-        }
-        else if (rs2::motion_frame m_frame = frame.as<rs2::motion_frame>())
-        {
-            if (m_frame.get_profile().stream_name() == "Gyro")
-            {
-                // It runs at 200Hz
-                v_gyro_data.push_back(m_frame.get_motion_data());
-                v_gyro_timestamp.push_back((m_frame.get_timestamp()+offset)*1e-3);
-            }
-            else if (m_frame.get_profile().stream_name() == "Accel")
-            {
-                // It runs at 60Hz
-                v_acc_data.push_back(m_frame.get_motion_data());
-                v_acc_timestamp.push_back((m_frame.get_timestamp()+offset)*1e-3);
-            }
-        }
-    };
-
-    rs2::pipeline_profile pipe_profile = pipe.start(cfg, imu_callback);
-    rs2::stream_profile cam_stream = pipe_profile.get_stream(RS2_STREAM_INFRARED, 1);
-    rs2::stream_profile imu_stream = pipe_profile.get_stream(RS2_STREAM_GYRO);
-
-    rs2_intrinsics intrinsics_cam = cam_stream.as<rs2::video_stream_profile>().get_intrinsics();
-    width_img = intrinsics_cam.width;
-    height_img = intrinsics_cam.height;
-
-    cv::Mat im;
-    ofstream accFile, gyroFile, cam0TsFile;
-    accFile.open (directory + "/IMU/acc.txt");
-    gyroFile.open (directory + "/IMU/gyro.txt");
-    cam0TsFile.open (directory + "/cam0/times.txt");
-
-    // Clear IMU vectors
-    v_gyro_data.clear();
-    v_gyro_timestamp.clear();
-    v_acc_data.clear();
-    v_acc_timestamp.clear();
-
-    cv::namedWindow("cam0",cv::WINDOW_AUTOSIZE);
-
-    while (b_continue_session){
-        std::vector<rs2_vector> vGyro;
-        std::vector<double> vGyro_times;
-        std::vector<rs2_vector> vAccel, vAccel_Sync;
-        std::vector<double> vAccel_times;
-        double imTs;
-        {
-            {
-                std::unique_lock<std::mutex> lk(imu_mutex);
-                if (!image_ready) // wait until image read from the other thread
-                    cond_image_rec.wait(lk);
-            }
-            std::lock_guard<std::mutex> lk(imu_mutex);
-
-            // Copy the IMU data to local single thread variables
-            vGyro = v_gyro_data;
-            vGyro_times = v_gyro_timestamp;
-            vAccel = v_acc_data;
-            vAccel_times = v_acc_timestamp;
-            imTs = timestamp_image;
-            im = imCV.clone();
-
-            // Clear IMU vectors
-            v_gyro_data.clear();
-            v_gyro_timestamp.clear();
-            v_acc_data.clear();
-            v_acc_timestamp.clear();
-
-            image_ready = false;
-        }
-
-        cv::imshow("cam0",im);
-
-        // save image and IMU data
-        long int imTsInt = (long int) (1e9*imTs);
-        string imgRepo = directory + "/cam0/" + to_string(imTsInt) + ".png";
-        if(!im.empty()) {
-            cv::imwrite(imgRepo, im);
-            cam0TsFile << imTsInt << endl;
-        } else {
-            cout << "image empty!! \n";
-        }
-
-        //assert(vAccel.size() == vAccel_times.size());
-        //assert(vGyro.size() == vGyro_times.size());
-
-        for(int i=0; i<vAccel.size(); ++i){
-            accFile << std::setprecision(15) << vAccel_times[i] << "," << vAccel[i].x << "," << vAccel[i].y << "," << vAccel[i].z << endl;
-        }
-
-        for(int i=0; i<vGyro.size(); ++i){
-            gyroFile << std::setprecision(15) << vGyro_times[i] << "," << vGyro[i].x << "," << vGyro[i].y << "," << vGyro[i].z << endl;
-        }
-
-        cv::waitKey(10);
-    }
-
-    accFile.close();
-    gyroFile.close();
-    cam0TsFile.close();
-
-    cout << "System shutdown!\n";
-}
\ No newline at end of file
diff --git a/Examples/Monocular-Inertial/mono_inertial_euroc.cc b/Examples/Monocular-Inertial/imx_mono_inertial_euroc.cc
similarity index 94%
rename from Examples/Monocular-Inertial/mono_inertial_euroc.cc
rename to Examples/Monocular-Inertial/imx_mono_inertial_euroc.cc
index c1e23ca..e99fdd0 100644
--- a/Examples/Monocular-Inertial/mono_inertial_euroc.cc
+++ b/Examples/Monocular-Inertial/imx_mono_inertial_euroc.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -117,7 +118,7 @@ int main(int argc, char *argv[])
     cout.precision(17);
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_MONOCULAR, true);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_MONOCULAR, true);
     float imageScale = SLAM.GetImageScale();
 
     double t_resize = 0.f;
@@ -129,7 +130,7 @@ int main(int argc, char *argv[])
 
         // Main loop
         cv::Mat im;
-        vector<ORB_SLAM3::IMU::Point> vImuMeas;
+        vector<imx_hc_slam::IMU::Point> vImuMeas;
         proccIm = 0;
         for(int ni=0; ni<nImages[seq]; ni++, proccIm++)
         {
@@ -177,7 +178,7 @@ int main(int argc, char *argv[])
 
                 while(vTimestampsImu[seq][first_imu[seq]]<=vTimestampsCam[seq][ni])
                 {
-                    vImuMeas.push_back(ORB_SLAM3::IMU::Point(vAcc[seq][first_imu[seq]].x,vAcc[seq][first_imu[seq]].y,vAcc[seq][first_imu[seq]].z,
+                    vImuMeas.push_back(imx_hc_slam::IMU::Point(vAcc[seq][first_imu[seq]].x,vAcc[seq][first_imu[seq]].y,vAcc[seq][first_imu[seq]].z,
                                                              vGyro[seq][first_imu[seq]].x,vGyro[seq][first_imu[seq]].y,vGyro[seq][first_imu[seq]].z,
                                                              vTimestampsImu[seq][first_imu[seq]]));
                     first_imu[seq]++;
diff --git a/Examples/Monocular-Inertial/mono_inertial_realsense_D435i.cc b/Examples/Monocular-Inertial/imx_mono_inertial_realsense_D435i.cc
similarity index 96%
rename from Examples/Monocular-Inertial/mono_inertial_realsense_D435i.cc
rename to Examples/Monocular-Inertial/imx_mono_inertial_realsense_D435i.cc
index e7c18a3..7417456 100644
--- a/Examples/Monocular-Inertial/mono_inertial_realsense_D435i.cc
+++ b/Examples/Monocular-Inertial/imx_mono_inertial_realsense_D435i.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -257,7 +258,7 @@ int main(int argc, char **argv) {
 
     rs2::pipeline_profile pipe_profile = pipe.start(cfg, imu_callback);
 
-    vector<ORB_SLAM3::IMU::Point> vImuMeas;
+    vector<imx_hc_slam::IMU::Point> vImuMeas;
     rs2::stream_profile cam_stream = pipe_profile.get_stream(RS2_STREAM_INFRARED, 1);
 
 
@@ -287,7 +288,7 @@ int main(int argc, char **argv) {
 
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_MONOCULAR, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_MONOCULAR, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double timestamp;
@@ -356,7 +357,7 @@ int main(int argc, char **argv) {
 
         for(int i=0; i<vGyro.size(); ++i)
         {
-            ORB_SLAM3::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
+            imx_hc_slam::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
                                   vGyro[i].x, vGyro[i].y, vGyro[i].z,
                                   vGyro_times[i]);
             vImuMeas.push_back(lastPoint);
diff --git a/Examples/Monocular-Inertial/mono_inertial_realsense_t265.cc b/Examples/Monocular-Inertial/imx_mono_inertial_realsense_t265.cc
similarity index 96%
rename from Examples/Monocular-Inertial/mono_inertial_realsense_t265.cc
rename to Examples/Monocular-Inertial/imx_mono_inertial_realsense_t265.cc
index 0b1d2d6..83837ae 100644
--- a/Examples/Monocular-Inertial/mono_inertial_realsense_t265.cc
+++ b/Examples/Monocular-Inertial/imx_mono_inertial_realsense_t265.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -64,7 +65,7 @@ int main(int argc, char **argv)
         bFileName = true;
     }
 
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_MONOCULAR, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_MONOCULAR, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     struct sigaction sigIntHandler;
@@ -204,7 +205,7 @@ int main(int argc, char **argv)
 
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    vector<ORB_SLAM3::IMU::Point> vImuMeas;
+    vector<imx_hc_slam::IMU::Point> vImuMeas;
 
     double timestamp;
     cv::Mat im;
@@ -295,7 +296,7 @@ int main(int argc, char **argv)
 
 
         for(int i=0; i<vGyro.size(); ++i){
-            ORB_SLAM3::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
+            imx_hc_slam::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
                                             vGyro[i].x, vGyro[i].y, vGyro[i].z,
                                             vGyro_times[i]);
             vImuMeas.push_back(lastPoint);
diff --git a/Examples/Monocular-Inertial/mono_inertial_tum_vi.cc b/Examples/Monocular-Inertial/imx_mono_inertial_tum_vi.cc
similarity index 94%
rename from Examples/Monocular-Inertial/mono_inertial_tum_vi.cc
rename to Examples/Monocular-Inertial/imx_mono_inertial_tum_vi.cc
index fcfc5ae..ec4fec3 100644
--- a/Examples/Monocular-Inertial/mono_inertial_tum_vi.cc
+++ b/Examples/Monocular-Inertial/imx_mono_inertial_tum_vi.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -116,7 +117,7 @@ int main(int argc, char **argv)
     cout << "IMU data in the sequence: " << nImu << endl << endl;*/
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_MONOCULAR, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_MONOCULAR, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double t_resize = 0.f;
@@ -128,7 +129,7 @@ int main(int argc, char **argv)
 
         // Main loop
         cv::Mat im;
-        vector<ORB_SLAM3::IMU::Point> vImuMeas;
+        vector<imx_hc_slam::IMU::Point> vImuMeas;
         proccIm = 0;
         cv::Ptr<cv::CLAHE> clahe = cv::createCLAHE(3.0, cv::Size(8, 8));
         for(int ni=0; ni<nImages[seq]; ni++, proccIm++)
@@ -161,7 +162,7 @@ int main(int argc, char **argv)
 
                 while(vTimestampsImu[seq][first_imu[seq]]<=vTimestampsCam[seq][ni])
                 {
-                    vImuMeas.push_back(ORB_SLAM3::IMU::Point(vAcc[seq][first_imu[seq]].x,vAcc[seq][first_imu[seq]].y,vAcc[seq][first_imu[seq]].z,
+                    vImuMeas.push_back(imx_hc_slam::IMU::Point(vAcc[seq][first_imu[seq]].x,vAcc[seq][first_imu[seq]].y,vAcc[seq][first_imu[seq]].z,
                                                              vGyro[seq][first_imu[seq]].x,vGyro[seq][first_imu[seq]].y,vGyro[seq][first_imu[seq]].z,
                                                              vTimestampsImu[seq][first_imu[seq]]));
                     // cout << "t_imu = " << fixed << vImuMeas.back().t << endl;
diff --git a/Examples/Monocular/mono_euroc.cc b/Examples/Monocular/imx_mono_euroc.cc
similarity index 95%
rename from Examples/Monocular/mono_euroc.cc
rename to Examples/Monocular/imx_mono_euroc.cc
index a2e2934..eec743b 100644
--- a/Examples/Monocular/mono_euroc.cc
+++ b/Examples/Monocular/imx_mono_euroc.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -80,7 +81,7 @@ int main(int argc, char **argv)
     int fps = 20;
     float dT = 1.f/fps;
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::MONOCULAR, false);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::MONOCULAR, false);
     float imageScale = SLAM.GetImageScale();
 
     double t_resize = 0.f;
diff --git a/Examples/Monocular/mono_kitti.cc b/Examples/Monocular/imx_mono_kitti.cc
similarity index 91%
rename from Examples/Monocular/mono_kitti.cc
rename to Examples/Monocular/imx_mono_kitti.cc
index cd83590..749d63b 100644
--- a/Examples/Monocular/mono_kitti.cc
+++ b/Examples/Monocular/imx_mono_kitti.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -47,7 +48,7 @@ int main(int argc, char **argv)
     int nImages = vstrImageFilenames.size();
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::MONOCULAR,true);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::MONOCULAR,true);
     float imageScale = SLAM.GetImageScale();
 
     // Vector for tracking time statistics
@@ -105,7 +106,7 @@ int main(int argc, char **argv)
 #endif
 
         // Pass the image to the SLAM system
-        SLAM.TrackMonocular(im,tframe,vector<ORB_SLAM3::IMU::Point>(), vstrImageFilenames[ni]);
+        SLAM.TrackMonocular(im,tframe,vector<imx_hc_slam::IMU::Point>(), vstrImageFilenames[ni]);
 
 #ifdef COMPILEDWITHC11
         std::chrono::steady_clock::time_point t2 = std::chrono::steady_clock::now();
diff --git a/Examples/Monocular/mono_realsense_D435i.cc b/Examples/Monocular/imx_mono_realsense_D435i.cc
similarity index 96%
rename from Examples/Monocular/mono_realsense_D435i.cc
rename to Examples/Monocular/imx_mono_realsense_D435i.cc
index 1019345..7a13837 100644
--- a/Examples/Monocular/mono_realsense_D435i.cc
+++ b/Examples/Monocular/imx_mono_realsense_D435i.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -207,7 +208,7 @@ int main(int argc, char **argv) {
     std::cout << " Model = " << intrinsics_left.model << std::endl;
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::MONOCULAR, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::MONOCULAR, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double timestamp;
diff --git a/Examples/Monocular/mono_realsense_t265.cc b/Examples/Monocular/imx_mono_realsense_t265.cc
similarity index 93%
rename from Examples/Monocular/mono_realsense_t265.cc
rename to Examples/Monocular/imx_mono_realsense_t265.cc
index 5e7c5a2..7ec79ec 100644
--- a/Examples/Monocular/mono_realsense_t265.cc
+++ b/Examples/Monocular/imx_mono_realsense_t265.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -87,7 +88,7 @@ int main(int argc, char **argv)
     cout << "IMU data in the sequence: " << nImu << endl << endl;*/
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::MONOCULAR, true);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::MONOCULAR, true);
     float imageScale = SLAM.GetImageScale();
 
     cv::Mat imCV;
diff --git a/Examples/Monocular/mono_tum.cc b/Examples/Monocular/imx_mono_tum.cc
similarity index 93%
rename from Examples/Monocular/mono_tum.cc
rename to Examples/Monocular/imx_mono_tum.cc
index fb187bf..4ffa27c 100644
--- a/Examples/Monocular/mono_tum.cc
+++ b/Examples/Monocular/imx_mono_tum.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -47,7 +48,7 @@ int main(int argc, char **argv)
     int nImages = vstrImageFilenames.size();
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::MONOCULAR,true);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::MONOCULAR,true);
     float imageScale = SLAM.GetImageScale();
 
     // Vector for tracking time statistics
diff --git a/Examples/Monocular/mono_tum_vi.cc b/Examples/Monocular/imx_mono_tum_vi.cc
similarity index 94%
rename from Examples/Monocular/mono_tum_vi.cc
rename to Examples/Monocular/imx_mono_tum_vi.cc
index 9677ed7..21f6fc6 100644
--- a/Examples/Monocular/mono_tum_vi.cc
+++ b/Examples/Monocular/imx_mono_tum_vi.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -89,7 +90,7 @@ int main(int argc, char **argv)
     cout.precision(17);
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::MONOCULAR,false, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::MONOCULAR,false, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double t_resize = 0.f;
diff --git a/Examples/REAMDME.md b/Examples/REAMDME.md
deleted file mode 100644
index 1966480..0000000
--- a/Examples/REAMDME.md
+++ /dev/null
@@ -1 +0,0 @@
-This repository contains examples for running ORB-SLAM3 with the most common SLAM datasets using the new calibration format files.
\ No newline at end of file
diff --git a/Examples/RGB-D-Inertial/rgbd_inertial_realsense_D435i.cc b/Examples/RGB-D-Inertial/imx_rgbd_inertial_realsense_D435i.cc
similarity index 97%
rename from Examples/RGB-D-Inertial/rgbd_inertial_realsense_D435i.cc
rename to Examples/RGB-D-Inertial/imx_rgbd_inertial_realsense_D435i.cc
index 673dd36..07d9c65 100644
--- a/Examples/RGB-D-Inertial/rgbd_inertial_realsense_D435i.cc
+++ b/Examples/RGB-D-Inertial/imx_rgbd_inertial_realsense_D435i.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -290,7 +291,7 @@ int main(int argc, char **argv) {
     pipe_profile = pipe.start(cfg, imu_callback);
 
 
-    vector<ORB_SLAM3::IMU::Point> vImuMeas;
+    vector<imx_hc_slam::IMU::Point> vImuMeas;
     rs2::stream_profile cam_stream = pipe_profile.get_stream(RS2_STREAM_COLOR);
 
     rs2::stream_profile imu_stream = pipe_profile.get_stream(RS2_STREAM_GYRO);
@@ -318,7 +319,7 @@ int main(int argc, char **argv) {
 
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_RGBD, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_RGBD, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double timestamp;
@@ -403,7 +404,7 @@ int main(int argc, char **argv) {
 
         for(int i=0; i<vGyro.size(); ++i)
         {
-            ORB_SLAM3::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
+            imx_hc_slam::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
                                             vGyro[i].x, vGyro[i].y, vGyro[i].z,
                                             vGyro_times[i]);
             vImuMeas.push_back(lastPoint);
diff --git a/Examples/RGB-D/rgbd_realsense_D435i.cc b/Examples/RGB-D/imx_rgbd_realsense_D435i.cc
similarity index 97%
rename from Examples/RGB-D/rgbd_realsense_D435i.cc
rename to Examples/RGB-D/imx_rgbd_realsense_D435i.cc
index 140d398..b51f2c0 100644
--- a/Examples/RGB-D/rgbd_realsense_D435i.cc
+++ b/Examples/RGB-D/imx_rgbd_realsense_D435i.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -306,7 +307,7 @@ int main(int argc, char **argv) {
 
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::RGBD, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::RGBD, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double timestamp;
diff --git a/Examples/RGB-D/rgbd_tum.cc b/Examples/RGB-D/imx_rgbd_tum.cc
similarity index 93%
rename from Examples/RGB-D/rgbd_tum.cc
rename to Examples/RGB-D/imx_rgbd_tum.cc
index 7905a90..fc49fc3 100644
--- a/Examples/RGB-D/rgbd_tum.cc
+++ b/Examples/RGB-D/imx_rgbd_tum.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -59,7 +60,7 @@ int main(int argc, char **argv)
     }
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::RGBD,true);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::RGBD,true);
     float imageScale = SLAM.GetImageScale();
 
     // Vector for tracking time statistics
diff --git a/Examples/Stereo-Inertial/stereo_inertial_euroc.cc b/Examples/Stereo-Inertial/imx_stereo_inertial_euroc.cc
similarity index 94%
rename from Examples/Stereo-Inertial/stereo_inertial_euroc.cc
rename to Examples/Stereo-Inertial/imx_stereo_inertial_euroc.cc
index 1fde353..01cd040 100644
--- a/Examples/Stereo-Inertial/stereo_inertial_euroc.cc
+++ b/Examples/Stereo-Inertial/imx_stereo_inertial_euroc.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -129,13 +130,13 @@ int main(int argc, char **argv)
     cout.precision(17);
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_STEREO, false);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_STEREO, false);
 
     cv::Mat imLeft, imRight;
     for (seq = 0; seq<num_seq; seq++)
     {
         // Seq loop
-        vector<ORB_SLAM3::IMU::Point> vImuMeas;
+        vector<imx_hc_slam::IMU::Point> vImuMeas;
         double t_rect = 0.f;
         double t_resize = 0.f;
         double t_track = 0.f;
@@ -169,7 +170,7 @@ int main(int argc, char **argv)
             if(ni>0)
                 while(vTimestampsImu[seq][first_imu[seq]]<=vTimestampsCam[seq][ni]) // while(vTimestampsImu[first_imu]<=vTimestampsCam[ni])
                 {
-                    vImuMeas.push_back(ORB_SLAM3::IMU::Point(vAcc[seq][first_imu[seq]].x,vAcc[seq][first_imu[seq]].y,vAcc[seq][first_imu[seq]].z,
+                    vImuMeas.push_back(imx_hc_slam::IMU::Point(vAcc[seq][first_imu[seq]].x,vAcc[seq][first_imu[seq]].y,vAcc[seq][first_imu[seq]].z,
                                                              vGyro[seq][first_imu[seq]].x,vGyro[seq][first_imu[seq]].y,vGyro[seq][first_imu[seq]].z,
                                                              vTimestampsImu[seq][first_imu[seq]]));
                     first_imu[seq]++;
diff --git a/Examples/Stereo-Inertial/stereo_inertial_realsense_D435i.cc b/Examples/Stereo-Inertial/imx_stereo_inertial_realsense_D435i.cc
similarity index 97%
rename from Examples/Stereo-Inertial/stereo_inertial_realsense_D435i.cc
rename to Examples/Stereo-Inertial/imx_stereo_inertial_realsense_D435i.cc
index 186f89d..f7a73e6 100644
--- a/Examples/Stereo-Inertial/stereo_inertial_realsense_D435i.cc
+++ b/Examples/Stereo-Inertial/imx_stereo_inertial_realsense_D435i.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -261,7 +262,7 @@ int main(int argc, char **argv) {
 
     rs2::pipeline_profile pipe_profile = pipe.start(cfg, imu_callback);
 
-    vector<ORB_SLAM3::IMU::Point> vImuMeas;
+    vector<imx_hc_slam::IMU::Point> vImuMeas;
     rs2::stream_profile cam_left = pipe_profile.get_stream(RS2_STREAM_INFRARED, 1);
     rs2::stream_profile cam_right = pipe_profile.get_stream(RS2_STREAM_INFRARED, 2);
 
@@ -317,7 +318,7 @@ int main(int argc, char **argv) {
 
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_STEREO, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_STEREO, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double timestamp;
@@ -387,7 +388,7 @@ int main(int argc, char **argv) {
 
         for(int i=0; i<vGyro.size(); ++i)
         {
-            ORB_SLAM3::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
+            imx_hc_slam::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
                                   vGyro[i].x, vGyro[i].y, vGyro[i].z,
                                   vGyro_times[i]);
             vImuMeas.push_back(lastPoint);
diff --git a/Examples/Stereo-Inertial/stereo_inertial_realsense_t265.cc b/Examples/Stereo-Inertial/imx_stereo_inertial_realsense_t265.cc
similarity index 95%
rename from Examples/Stereo-Inertial/stereo_inertial_realsense_t265.cc
rename to Examples/Stereo-Inertial/imx_stereo_inertial_realsense_t265.cc
index 40602ce..d81c9f0 100644
--- a/Examples/Stereo-Inertial/stereo_inertial_realsense_t265.cc
+++ b/Examples/Stereo-Inertial/imx_stereo_inertial_realsense_t265.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -66,7 +67,7 @@ int main(int argc, char **argv)
         bFileName = true;
     }
 
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_STEREO, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_STEREO, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     struct sigaction sigIntHandler;
@@ -194,7 +195,7 @@ int main(int argc, char **argv)
     }
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    vector<ORB_SLAM3::IMU::Point> vImuMeas;
+    vector<imx_hc_slam::IMU::Point> vImuMeas;
 
     double timestamp;
     cv::Mat im,imright;
@@ -282,7 +283,7 @@ int main(int argc, char **argv)
 
 
         for(int i=0; i<vGyro.size(); ++i){
-            ORB_SLAM3::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
+            imx_hc_slam::IMU::Point lastPoint(vAccel[i].x, vAccel[i].y, vAccel[i].z,
                                             vGyro[i].x, vGyro[i].y, vGyro[i].z,
                                             vGyro_times[i]);
             vImuMeas.push_back(lastPoint);
diff --git a/Examples/Stereo-Inertial/stereo_inertial_tum_vi.cc b/Examples/Stereo-Inertial/imx_stereo_inertial_tum_vi.cc
similarity index 94%
rename from Examples/Stereo-Inertial/stereo_inertial_tum_vi.cc
rename to Examples/Stereo-Inertial/imx_stereo_inertial_tum_vi.cc
index 5dee13b..e30af91 100644
--- a/Examples/Stereo-Inertial/stereo_inertial_tum_vi.cc
+++ b/Examples/Stereo-Inertial/imx_stereo_inertial_tum_vi.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -119,7 +120,7 @@ int main(int argc, char **argv)
     cout << "IMU data in the sequence: " << nImu << endl << endl;*/
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::IMU_STEREO, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::IMU_STEREO, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double t_resize = 0.f;
@@ -131,7 +132,7 @@ int main(int argc, char **argv)
 
         // Main loop
         cv::Mat imLeft, imRight;
-        vector<ORB_SLAM3::IMU::Point> vImuMeas;
+        vector<imx_hc_slam::IMU::Point> vImuMeas;
         proccIm = 0;
         cv::Ptr<cv::CLAHE> clahe = cv::createCLAHE(3.0, cv::Size(8, 8));
         for(int ni=0; ni<nImages[seq]; ni++, proccIm++)
@@ -188,8 +189,8 @@ int main(int argc, char **argv)
 
                 while(vTimestampsImu[seq][first_imu[seq]]<=vTimestampsCam[seq][ni])
                 {
-                    // vImuMeas.push_back(ORB_SLAM3::IMU::Point(vAcc[first_imu],vGyro[first_imu],vTimestampsImu[first_imu]));
-                    vImuMeas.push_back(ORB_SLAM3::IMU::Point(vAcc[seq][first_imu[seq]].x,vAcc[seq][first_imu[seq]].y,vAcc[seq][first_imu[seq]].z,
+                    // vImuMeas.push_back(imx-hc-slam::IMU::Point(vAcc[first_imu],vGyro[first_imu],vTimestampsImu[first_imu]));
+                    vImuMeas.push_back(imx_hc_slam::IMU::Point(vAcc[seq][first_imu[seq]].x,vAcc[seq][first_imu[seq]].y,vAcc[seq][first_imu[seq]].z,
                                                              vGyro[seq][first_imu[seq]].x,vGyro[seq][first_imu[seq]].y,vGyro[seq][first_imu[seq]].z,
                                                              vTimestampsImu[seq][first_imu[seq]]));
                     // cout << "t_imu = " << fixed << vImuMeas.back().t << endl;
diff --git a/Examples/Stereo/stereo_euroc.cc b/Examples/Stereo/imx_stereo_euroc.cc
similarity index 93%
rename from Examples/Stereo/stereo_euroc.cc
rename to Examples/Stereo/imx_stereo_euroc.cc
index ca872f9..96aa2b2 100644
--- a/Examples/Stereo/stereo_euroc.cc
+++ b/Examples/Stereo/imx_stereo_euroc.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -88,7 +89,7 @@ int main(int argc, char **argv)
     cout.precision(17);
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::STEREO, true);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::STEREO, true);
 
     cv::Mat imLeft, imRight;
     for (seq = 0; seq<num_seq; seq++)
@@ -129,7 +130,7 @@ int main(int argc, char **argv)
     #endif
 
             // Pass the images to the SLAM system
-            SLAM.TrackStereo(imLeft,imRight,tframe, vector<ORB_SLAM3::IMU::Point>(), vstrImageLeft[seq][ni]);
+            SLAM.TrackStereo(imLeft,imRight,tframe, vector<imx_hc_slam::IMU::Point>(), vstrImageLeft[seq][ni]);
 
     #ifdef COMPILEDWITHC11
             std::chrono::steady_clock::time_point t2 = std::chrono::steady_clock::now();
diff --git a/Examples/Stereo/stereo_kitti.cc b/Examples/Stereo/imx_stereo_kitti.cc
similarity index 93%
rename from Examples/Stereo/stereo_kitti.cc
rename to Examples/Stereo/imx_stereo_kitti.cc
index 6977a55..c971aca 100644
--- a/Examples/Stereo/stereo_kitti.cc
+++ b/Examples/Stereo/imx_stereo_kitti.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -48,7 +49,7 @@ int main(int argc, char **argv)
     const int nImages = vstrImageLeft.size();
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::STEREO,true);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::STEREO,true);
     float imageScale = SLAM.GetImageScale();
 
     // Vector for tracking time statistics
diff --git a/Examples/Stereo/stereo_realsense_D435i.cc b/Examples/Stereo/imx_stereo_realsense_D435i.cc
similarity index 96%
rename from Examples/Stereo/stereo_realsense_D435i.cc
rename to Examples/Stereo/imx_stereo_realsense_D435i.cc
index ac5896a..6be3249 100644
--- a/Examples/Stereo/stereo_realsense_D435i.cc
+++ b/Examples/Stereo/imx_stereo_realsense_D435i.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -238,7 +239,7 @@ int main(int argc, char **argv) {
 
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::STEREO, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::STEREO, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     double timestamp;
diff --git a/Examples/Stereo/stereo_realsense_t265.cc b/Examples/Stereo/imx_stereo_realsense_t265.cc
similarity index 93%
rename from Examples/Stereo/stereo_realsense_t265.cc
rename to Examples/Stereo/imx_stereo_realsense_t265.cc
index cf3732f..adf7722 100644
--- a/Examples/Stereo/stereo_realsense_t265.cc
+++ b/Examples/Stereo/imx_stereo_realsense_t265.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -89,11 +90,11 @@ int main(int argc, char **argv)
     cout << "IMU data in the sequence: " << nImu << endl << endl;*/
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::STEREO, true, 0, file_name);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::STEREO, true, 0, file_name);
     float imageScale = SLAM.GetImageScale();
 
     cv::Mat imLeft, imRight;
-    vector<ORB_SLAM3::IMU::Point> vImuMeas;
+    vector<imx_hc_slam::IMU::Point> vImuMeas;
 
     rs2::stream_profile fisheye_stream_left = pipe_profile.get_stream(RS2_STREAM_FISHEYE, 1);
     rs2_intrinsics intrinsics_left = fisheye_stream_left.as<rs2::video_stream_profile>().get_intrinsics();
diff --git a/Examples/Stereo/stereo_tum_vi.cc b/Examples/Stereo/imx_stereo_tum_vi.cc
similarity index 96%
rename from Examples/Stereo/stereo_tum_vi.cc
rename to Examples/Stereo/imx_stereo_tum_vi.cc
index 3c95458..9f2dc3f 100644
--- a/Examples/Stereo/stereo_tum_vi.cc
+++ b/Examples/Stereo/imx_stereo_tum_vi.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 #include <unistd.h>
@@ -90,7 +91,7 @@ int main(int argc, char **argv)
     cout.precision(17);
 
     // Create SLAM system. It initializes all system threads and gets ready to process frames.
-    ORB_SLAM3::System SLAM(argv[1],argv[2],ORB_SLAM3::System::STEREO,true);
+    imx_hc_slam::System SLAM(argv[1],argv[2],imx_hc_slam::System::STEREO,true);
     float imageScale = SLAM.GetImageScale();
 
     cout << endl << "-------" << endl;
diff --git a/Thirdparty/DBoW2/CMakeLists.txt b/Thirdparty/DBoW2-imx/CMakeLists.txt
similarity index 87%
rename from Thirdparty/DBoW2/CMakeLists.txt
rename to Thirdparty/DBoW2-imx/CMakeLists.txt
index 8753e59..7511034 100644
--- a/Thirdparty/DBoW2/CMakeLists.txt
+++ b/Thirdparty/DBoW2-imx/CMakeLists.txt
@@ -1,5 +1,5 @@
 cmake_minimum_required(VERSION 2.8)
-project(DBoW2)
+project(DBoW2-imx)
 
 if(NOT CMAKE_BUILD_TYPE)
   set(CMAKE_BUILD_TYPE Release)
@@ -40,6 +40,6 @@ endif()
 set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
 
 include_directories(${OpenCV_INCLUDE_DIRS})
-add_library(DBoW2 SHARED ${SRCS_DBOW2} ${SRCS_DUTILS})
-target_link_libraries(DBoW2 ${OpenCV_LIBS})
+add_library(DBoW2-imx SHARED ${SRCS_DBOW2} ${SRCS_DUTILS})
+target_link_libraries(DBoW2-imx ${OpenCV_LIBS})
 
diff --git a/Thirdparty/DBoW2/DBoW2/BowVector.cpp b/Thirdparty/DBoW2-imx/DBoW2/BowVector.cpp
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/BowVector.cpp
rename to Thirdparty/DBoW2-imx/DBoW2/BowVector.cpp
diff --git a/Thirdparty/DBoW2/DBoW2/BowVector.h b/Thirdparty/DBoW2-imx/DBoW2/BowVector.h
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/BowVector.h
rename to Thirdparty/DBoW2-imx/DBoW2/BowVector.h
diff --git a/Thirdparty/DBoW2/DBoW2/FClass.h b/Thirdparty/DBoW2-imx/DBoW2/FClass.h
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/FClass.h
rename to Thirdparty/DBoW2-imx/DBoW2/FClass.h
diff --git a/Thirdparty/DBoW2/DBoW2/FORB.cpp b/Thirdparty/DBoW2-imx/DBoW2/FORB.cpp
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/FORB.cpp
rename to Thirdparty/DBoW2-imx/DBoW2/FORB.cpp
diff --git a/Thirdparty/DBoW2/DBoW2/FORB.h b/Thirdparty/DBoW2-imx/DBoW2/FORB.h
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/FORB.h
rename to Thirdparty/DBoW2-imx/DBoW2/FORB.h
diff --git a/Thirdparty/DBoW2/DBoW2/FeatureVector.cpp b/Thirdparty/DBoW2-imx/DBoW2/FeatureVector.cpp
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/FeatureVector.cpp
rename to Thirdparty/DBoW2-imx/DBoW2/FeatureVector.cpp
diff --git a/Thirdparty/DBoW2/DBoW2/FeatureVector.h b/Thirdparty/DBoW2-imx/DBoW2/FeatureVector.h
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/FeatureVector.h
rename to Thirdparty/DBoW2-imx/DBoW2/FeatureVector.h
diff --git a/Thirdparty/DBoW2/DBoW2/ScoringObject.cpp b/Thirdparty/DBoW2-imx/DBoW2/ScoringObject.cpp
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/ScoringObject.cpp
rename to Thirdparty/DBoW2-imx/DBoW2/ScoringObject.cpp
diff --git a/Thirdparty/DBoW2/DBoW2/ScoringObject.h b/Thirdparty/DBoW2-imx/DBoW2/ScoringObject.h
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/ScoringObject.h
rename to Thirdparty/DBoW2-imx/DBoW2/ScoringObject.h
diff --git a/Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h b/Thirdparty/DBoW2-imx/DBoW2/TemplatedVocabulary.h
similarity index 100%
rename from Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h
rename to Thirdparty/DBoW2-imx/DBoW2/TemplatedVocabulary.h
diff --git a/Thirdparty/DBoW2/DUtils/Random.cpp b/Thirdparty/DBoW2-imx/DUtils/Random.cpp
similarity index 100%
rename from Thirdparty/DBoW2/DUtils/Random.cpp
rename to Thirdparty/DBoW2-imx/DUtils/Random.cpp
diff --git a/Thirdparty/DBoW2/DUtils/Random.h b/Thirdparty/DBoW2-imx/DUtils/Random.h
similarity index 100%
rename from Thirdparty/DBoW2/DUtils/Random.h
rename to Thirdparty/DBoW2-imx/DUtils/Random.h
diff --git a/Thirdparty/DBoW2/README.txt b/Thirdparty/DBoW2-imx/README.txt
similarity index 100%
rename from Thirdparty/DBoW2/README.txt
rename to Thirdparty/DBoW2-imx/README.txt
diff --git a/Thirdparty/DBoW2/DUtils/Timestamp.cpp b/Thirdparty/DBoW2/DUtils/Timestamp.cpp
deleted file mode 100644
index 4551839..0000000
--- a/Thirdparty/DBoW2/DUtils/Timestamp.cpp
+++ /dev/null
@@ -1,246 +0,0 @@
-/*
- * File: Timestamp.cpp
- * Author: Dorian Galvez-Lopez
- * Date: March 2009
- * Description: timestamping functions
- * 
- * Note: in windows, this class has a 1ms resolution
- *
- * License: see the LICENSE.txt file
- *
- */
-
-#include <cstdio>
-#include <cstdlib>
-#include <ctime>
-#include <cmath>
-#include <sstream>
-#include <iomanip>
-
-#ifdef _WIN32
-#ifndef WIN32
-#define WIN32
-#endif
-#endif
-
-#ifdef WIN32
-#include <sys/timeb.h>
-#define sprintf sprintf_s
-#else
-#include <sys/time.h>
-#endif
-
-#include "Timestamp.h"
-
-using namespace std;
-
-using namespace DUtils;
-
-Timestamp::Timestamp(Timestamp::tOptions option)
-{
-  if(option & CURRENT_TIME)
-    setToCurrentTime();
-  else if(option & ZERO)
-    setTime(0.);
-}
-
-Timestamp::~Timestamp(void)
-{
-}
-
-bool Timestamp::empty() const
-{
-  return m_secs == 0 && m_usecs == 0;
-}
-
-void Timestamp::setToCurrentTime(){
-	
-#ifdef WIN32
-	struct __timeb32 timebuffer;
-	_ftime32_s( &timebuffer ); // C4996
-	// Note: _ftime is deprecated; consider using _ftime_s instead
-	m_secs = timebuffer.time;
-	m_usecs = timebuffer.millitm * 1000;
-#else
-	struct timeval now;
-	gettimeofday(&now, NULL);
-	m_secs = now.tv_sec;
-	m_usecs = now.tv_usec;
-#endif
-
-}
-
-void Timestamp::setTime(const string &stime){
-	string::size_type p = stime.find('.');
-	if(p == string::npos){
-		m_secs = atol(stime.c_str());
-		m_usecs = 0;
-	}else{
-		m_secs = atol(stime.substr(0, p).c_str());
-		
-		string s_usecs = stime.substr(p+1, 6);
-		m_usecs = atol(stime.substr(p+1).c_str());
-		m_usecs *= (unsigned long)pow(10.0, double(6 - s_usecs.length()));
-	}
-}
-
-void Timestamp::setTime(double s)
-{
-  m_secs = (unsigned long)s;
-  m_usecs = (s - (double)m_secs) * 1e6;
-}
-
-double Timestamp::getFloatTime() const {
-	return double(m_secs) + double(m_usecs)/1000000.0;
-}
-
-string Timestamp::getStringTime() const {
-	char buf[32];
-	sprintf(buf, "%.6lf", this->getFloatTime());
-	return string(buf);
-}
-
-double Timestamp::operator- (const Timestamp &t) const {
-	return this->getFloatTime() - t.getFloatTime();
-}
-
-Timestamp& Timestamp::operator+= (double s)
-{
-  *this = *this + s;
-  return *this;
-}
-
-Timestamp& Timestamp::operator-= (double s)
-{
-  *this = *this - s;
-  return *this;
-}
-
-Timestamp Timestamp::operator+ (double s) const
-{
-	unsigned long secs = (long)floor(s);
-	unsigned long usecs = (long)((s - (double)secs) * 1e6);
-
-  return this->plus(secs, usecs);
-}
-
-Timestamp Timestamp::plus(unsigned long secs, unsigned long usecs) const
-{
-  Timestamp t;
-
-	const unsigned long max = 1000000ul;
-
-	if(m_usecs + usecs >= max)
-		t.setTime(m_secs + secs + 1, m_usecs + usecs - max);
-	else
-		t.setTime(m_secs + secs, m_usecs + usecs);
-	
-	return t;
-}
-
-Timestamp Timestamp::operator- (double s) const
-{
-	unsigned long secs = (long)floor(s);
-	unsigned long usecs = (long)((s - (double)secs) * 1e6);
-
-	return this->minus(secs, usecs);
-}
-
-Timestamp Timestamp::minus(unsigned long secs, unsigned long usecs) const
-{
-  Timestamp t;
-
-	const unsigned long max = 1000000ul;
-
-	if(m_usecs < usecs)
-		t.setTime(m_secs - secs - 1, max - (usecs - m_usecs));
-	else
-		t.setTime(m_secs - secs, m_usecs - usecs);
-	
-	return t;
-}
-
-bool Timestamp::operator> (const Timestamp &t) const
-{
-	if(m_secs > t.m_secs) return true;
-	else if(m_secs == t.m_secs) return m_usecs > t.m_usecs;
-	else return false;
-}
-
-bool Timestamp::operator>= (const Timestamp &t) const
-{
-	if(m_secs > t.m_secs) return true;
-	else if(m_secs == t.m_secs) return m_usecs >= t.m_usecs;
-	else return false;
-}
-
-bool Timestamp::operator< (const Timestamp &t) const
-{
-	if(m_secs < t.m_secs) return true;
-	else if(m_secs == t.m_secs) return m_usecs < t.m_usecs;
-	else return false;
-}
-
-bool Timestamp::operator<= (const Timestamp &t) const
-{
-	if(m_secs < t.m_secs) return true;
-	else if(m_secs == t.m_secs) return m_usecs <= t.m_usecs;
-	else return false;
-}
-
-bool Timestamp::operator== (const Timestamp &t) const
-{
-	return(m_secs == t.m_secs && m_usecs == t.m_usecs);
-}
-
-
-string Timestamp::Format(bool machine_friendly) const 
-{
-  struct tm tm_time;
-
-  time_t t = (time_t)getFloatTime();
-
-#ifdef WIN32
-  localtime_s(&tm_time, &t);
-#else
-  localtime_r(&t, &tm_time);
-#endif
-  
-  char buffer[128];
-  
-  if(machine_friendly)
-  {
-    strftime(buffer, 128, "%Y%m%d_%H%M%S", &tm_time);
-  }
-  else
-  {
-    strftime(buffer, 128, "%c", &tm_time); // Thu Aug 23 14:55:02 2001
-  }
-  
-  return string(buffer);
-}
-
-string Timestamp::Format(double s) {
-	int days = int(s / (24. * 3600.0));
-	s -= days * (24. * 3600.0);
-	int hours = int(s / 3600.0);
-	s -= hours * 3600;
-	int minutes = int(s / 60.0);
-	s -= minutes * 60;
-	int seconds = int(s);
-	int ms = int((s - seconds)*1e6);
-
-	stringstream ss;
-	ss.fill('0');
-	bool b;
-	if((b = (days > 0))) ss << days << "d ";
-	if((b = (b || hours > 0))) ss << setw(2) << hours << ":";
-	if((b = (b || minutes > 0))) ss << setw(2) << minutes << ":";
-	if(b) ss << setw(2);
-	ss << seconds;
-	if(!b) ss << "." << setw(6) << ms;
-
-	return ss.str();
-}
-
-
diff --git a/Thirdparty/DBoW2/DUtils/Timestamp.h b/Thirdparty/DBoW2/DUtils/Timestamp.h
deleted file mode 100644
index b92f89f..0000000
--- a/Thirdparty/DBoW2/DUtils/Timestamp.h
+++ /dev/null
@@ -1,204 +0,0 @@
-/*
- * File: Timestamp.h
- * Author: Dorian Galvez-Lopez
- * Date: March 2009
- * Description: timestamping functions
- * License: see the LICENSE.txt file
- *
- */
-
-#ifndef __D_TIMESTAMP__
-#define __D_TIMESTAMP__
-
-#include <iostream>
-using namespace std;
-
-namespace DUtils {
-
-/// Timestamp
-class Timestamp
-{
-public:
-
-  /// Options to initiate a timestamp
-  enum tOptions
-  {
-    NONE = 0,
-    CURRENT_TIME = 0x1,
-    ZERO = 0x2
-  };
-  
-public:
-  
-  /**
-   * Creates a timestamp 
-   * @param option option to set the initial time stamp
-   */
-	Timestamp(Timestamp::tOptions option = NONE);
-	
-	/**
-	 * Destructor
-	 */
-	virtual ~Timestamp(void);
-
-  /**
-   * Says if the timestamp is "empty": seconds and usecs are both 0, as 
-   * when initiated with the ZERO flag
-   * @return true iif secs == usecs == 0
-   */
-  bool empty() const;
-
-	/**
-	 * Sets this instance to the current time
-	 */
-	void setToCurrentTime();
-
-	/**
-	 * Sets the timestamp from seconds and microseconds
-	 * @param secs: seconds
-	 * @param usecs: microseconds
-	 */
-	inline void setTime(unsigned long secs, unsigned long usecs){
-		m_secs = secs;
-		m_usecs = usecs;
-	}
-	
-	/**
-	 * Returns the timestamp in seconds and microseconds
-	 * @param secs seconds
-	 * @param usecs microseconds
-	 */
-	inline void getTime(unsigned long &secs, unsigned long &usecs) const
-	{
-	  secs = m_secs;
-	  usecs = m_usecs;
-	}
-
-	/**
-	 * Sets the timestamp from a string with the time in seconds
-	 * @param stime: string such as "1235603336.036609"
-	 */
-	void setTime(const string &stime);
-	
-	/**
-	 * Sets the timestamp from a number of seconds from the epoch
-	 * @param s seconds from the epoch
-	 */
-	void setTime(double s);
-	
-	/**
-	 * Returns this timestamp as the number of seconds in (long) float format
-	 */
-	double getFloatTime() const;
-
-	/**
-	 * Returns this timestamp as the number of seconds in fixed length string format
-	 */
-	string getStringTime() const;
-
-	/**
-	 * Returns the difference in seconds between this timestamp (greater) and t (smaller)
-	 * If the order is swapped, a negative number is returned
-	 * @param t: timestamp to subtract from this timestamp
-	 * @return difference in seconds
-	 */
-	double operator- (const Timestamp &t) const;
-
-	/** 
-	 * Returns a copy of this timestamp + s seconds + us microseconds
-	 * @param s seconds
-	 * @param us microseconds
-	 */
-	Timestamp plus(unsigned long s, unsigned long us) const;
-
-  /**
-   * Returns a copy of this timestamp - s seconds - us microseconds
-   * @param s seconds
-   * @param us microseconds
-   */
-  Timestamp minus(unsigned long s, unsigned long us) const;
-
-  /**
-   * Adds s seconds to this timestamp and returns a reference to itself
-   * @param s seconds
-   * @return reference to this timestamp
-   */
-  Timestamp& operator+= (double s);
-  
-  /**
-   * Substracts s seconds to this timestamp and returns a reference to itself
-   * @param s seconds
-   * @return reference to this timestamp
-   */
-  Timestamp& operator-= (double s);
-
-	/**
-	 * Returns a copy of this timestamp + s seconds
-	 * @param s: seconds
-	 */
-	Timestamp operator+ (double s) const;
-
-	/**
-	 * Returns a copy of this timestamp - s seconds
-	 * @param s: seconds
-	 */
-	Timestamp operator- (double s) const;
-
-	/**
-	 * Returns whether this timestamp is at the future of t
-	 * @param t
-	 */
-	bool operator> (const Timestamp &t) const;
-
-	/**
-	 * Returns whether this timestamp is at the future of (or is the same as) t
-	 * @param t
-	 */
-	bool operator>= (const Timestamp &t) const;
-
-	/** 
-	 * Returns whether this timestamp and t represent the same instant
-	 * @param t
-	 */
-	bool operator== (const Timestamp &t) const;
-
-	/**
-	 * Returns whether this timestamp is at the past of t
-	 * @param t
-	 */
-	bool operator< (const Timestamp &t) const;
-
-	/**
-	 * Returns whether this timestamp is at the past of (or is the same as) t
-	 * @param t
-	 */
-	bool operator<= (const Timestamp &t) const;
-
-  /**
-   * Returns the timestamp in a human-readable string
-   * @param machine_friendly if true, the returned string is formatted
-   *   to yyyymmdd_hhmmss, without weekday or spaces
-   * @note This has not been tested under Windows
-   * @note The timestamp is truncated to seconds
-   */
-  string Format(bool machine_friendly = false) const;
-
-	/**
-	 * Returns a string version of the elapsed time in seconds, with the format
-	 * xd hh:mm:ss, hh:mm:ss, mm:ss or s.us
-	 * @param s: elapsed seconds (given by getFloatTime) to format
-	 */
-	static string Format(double s);
-	
-
-protected:
-  /// Seconds
-	unsigned long m_secs;	// seconds
-	/// Microseconds
-	unsigned long m_usecs;	// microseconds
-};
-
-}
-
-#endif
-
diff --git a/Thirdparty/Sophus/.clang-format b/Thirdparty/Sophus-imx/.clang-format
similarity index 100%
rename from Thirdparty/Sophus/.clang-format
rename to Thirdparty/Sophus-imx/.clang-format
diff --git a/Thirdparty/Sophus/.gitignore b/Thirdparty/Sophus-imx/.gitignore
similarity index 100%
rename from Thirdparty/Sophus/.gitignore
rename to Thirdparty/Sophus-imx/.gitignore
diff --git a/Thirdparty/Sophus/.travis.yml b/Thirdparty/Sophus-imx/.travis.yml
similarity index 100%
rename from Thirdparty/Sophus/.travis.yml
rename to Thirdparty/Sophus-imx/.travis.yml
diff --git a/Thirdparty/Sophus/CMakeLists.txt b/Thirdparty/Sophus-imx/CMakeLists.txt
similarity index 100%
rename from Thirdparty/Sophus/CMakeLists.txt
rename to Thirdparty/Sophus-imx/CMakeLists.txt
diff --git a/Thirdparty/Sophus/LICENSE.txt b/Thirdparty/Sophus-imx/LICENSE.txt
similarity index 100%
rename from Thirdparty/Sophus/LICENSE.txt
rename to Thirdparty/Sophus-imx/LICENSE.txt
diff --git a/Thirdparty/Sophus/README.rst b/Thirdparty/Sophus-imx/README.rst
similarity index 100%
rename from Thirdparty/Sophus/README.rst
rename to Thirdparty/Sophus-imx/README.rst
diff --git a/Thirdparty/Sophus/SophusConfig.cmake.in b/Thirdparty/Sophus-imx/SophusConfig.cmake.in
similarity index 100%
rename from Thirdparty/Sophus/SophusConfig.cmake.in
rename to Thirdparty/Sophus-imx/SophusConfig.cmake.in
diff --git a/Thirdparty/Sophus/appveyor.yml b/Thirdparty/Sophus-imx/appveyor.yml
similarity index 100%
rename from Thirdparty/Sophus/appveyor.yml
rename to Thirdparty/Sophus-imx/appveyor.yml
diff --git a/Thirdparty/Sophus/doxyrest-config.lua b/Thirdparty/Sophus-imx/doxyrest-config.lua
similarity index 100%
rename from Thirdparty/Sophus/doxyrest-config.lua
rename to Thirdparty/Sophus-imx/doxyrest-config.lua
diff --git a/Thirdparty/Sophus/examples/CMakeLists.txt b/Thirdparty/Sophus-imx/examples/CMakeLists.txt
similarity index 100%
rename from Thirdparty/Sophus/examples/CMakeLists.txt
rename to Thirdparty/Sophus-imx/examples/CMakeLists.txt
diff --git a/Thirdparty/Sophus/examples/HelloSO3.cpp b/Thirdparty/Sophus-imx/examples/HelloSO3.cpp
similarity index 100%
rename from Thirdparty/Sophus/examples/HelloSO3.cpp
rename to Thirdparty/Sophus-imx/examples/HelloSO3.cpp
diff --git a/Thirdparty/Sophus/make_docs.sh b/Thirdparty/Sophus-imx/make_docs.sh
similarity index 100%
rename from Thirdparty/Sophus/make_docs.sh
rename to Thirdparty/Sophus-imx/make_docs.sh
diff --git a/Thirdparty/Sophus/package.xml b/Thirdparty/Sophus-imx/package.xml
similarity index 100%
rename from Thirdparty/Sophus/package.xml
rename to Thirdparty/Sophus-imx/package.xml
diff --git a/Thirdparty/Sophus/py/cpp_gencode/Se2_Dx_exp_x.cpp b/Thirdparty/Sophus-imx/py/cpp_gencode/Se2_Dx_exp_x.cpp
similarity index 100%
rename from Thirdparty/Sophus/py/cpp_gencode/Se2_Dx_exp_x.cpp
rename to Thirdparty/Sophus-imx/py/cpp_gencode/Se2_Dx_exp_x.cpp
diff --git a/Thirdparty/Sophus/py/cpp_gencode/Se2_Dx_this_mul_exp_x_at_0.cpp b/Thirdparty/Sophus-imx/py/cpp_gencode/Se2_Dx_this_mul_exp_x_at_0.cpp
similarity index 100%
rename from Thirdparty/Sophus/py/cpp_gencode/Se2_Dx_this_mul_exp_x_at_0.cpp
rename to Thirdparty/Sophus-imx/py/cpp_gencode/Se2_Dx_this_mul_exp_x_at_0.cpp
diff --git a/Thirdparty/Sophus/py/cpp_gencode/Se3_Dx_exp_x.cpp b/Thirdparty/Sophus-imx/py/cpp_gencode/Se3_Dx_exp_x.cpp
similarity index 100%
rename from Thirdparty/Sophus/py/cpp_gencode/Se3_Dx_exp_x.cpp
rename to Thirdparty/Sophus-imx/py/cpp_gencode/Se3_Dx_exp_x.cpp
diff --git a/Thirdparty/Sophus/py/cpp_gencode/Se3_Dx_this_mul_exp_x_at_0.cpp b/Thirdparty/Sophus-imx/py/cpp_gencode/Se3_Dx_this_mul_exp_x_at_0.cpp
similarity index 100%
rename from Thirdparty/Sophus/py/cpp_gencode/Se3_Dx_this_mul_exp_x_at_0.cpp
rename to Thirdparty/Sophus-imx/py/cpp_gencode/Se3_Dx_this_mul_exp_x_at_0.cpp
diff --git a/Thirdparty/Sophus/py/cpp_gencode/So2_Dx_exp_x.cpp b/Thirdparty/Sophus-imx/py/cpp_gencode/So2_Dx_exp_x.cpp
similarity index 100%
rename from Thirdparty/Sophus/py/cpp_gencode/So2_Dx_exp_x.cpp
rename to Thirdparty/Sophus-imx/py/cpp_gencode/So2_Dx_exp_x.cpp
diff --git a/Thirdparty/Sophus/py/cpp_gencode/So2_Dx_this_mul_exp_x_at_0.cpp b/Thirdparty/Sophus-imx/py/cpp_gencode/So2_Dx_this_mul_exp_x_at_0.cpp
similarity index 100%
rename from Thirdparty/Sophus/py/cpp_gencode/So2_Dx_this_mul_exp_x_at_0.cpp
rename to Thirdparty/Sophus-imx/py/cpp_gencode/So2_Dx_this_mul_exp_x_at_0.cpp
diff --git a/Thirdparty/Sophus/py/cpp_gencode/So3_Dx_exp_x.cpp b/Thirdparty/Sophus-imx/py/cpp_gencode/So3_Dx_exp_x.cpp
similarity index 100%
rename from Thirdparty/Sophus/py/cpp_gencode/So3_Dx_exp_x.cpp
rename to Thirdparty/Sophus-imx/py/cpp_gencode/So3_Dx_exp_x.cpp
diff --git a/Thirdparty/Sophus/py/cpp_gencode/So3_Dx_this_mul_exp_x_at_0.cpp b/Thirdparty/Sophus-imx/py/cpp_gencode/So3_Dx_this_mul_exp_x_at_0.cpp
similarity index 100%
rename from Thirdparty/Sophus/py/cpp_gencode/So3_Dx_this_mul_exp_x_at_0.cpp
rename to Thirdparty/Sophus-imx/py/cpp_gencode/So3_Dx_this_mul_exp_x_at_0.cpp
diff --git a/Thirdparty/Sophus/py/run_tests.sh b/Thirdparty/Sophus-imx/py/run_tests.sh
similarity index 100%
rename from Thirdparty/Sophus/py/run_tests.sh
rename to Thirdparty/Sophus-imx/py/run_tests.sh
diff --git a/Thirdparty/Sophus/py/sophus/__init__.py b/Thirdparty/Sophus-imx/py/sophus/__init__.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/__init__.py
rename to Thirdparty/Sophus-imx/py/sophus/__init__.py
diff --git a/Thirdparty/Sophus/py/sophus/complex.py b/Thirdparty/Sophus-imx/py/sophus/complex.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/complex.py
rename to Thirdparty/Sophus-imx/py/sophus/complex.py
diff --git a/Thirdparty/Sophus/py/sophus/cse_codegen.py b/Thirdparty/Sophus-imx/py/sophus/cse_codegen.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/cse_codegen.py
rename to Thirdparty/Sophus-imx/py/sophus/cse_codegen.py
diff --git a/Thirdparty/Sophus/py/sophus/dual_quaternion.py b/Thirdparty/Sophus-imx/py/sophus/dual_quaternion.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/dual_quaternion.py
rename to Thirdparty/Sophus-imx/py/sophus/dual_quaternion.py
diff --git a/Thirdparty/Sophus/py/sophus/matrix.py b/Thirdparty/Sophus-imx/py/sophus/matrix.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/matrix.py
rename to Thirdparty/Sophus-imx/py/sophus/matrix.py
diff --git a/Thirdparty/Sophus/py/sophus/quaternion.py b/Thirdparty/Sophus-imx/py/sophus/quaternion.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/quaternion.py
rename to Thirdparty/Sophus-imx/py/sophus/quaternion.py
diff --git a/Thirdparty/Sophus/py/sophus/se2.py b/Thirdparty/Sophus-imx/py/sophus/se2.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/se2.py
rename to Thirdparty/Sophus-imx/py/sophus/se2.py
diff --git a/Thirdparty/Sophus/py/sophus/se3.py b/Thirdparty/Sophus-imx/py/sophus/se3.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/se3.py
rename to Thirdparty/Sophus-imx/py/sophus/se3.py
diff --git a/Thirdparty/Sophus/py/sophus/so2.py b/Thirdparty/Sophus-imx/py/sophus/so2.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/so2.py
rename to Thirdparty/Sophus-imx/py/sophus/so2.py
diff --git a/Thirdparty/Sophus/py/sophus/so3.py b/Thirdparty/Sophus-imx/py/sophus/so3.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/so3.py
rename to Thirdparty/Sophus-imx/py/sophus/so3.py
diff --git a/Thirdparty/Sophus/py/sophus/so3_codegen.py b/Thirdparty/Sophus-imx/py/sophus/so3_codegen.py
similarity index 100%
rename from Thirdparty/Sophus/py/sophus/so3_codegen.py
rename to Thirdparty/Sophus-imx/py/sophus/so3_codegen.py
diff --git a/Thirdparty/Sophus/rst-dir/conf.py b/Thirdparty/Sophus-imx/rst-dir/conf.py
similarity index 100%
rename from Thirdparty/Sophus/rst-dir/conf.py
rename to Thirdparty/Sophus-imx/rst-dir/conf.py
diff --git a/Thirdparty/Sophus/rst-dir/page_index.rst b/Thirdparty/Sophus-imx/rst-dir/page_index.rst
similarity index 100%
rename from Thirdparty/Sophus/rst-dir/page_index.rst
rename to Thirdparty/Sophus-imx/rst-dir/page_index.rst
diff --git a/Thirdparty/Sophus/rst-dir/pysophus.rst b/Thirdparty/Sophus-imx/rst-dir/pysophus.rst
similarity index 100%
rename from Thirdparty/Sophus/rst-dir/pysophus.rst
rename to Thirdparty/Sophus-imx/rst-dir/pysophus.rst
diff --git a/Thirdparty/Sophus/run_format.sh b/Thirdparty/Sophus-imx/run_format.sh
similarity index 100%
rename from Thirdparty/Sophus/run_format.sh
rename to Thirdparty/Sophus-imx/run_format.sh
diff --git a/Thirdparty/Sophus/scripts/install_docs_deps.sh b/Thirdparty/Sophus-imx/scripts/install_docs_deps.sh
similarity index 100%
rename from Thirdparty/Sophus/scripts/install_docs_deps.sh
rename to Thirdparty/Sophus-imx/scripts/install_docs_deps.sh
diff --git a/Thirdparty/Sophus/scripts/install_linux_deps.sh b/Thirdparty/Sophus-imx/scripts/install_linux_deps.sh
similarity index 100%
rename from Thirdparty/Sophus/scripts/install_linux_deps.sh
rename to Thirdparty/Sophus-imx/scripts/install_linux_deps.sh
diff --git a/Thirdparty/Sophus/scripts/install_osx_deps.sh b/Thirdparty/Sophus-imx/scripts/install_osx_deps.sh
similarity index 100%
rename from Thirdparty/Sophus/scripts/install_osx_deps.sh
rename to Thirdparty/Sophus-imx/scripts/install_osx_deps.sh
diff --git a/Thirdparty/Sophus/scripts/run_cpp_tests.sh b/Thirdparty/Sophus-imx/scripts/run_cpp_tests.sh
similarity index 100%
rename from Thirdparty/Sophus/scripts/run_cpp_tests.sh
rename to Thirdparty/Sophus-imx/scripts/run_cpp_tests.sh
diff --git a/Thirdparty/Sophus/sophus/average.hpp b/Thirdparty/Sophus-imx/sophus/average.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/average.hpp
rename to Thirdparty/Sophus-imx/sophus/average.hpp
diff --git a/Thirdparty/Sophus/sophus/common.hpp b/Thirdparty/Sophus-imx/sophus/common.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/common.hpp
rename to Thirdparty/Sophus-imx/sophus/common.hpp
diff --git a/Thirdparty/Sophus/sophus/example_ensure_handler.cpp b/Thirdparty/Sophus-imx/sophus/example_ensure_handler.cpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/example_ensure_handler.cpp
rename to Thirdparty/Sophus-imx/sophus/example_ensure_handler.cpp
diff --git a/Thirdparty/Sophus/sophus/formatstring.hpp b/Thirdparty/Sophus-imx/sophus/formatstring.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/formatstring.hpp
rename to Thirdparty/Sophus-imx/sophus/formatstring.hpp
diff --git a/Thirdparty/Sophus/sophus/geometry.hpp b/Thirdparty/Sophus-imx/sophus/geometry.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/geometry.hpp
rename to Thirdparty/Sophus-imx/sophus/geometry.hpp
diff --git a/Thirdparty/Sophus/sophus/interpolate.hpp b/Thirdparty/Sophus-imx/sophus/interpolate.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/interpolate.hpp
rename to Thirdparty/Sophus-imx/sophus/interpolate.hpp
diff --git a/Thirdparty/Sophus/sophus/interpolate_details.hpp b/Thirdparty/Sophus-imx/sophus/interpolate_details.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/interpolate_details.hpp
rename to Thirdparty/Sophus-imx/sophus/interpolate_details.hpp
diff --git a/Thirdparty/Sophus/sophus/num_diff.hpp b/Thirdparty/Sophus-imx/sophus/num_diff.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/num_diff.hpp
rename to Thirdparty/Sophus-imx/sophus/num_diff.hpp
diff --git a/Thirdparty/Sophus/sophus/rotation_matrix.hpp b/Thirdparty/Sophus-imx/sophus/rotation_matrix.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/rotation_matrix.hpp
rename to Thirdparty/Sophus-imx/sophus/rotation_matrix.hpp
diff --git a/Thirdparty/Sophus/sophus/rxso2.hpp b/Thirdparty/Sophus-imx/sophus/rxso2.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/rxso2.hpp
rename to Thirdparty/Sophus-imx/sophus/rxso2.hpp
diff --git a/Thirdparty/Sophus/sophus/rxso3.hpp b/Thirdparty/Sophus-imx/sophus/rxso3.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/rxso3.hpp
rename to Thirdparty/Sophus-imx/sophus/rxso3.hpp
diff --git a/Thirdparty/Sophus/sophus/se2.hpp b/Thirdparty/Sophus-imx/sophus/se2.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/se2.hpp
rename to Thirdparty/Sophus-imx/sophus/se2.hpp
diff --git a/Thirdparty/Sophus/sophus/se3.hpp b/Thirdparty/Sophus-imx/sophus/se3.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/se3.hpp
rename to Thirdparty/Sophus-imx/sophus/se3.hpp
diff --git a/Thirdparty/Sophus/sophus/sim2.hpp b/Thirdparty/Sophus-imx/sophus/sim2.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/sim2.hpp
rename to Thirdparty/Sophus-imx/sophus/sim2.hpp
diff --git a/Thirdparty/Sophus/sophus/sim3.hpp b/Thirdparty/Sophus-imx/sophus/sim3.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/sim3.hpp
rename to Thirdparty/Sophus-imx/sophus/sim3.hpp
diff --git a/Thirdparty/Sophus/sophus/sim_details.hpp b/Thirdparty/Sophus-imx/sophus/sim_details.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/sim_details.hpp
rename to Thirdparty/Sophus-imx/sophus/sim_details.hpp
diff --git a/Thirdparty/Sophus/sophus/so2.hpp b/Thirdparty/Sophus-imx/sophus/so2.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/so2.hpp
rename to Thirdparty/Sophus-imx/sophus/so2.hpp
diff --git a/Thirdparty/Sophus/sophus/so3.hpp b/Thirdparty/Sophus-imx/sophus/so3.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/so3.hpp
rename to Thirdparty/Sophus-imx/sophus/so3.hpp
diff --git a/Thirdparty/Sophus/sophus/test_macros.hpp b/Thirdparty/Sophus-imx/sophus/test_macros.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/test_macros.hpp
rename to Thirdparty/Sophus-imx/sophus/test_macros.hpp
diff --git a/Thirdparty/Sophus/sophus/types.hpp b/Thirdparty/Sophus-imx/sophus/types.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/types.hpp
rename to Thirdparty/Sophus-imx/sophus/types.hpp
diff --git a/Thirdparty/Sophus/sophus/velocities.hpp b/Thirdparty/Sophus-imx/sophus/velocities.hpp
similarity index 100%
rename from Thirdparty/Sophus/sophus/velocities.hpp
rename to Thirdparty/Sophus-imx/sophus/velocities.hpp
diff --git a/Thirdparty/Sophus/test/CMakeLists.txt b/Thirdparty/Sophus-imx/test/CMakeLists.txt
similarity index 100%
rename from Thirdparty/Sophus/test/CMakeLists.txt
rename to Thirdparty/Sophus-imx/test/CMakeLists.txt
diff --git a/Thirdparty/Sophus/test/ceres/CMakeLists.txt b/Thirdparty/Sophus-imx/test/ceres/CMakeLists.txt
similarity index 100%
rename from Thirdparty/Sophus/test/ceres/CMakeLists.txt
rename to Thirdparty/Sophus-imx/test/ceres/CMakeLists.txt
diff --git a/Thirdparty/Sophus/test/ceres/local_parameterization_se3.hpp b/Thirdparty/Sophus-imx/test/ceres/local_parameterization_se3.hpp
similarity index 100%
rename from Thirdparty/Sophus/test/ceres/local_parameterization_se3.hpp
rename to Thirdparty/Sophus-imx/test/ceres/local_parameterization_se3.hpp
diff --git a/Thirdparty/Sophus/test/ceres/test_ceres_se3.cpp b/Thirdparty/Sophus-imx/test/ceres/test_ceres_se3.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/ceres/test_ceres_se3.cpp
rename to Thirdparty/Sophus-imx/test/ceres/test_ceres_se3.cpp
diff --git a/Thirdparty/Sophus/test/core/CMakeLists.txt b/Thirdparty/Sophus-imx/test/core/CMakeLists.txt
similarity index 100%
rename from Thirdparty/Sophus/test/core/CMakeLists.txt
rename to Thirdparty/Sophus-imx/test/core/CMakeLists.txt
diff --git a/Thirdparty/Sophus/test/core/test_common.cpp b/Thirdparty/Sophus-imx/test/core/test_common.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_common.cpp
rename to Thirdparty/Sophus-imx/test/core/test_common.cpp
diff --git a/Thirdparty/Sophus/test/core/test_geometry.cpp b/Thirdparty/Sophus-imx/test/core/test_geometry.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_geometry.cpp
rename to Thirdparty/Sophus-imx/test/core/test_geometry.cpp
diff --git a/Thirdparty/Sophus/test/core/test_rxso2.cpp b/Thirdparty/Sophus-imx/test/core/test_rxso2.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_rxso2.cpp
rename to Thirdparty/Sophus-imx/test/core/test_rxso2.cpp
diff --git a/Thirdparty/Sophus/test/core/test_rxso3.cpp b/Thirdparty/Sophus-imx/test/core/test_rxso3.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_rxso3.cpp
rename to Thirdparty/Sophus-imx/test/core/test_rxso3.cpp
diff --git a/Thirdparty/Sophus/test/core/test_se2.cpp b/Thirdparty/Sophus-imx/test/core/test_se2.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_se2.cpp
rename to Thirdparty/Sophus-imx/test/core/test_se2.cpp
diff --git a/Thirdparty/Sophus/test/core/test_se3.cpp b/Thirdparty/Sophus-imx/test/core/test_se3.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_se3.cpp
rename to Thirdparty/Sophus-imx/test/core/test_se3.cpp
diff --git a/Thirdparty/Sophus/test/core/test_sim2.cpp b/Thirdparty/Sophus-imx/test/core/test_sim2.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_sim2.cpp
rename to Thirdparty/Sophus-imx/test/core/test_sim2.cpp
diff --git a/Thirdparty/Sophus/test/core/test_sim3.cpp b/Thirdparty/Sophus-imx/test/core/test_sim3.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_sim3.cpp
rename to Thirdparty/Sophus-imx/test/core/test_sim3.cpp
diff --git a/Thirdparty/Sophus/test/core/test_so2.cpp b/Thirdparty/Sophus-imx/test/core/test_so2.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_so2.cpp
rename to Thirdparty/Sophus-imx/test/core/test_so2.cpp
diff --git a/Thirdparty/Sophus/test/core/test_so3.cpp b/Thirdparty/Sophus-imx/test/core/test_so3.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_so3.cpp
rename to Thirdparty/Sophus-imx/test/core/test_so3.cpp
diff --git a/Thirdparty/Sophus/test/core/test_velocities.cpp b/Thirdparty/Sophus-imx/test/core/test_velocities.cpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/test_velocities.cpp
rename to Thirdparty/Sophus-imx/test/core/test_velocities.cpp
diff --git a/Thirdparty/Sophus/test/core/tests.hpp b/Thirdparty/Sophus-imx/test/core/tests.hpp
similarity index 100%
rename from Thirdparty/Sophus/test/core/tests.hpp
rename to Thirdparty/Sophus-imx/test/core/tests.hpp
diff --git a/Thirdparty/g2o/CMakeLists.txt b/Thirdparty/g2o-imx/CMakeLists.txt
similarity index 99%
rename from Thirdparty/g2o/CMakeLists.txt
rename to Thirdparty/g2o-imx/CMakeLists.txt
index 36f7ac4..cb2874a 100644
--- a/Thirdparty/g2o/CMakeLists.txt
+++ b/Thirdparty/g2o-imx/CMakeLists.txt
@@ -86,7 +86,7 @@ ${g2o_SOURCE_DIR}/stuff
 ${G2O_EIGEN3_INCLUDE})
 
 # Include the subdirectories
-ADD_LIBRARY(g2o ${G2O_LIB_TYPE}
+ADD_LIBRARY(g2o-imx ${G2O_LIB_TYPE}
 #types
 g2o/types/types_sba.h
 g2o/types/types_six_dof_expmap.h
diff --git a/Thirdparty/g2o/README.txt b/Thirdparty/g2o-imx/README.txt
similarity index 100%
rename from Thirdparty/g2o/README.txt
rename to Thirdparty/g2o-imx/README.txt
diff --git a/Thirdparty/g2o/config.h.in b/Thirdparty/g2o-imx/config.h.in
similarity index 100%
rename from Thirdparty/g2o/config.h.in
rename to Thirdparty/g2o-imx/config.h.in
diff --git a/Thirdparty/g2o/g2o/core/base_binary_edge.h b/Thirdparty/g2o-imx/g2o/core/base_binary_edge.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_binary_edge.h
rename to Thirdparty/g2o-imx/g2o/core/base_binary_edge.h
diff --git a/Thirdparty/g2o/g2o/core/base_binary_edge.hpp b/Thirdparty/g2o-imx/g2o/core/base_binary_edge.hpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_binary_edge.hpp
rename to Thirdparty/g2o-imx/g2o/core/base_binary_edge.hpp
diff --git a/Thirdparty/g2o/g2o/core/base_edge.h b/Thirdparty/g2o-imx/g2o/core/base_edge.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_edge.h
rename to Thirdparty/g2o-imx/g2o/core/base_edge.h
diff --git a/Thirdparty/g2o/g2o/core/base_multi_edge.h b/Thirdparty/g2o-imx/g2o/core/base_multi_edge.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_multi_edge.h
rename to Thirdparty/g2o-imx/g2o/core/base_multi_edge.h
diff --git a/Thirdparty/g2o/g2o/core/base_multi_edge.hpp b/Thirdparty/g2o-imx/g2o/core/base_multi_edge.hpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_multi_edge.hpp
rename to Thirdparty/g2o-imx/g2o/core/base_multi_edge.hpp
diff --git a/Thirdparty/g2o/g2o/core/base_unary_edge.h b/Thirdparty/g2o-imx/g2o/core/base_unary_edge.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_unary_edge.h
rename to Thirdparty/g2o-imx/g2o/core/base_unary_edge.h
diff --git a/Thirdparty/g2o/g2o/core/base_unary_edge.hpp b/Thirdparty/g2o-imx/g2o/core/base_unary_edge.hpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_unary_edge.hpp
rename to Thirdparty/g2o-imx/g2o/core/base_unary_edge.hpp
diff --git a/Thirdparty/g2o/g2o/core/base_vertex.h b/Thirdparty/g2o-imx/g2o/core/base_vertex.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_vertex.h
rename to Thirdparty/g2o-imx/g2o/core/base_vertex.h
diff --git a/Thirdparty/g2o/g2o/core/base_vertex.hpp b/Thirdparty/g2o-imx/g2o/core/base_vertex.hpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/base_vertex.hpp
rename to Thirdparty/g2o-imx/g2o/core/base_vertex.hpp
diff --git a/Thirdparty/g2o/g2o/core/batch_stats.cpp b/Thirdparty/g2o-imx/g2o/core/batch_stats.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/batch_stats.cpp
rename to Thirdparty/g2o-imx/g2o/core/batch_stats.cpp
diff --git a/Thirdparty/g2o/g2o/core/batch_stats.h b/Thirdparty/g2o-imx/g2o/core/batch_stats.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/batch_stats.h
rename to Thirdparty/g2o-imx/g2o/core/batch_stats.h
diff --git a/Thirdparty/g2o/g2o/core/block_solver.h b/Thirdparty/g2o-imx/g2o/core/block_solver.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/block_solver.h
rename to Thirdparty/g2o-imx/g2o/core/block_solver.h
diff --git a/Thirdparty/g2o/g2o/core/block_solver.hpp b/Thirdparty/g2o-imx/g2o/core/block_solver.hpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/block_solver.hpp
rename to Thirdparty/g2o-imx/g2o/core/block_solver.hpp
diff --git a/Thirdparty/g2o/g2o/core/cache.cpp b/Thirdparty/g2o-imx/g2o/core/cache.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/cache.cpp
rename to Thirdparty/g2o-imx/g2o/core/cache.cpp
diff --git a/Thirdparty/g2o/g2o/core/cache.h b/Thirdparty/g2o-imx/g2o/core/cache.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/cache.h
rename to Thirdparty/g2o-imx/g2o/core/cache.h
diff --git a/Thirdparty/g2o/g2o/core/creators.h b/Thirdparty/g2o-imx/g2o/core/creators.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/creators.h
rename to Thirdparty/g2o-imx/g2o/core/creators.h
diff --git a/Thirdparty/g2o/g2o/core/eigen_types.h b/Thirdparty/g2o-imx/g2o/core/eigen_types.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/eigen_types.h
rename to Thirdparty/g2o-imx/g2o/core/eigen_types.h
diff --git a/Thirdparty/g2o/g2o/core/estimate_propagator.cpp b/Thirdparty/g2o-imx/g2o/core/estimate_propagator.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/estimate_propagator.cpp
rename to Thirdparty/g2o-imx/g2o/core/estimate_propagator.cpp
diff --git a/Thirdparty/g2o/g2o/core/estimate_propagator.h b/Thirdparty/g2o-imx/g2o/core/estimate_propagator.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/estimate_propagator.h
rename to Thirdparty/g2o-imx/g2o/core/estimate_propagator.h
diff --git a/Thirdparty/g2o/g2o/core/factory.cpp b/Thirdparty/g2o-imx/g2o/core/factory.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/factory.cpp
rename to Thirdparty/g2o-imx/g2o/core/factory.cpp
diff --git a/Thirdparty/g2o/g2o/core/factory.h b/Thirdparty/g2o-imx/g2o/core/factory.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/factory.h
rename to Thirdparty/g2o-imx/g2o/core/factory.h
diff --git a/Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp b/Thirdparty/g2o-imx/g2o/core/hyper_dijkstra.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp
rename to Thirdparty/g2o-imx/g2o/core/hyper_dijkstra.cpp
diff --git a/Thirdparty/g2o/g2o/core/hyper_dijkstra.h b/Thirdparty/g2o-imx/g2o/core/hyper_dijkstra.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/hyper_dijkstra.h
rename to Thirdparty/g2o-imx/g2o/core/hyper_dijkstra.h
diff --git a/Thirdparty/g2o/g2o/core/hyper_graph.cpp b/Thirdparty/g2o-imx/g2o/core/hyper_graph.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/hyper_graph.cpp
rename to Thirdparty/g2o-imx/g2o/core/hyper_graph.cpp
diff --git a/Thirdparty/g2o/g2o/core/hyper_graph.h b/Thirdparty/g2o-imx/g2o/core/hyper_graph.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/hyper_graph.h
rename to Thirdparty/g2o-imx/g2o/core/hyper_graph.h
diff --git a/Thirdparty/g2o/g2o/core/hyper_graph_action.cpp b/Thirdparty/g2o-imx/g2o/core/hyper_graph_action.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/hyper_graph_action.cpp
rename to Thirdparty/g2o-imx/g2o/core/hyper_graph_action.cpp
diff --git a/Thirdparty/g2o/g2o/core/hyper_graph_action.h b/Thirdparty/g2o-imx/g2o/core/hyper_graph_action.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/hyper_graph_action.h
rename to Thirdparty/g2o-imx/g2o/core/hyper_graph_action.h
diff --git a/Thirdparty/g2o/g2o/core/jacobian_workspace.cpp b/Thirdparty/g2o-imx/g2o/core/jacobian_workspace.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/jacobian_workspace.cpp
rename to Thirdparty/g2o-imx/g2o/core/jacobian_workspace.cpp
diff --git a/Thirdparty/g2o/g2o/core/jacobian_workspace.h b/Thirdparty/g2o-imx/g2o/core/jacobian_workspace.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/jacobian_workspace.h
rename to Thirdparty/g2o-imx/g2o/core/jacobian_workspace.h
diff --git a/Thirdparty/g2o/g2o/core/linear_solver.h b/Thirdparty/g2o-imx/g2o/core/linear_solver.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/linear_solver.h
rename to Thirdparty/g2o-imx/g2o/core/linear_solver.h
diff --git a/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp b/Thirdparty/g2o-imx/g2o/core/marginal_covariance_cholesky.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp
rename to Thirdparty/g2o-imx/g2o/core/marginal_covariance_cholesky.cpp
diff --git a/Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h b/Thirdparty/g2o-imx/g2o/core/marginal_covariance_cholesky.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h
rename to Thirdparty/g2o-imx/g2o/core/marginal_covariance_cholesky.h
diff --git a/Thirdparty/g2o/g2o/core/matrix_operations.h b/Thirdparty/g2o-imx/g2o/core/matrix_operations.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/matrix_operations.h
rename to Thirdparty/g2o-imx/g2o/core/matrix_operations.h
diff --git a/Thirdparty/g2o/g2o/core/matrix_structure.cpp b/Thirdparty/g2o-imx/g2o/core/matrix_structure.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/matrix_structure.cpp
rename to Thirdparty/g2o-imx/g2o/core/matrix_structure.cpp
diff --git a/Thirdparty/g2o/g2o/core/matrix_structure.h b/Thirdparty/g2o-imx/g2o/core/matrix_structure.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/matrix_structure.h
rename to Thirdparty/g2o-imx/g2o/core/matrix_structure.h
diff --git a/Thirdparty/g2o/g2o/core/openmp_mutex.h b/Thirdparty/g2o-imx/g2o/core/openmp_mutex.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/openmp_mutex.h
rename to Thirdparty/g2o-imx/g2o/core/openmp_mutex.h
diff --git a/Thirdparty/g2o/g2o/core/optimizable_graph.cpp b/Thirdparty/g2o-imx/g2o/core/optimizable_graph.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimizable_graph.cpp
rename to Thirdparty/g2o-imx/g2o/core/optimizable_graph.cpp
diff --git a/Thirdparty/g2o/g2o/core/optimizable_graph.h b/Thirdparty/g2o-imx/g2o/core/optimizable_graph.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimizable_graph.h
rename to Thirdparty/g2o-imx/g2o/core/optimizable_graph.h
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm.cpp b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm.cpp
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm.cpp
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm.h b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm.h
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm.h
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_dogleg.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_dogleg.cpp
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_dogleg.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_dogleg.h
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_factory.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_factory.cpp
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_factory.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_factory.h
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_gauss_newton.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_gauss_newton.cpp
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_gauss_newton.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_gauss_newton.h
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_levenberg.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_levenberg.cpp
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_levenberg.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_levenberg.h
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_property.h b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_property.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_property.h
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_property.h
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_with_hessian.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_with_hessian.cpp
diff --git a/Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h b/Thirdparty/g2o-imx/g2o/core/optimization_algorithm_with_hessian.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h
rename to Thirdparty/g2o-imx/g2o/core/optimization_algorithm_with_hessian.h
diff --git a/Thirdparty/g2o/g2o/core/parameter.cpp b/Thirdparty/g2o-imx/g2o/core/parameter.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/parameter.cpp
rename to Thirdparty/g2o-imx/g2o/core/parameter.cpp
diff --git a/Thirdparty/g2o/g2o/core/parameter.h b/Thirdparty/g2o-imx/g2o/core/parameter.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/parameter.h
rename to Thirdparty/g2o-imx/g2o/core/parameter.h
diff --git a/Thirdparty/g2o/g2o/core/parameter_container.cpp b/Thirdparty/g2o-imx/g2o/core/parameter_container.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/parameter_container.cpp
rename to Thirdparty/g2o-imx/g2o/core/parameter_container.cpp
diff --git a/Thirdparty/g2o/g2o/core/parameter_container.h b/Thirdparty/g2o-imx/g2o/core/parameter_container.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/parameter_container.h
rename to Thirdparty/g2o-imx/g2o/core/parameter_container.h
diff --git a/Thirdparty/g2o/g2o/core/robust_kernel.cpp b/Thirdparty/g2o-imx/g2o/core/robust_kernel.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/robust_kernel.cpp
rename to Thirdparty/g2o-imx/g2o/core/robust_kernel.cpp
diff --git a/Thirdparty/g2o/g2o/core/robust_kernel.h b/Thirdparty/g2o-imx/g2o/core/robust_kernel.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/robust_kernel.h
rename to Thirdparty/g2o-imx/g2o/core/robust_kernel.h
diff --git a/Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp b/Thirdparty/g2o-imx/g2o/core/robust_kernel_factory.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp
rename to Thirdparty/g2o-imx/g2o/core/robust_kernel_factory.cpp
diff --git a/Thirdparty/g2o/g2o/core/robust_kernel_factory.h b/Thirdparty/g2o-imx/g2o/core/robust_kernel_factory.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/robust_kernel_factory.h
rename to Thirdparty/g2o-imx/g2o/core/robust_kernel_factory.h
diff --git a/Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp b/Thirdparty/g2o-imx/g2o/core/robust_kernel_impl.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp
rename to Thirdparty/g2o-imx/g2o/core/robust_kernel_impl.cpp
diff --git a/Thirdparty/g2o/g2o/core/robust_kernel_impl.h b/Thirdparty/g2o-imx/g2o/core/robust_kernel_impl.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/robust_kernel_impl.h
rename to Thirdparty/g2o-imx/g2o/core/robust_kernel_impl.h
diff --git a/Thirdparty/g2o/g2o/core/solver.cpp b/Thirdparty/g2o-imx/g2o/core/solver.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/solver.cpp
rename to Thirdparty/g2o-imx/g2o/core/solver.cpp
diff --git a/Thirdparty/g2o/g2o/core/solver.h b/Thirdparty/g2o-imx/g2o/core/solver.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/solver.h
rename to Thirdparty/g2o-imx/g2o/core/solver.h
diff --git a/Thirdparty/g2o/g2o/core/sparse_block_matrix.h b/Thirdparty/g2o-imx/g2o/core/sparse_block_matrix.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/sparse_block_matrix.h
rename to Thirdparty/g2o-imx/g2o/core/sparse_block_matrix.h
diff --git a/Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp b/Thirdparty/g2o-imx/g2o/core/sparse_block_matrix.hpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp
rename to Thirdparty/g2o-imx/g2o/core/sparse_block_matrix.hpp
diff --git a/Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h b/Thirdparty/g2o-imx/g2o/core/sparse_block_matrix_ccs.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h
rename to Thirdparty/g2o-imx/g2o/core/sparse_block_matrix_ccs.h
diff --git a/Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h b/Thirdparty/g2o-imx/g2o/core/sparse_block_matrix_diagonal.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h
rename to Thirdparty/g2o-imx/g2o/core/sparse_block_matrix_diagonal.h
diff --git a/Thirdparty/g2o/g2o/core/sparse_block_matrix_test.cpp b/Thirdparty/g2o-imx/g2o/core/sparse_block_matrix_test.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/sparse_block_matrix_test.cpp
rename to Thirdparty/g2o-imx/g2o/core/sparse_block_matrix_test.cpp
diff --git a/Thirdparty/g2o/g2o/core/sparse_optimizer.cpp b/Thirdparty/g2o-imx/g2o/core/sparse_optimizer.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/core/sparse_optimizer.cpp
rename to Thirdparty/g2o-imx/g2o/core/sparse_optimizer.cpp
diff --git a/Thirdparty/g2o/g2o/core/sparse_optimizer.h b/Thirdparty/g2o-imx/g2o/core/sparse_optimizer.h
similarity index 100%
rename from Thirdparty/g2o/g2o/core/sparse_optimizer.h
rename to Thirdparty/g2o-imx/g2o/core/sparse_optimizer.h
diff --git a/Thirdparty/g2o/g2o/solvers/linear_solver_dense.h b/Thirdparty/g2o-imx/g2o/solvers/linear_solver_dense.h
similarity index 100%
rename from Thirdparty/g2o/g2o/solvers/linear_solver_dense.h
rename to Thirdparty/g2o-imx/g2o/solvers/linear_solver_dense.h
diff --git a/Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h b/Thirdparty/g2o-imx/g2o/solvers/linear_solver_eigen.h
similarity index 100%
rename from Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h
rename to Thirdparty/g2o-imx/g2o/solvers/linear_solver_eigen.h
diff --git a/Thirdparty/g2o/g2o/stuff/color_macros.h b/Thirdparty/g2o-imx/g2o/stuff/color_macros.h
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/color_macros.h
rename to Thirdparty/g2o-imx/g2o/stuff/color_macros.h
diff --git a/Thirdparty/g2o/g2o/stuff/macros.h b/Thirdparty/g2o-imx/g2o/stuff/macros.h
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/macros.h
rename to Thirdparty/g2o-imx/g2o/stuff/macros.h
diff --git a/Thirdparty/g2o/g2o/stuff/misc.h b/Thirdparty/g2o-imx/g2o/stuff/misc.h
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/misc.h
rename to Thirdparty/g2o-imx/g2o/stuff/misc.h
diff --git a/Thirdparty/g2o/g2o/stuff/os_specific.c b/Thirdparty/g2o-imx/g2o/stuff/os_specific.c
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/os_specific.c
rename to Thirdparty/g2o-imx/g2o/stuff/os_specific.c
diff --git a/Thirdparty/g2o/g2o/stuff/os_specific.h b/Thirdparty/g2o-imx/g2o/stuff/os_specific.h
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/os_specific.h
rename to Thirdparty/g2o-imx/g2o/stuff/os_specific.h
diff --git a/Thirdparty/g2o/g2o/stuff/property.cpp b/Thirdparty/g2o-imx/g2o/stuff/property.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/property.cpp
rename to Thirdparty/g2o-imx/g2o/stuff/property.cpp
diff --git a/Thirdparty/g2o/g2o/stuff/property.h b/Thirdparty/g2o-imx/g2o/stuff/property.h
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/property.h
rename to Thirdparty/g2o-imx/g2o/stuff/property.h
diff --git a/Thirdparty/g2o/g2o/stuff/string_tools.cpp b/Thirdparty/g2o-imx/g2o/stuff/string_tools.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/string_tools.cpp
rename to Thirdparty/g2o-imx/g2o/stuff/string_tools.cpp
diff --git a/Thirdparty/g2o/g2o/stuff/string_tools.h b/Thirdparty/g2o-imx/g2o/stuff/string_tools.h
similarity index 100%
rename from Thirdparty/g2o/g2o/stuff/string_tools.h
rename to Thirdparty/g2o-imx/g2o/stuff/string_tools.h
diff --git a/Thirdparty/g2o/g2o/types/se3_ops.h b/Thirdparty/g2o-imx/g2o/types/se3_ops.h
similarity index 100%
rename from Thirdparty/g2o/g2o/types/se3_ops.h
rename to Thirdparty/g2o-imx/g2o/types/se3_ops.h
diff --git a/Thirdparty/g2o/g2o/types/se3_ops.hpp b/Thirdparty/g2o-imx/g2o/types/se3_ops.hpp
similarity index 100%
rename from Thirdparty/g2o/g2o/types/se3_ops.hpp
rename to Thirdparty/g2o-imx/g2o/types/se3_ops.hpp
diff --git a/Thirdparty/g2o/g2o/types/se3mat.cpp b/Thirdparty/g2o-imx/g2o/types/se3mat.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/types/se3mat.cpp
rename to Thirdparty/g2o-imx/g2o/types/se3mat.cpp
diff --git a/Thirdparty/g2o/g2o/types/se3mat.h b/Thirdparty/g2o-imx/g2o/types/se3mat.h
similarity index 100%
rename from Thirdparty/g2o/g2o/types/se3mat.h
rename to Thirdparty/g2o-imx/g2o/types/se3mat.h
diff --git a/Thirdparty/g2o/g2o/types/se3quat.h b/Thirdparty/g2o-imx/g2o/types/se3quat.h
similarity index 100%
rename from Thirdparty/g2o/g2o/types/se3quat.h
rename to Thirdparty/g2o-imx/g2o/types/se3quat.h
diff --git a/Thirdparty/g2o/g2o/types/sim3.h b/Thirdparty/g2o-imx/g2o/types/sim3.h
similarity index 100%
rename from Thirdparty/g2o/g2o/types/sim3.h
rename to Thirdparty/g2o-imx/g2o/types/sim3.h
diff --git a/Thirdparty/g2o/g2o/types/types_sba.cpp b/Thirdparty/g2o-imx/g2o/types/types_sba.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/types/types_sba.cpp
rename to Thirdparty/g2o-imx/g2o/types/types_sba.cpp
diff --git a/Thirdparty/g2o/g2o/types/types_sba.h b/Thirdparty/g2o-imx/g2o/types/types_sba.h
similarity index 100%
rename from Thirdparty/g2o/g2o/types/types_sba.h
rename to Thirdparty/g2o-imx/g2o/types/types_sba.h
diff --git a/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp b/Thirdparty/g2o-imx/g2o/types/types_seven_dof_expmap.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp
rename to Thirdparty/g2o-imx/g2o/types/types_seven_dof_expmap.cpp
diff --git a/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h b/Thirdparty/g2o-imx/g2o/types/types_seven_dof_expmap.h
similarity index 100%
rename from Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h
rename to Thirdparty/g2o-imx/g2o/types/types_seven_dof_expmap.h
diff --git a/Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp b/Thirdparty/g2o-imx/g2o/types/types_six_dof_expmap.cpp
similarity index 100%
rename from Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp
rename to Thirdparty/g2o-imx/g2o/types/types_six_dof_expmap.cpp
diff --git a/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h b/Thirdparty/g2o-imx/g2o/types/types_six_dof_expmap.h
similarity index 100%
rename from Thirdparty/g2o/g2o/types/types_six_dof_expmap.h
rename to Thirdparty/g2o-imx/g2o/types/types_six_dof_expmap.h
diff --git a/Thirdparty/g2o/license-bsd.txt b/Thirdparty/g2o-imx/license-bsd.txt
similarity index 100%
rename from Thirdparty/g2o/license-bsd.txt
rename to Thirdparty/g2o-imx/license-bsd.txt
diff --git a/Thirdparty/g2o/g2o/stuff/timeutil.cpp b/Thirdparty/g2o/g2o/stuff/timeutil.cpp
deleted file mode 100644
index ec19051..0000000
--- a/Thirdparty/g2o/g2o/stuff/timeutil.cpp
+++ /dev/null
@@ -1,124 +0,0 @@
-// g2o - General Graph Optimization
-// Copyright (C) 2011 R. Kuemmerle, G. Grisetti, W. Burgard
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-// * Redistributions of source code must retain the above copyright notice,
-//   this list of conditions and the following disclaimer.
-// * Redistributions in binary form must reproduce the above copyright
-//   notice, this list of conditions and the following disclaimer in the
-//   documentation and/or other materials provided with the distribution.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
-// IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-// PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
-// TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#include "timeutil.h"
-#include <iostream>
-
-#ifdef _WINDOWS
-#include <time.h>
-#include <windows.h>
-#endif
-
-#ifdef UNIX
-#include <unistd.h>
-#endif
-
-namespace g2o {
-
-#ifdef _WINDOWS
-#if defined(_MSC_VER) || defined(_MSC_EXTENSIONS)
-  #define DELTA_EPOCH_IN_MICROSECS  11644473600000000Ui64
-#else
-  #define DELTA_EPOCH_IN_MICROSECS  11644473600000000ULL
-#endif
-
-struct timezone
-{
-  int  tz_minuteswest; /* minutes W of Greenwich */
-  int  tz_dsttime;     /* type of dst correction */
-};
-
-int gettimeofday(struct timeval *tv, struct timezone *tz)
-{
-// Define a structure to receive the current Windows filetime
-  FILETIME ft;
- 
-// Initialize the present time to 0 and the timezone to UTC
-  unsigned __int64 tmpres = 0;
-  static int tzflag = 0;
- 
-  if (NULL != tv)
-  {
-    GetSystemTimeAsFileTime(&ft);
- 
-// The GetSystemTimeAsFileTime returns the number of 100 nanosecond 
-// intervals since Jan 1, 1601 in a structure. Copy the high bits to 
-// the 64 bit tmpres, shift it left by 32 then or in the low 32 bits.
-    tmpres |= ft.dwHighDateTime;
-    tmpres <<= 32;
-    tmpres |= ft.dwLowDateTime;
- 
-// Convert to microseconds by dividing by 10
-    tmpres /= 10;
- 
-// The Unix epoch starts on Jan 1 1970.  Need to subtract the difference 
-// in seconds from Jan 1 1601.
-    tmpres -= DELTA_EPOCH_IN_MICROSECS;
- 
-// Finally change microseconds to seconds and place in the seconds value. 
-// The modulus picks up the microseconds.
-    tv->tv_sec = (long)(tmpres / 1000000UL);
-    tv->tv_usec = (long)(tmpres % 1000000UL);
-  }
- 
-  if (NULL != tz) {
-    if (!tzflag) {
-      _tzset();
-      tzflag++;
-    }
-
-    long sec;
-    int hours;
-    _get_timezone(&sec);
-    _get_daylight(&hours);
-  
-// Adjust for the timezone west of Greenwich
-    tz->tz_minuteswest = sec / 60;
-    tz->tz_dsttime = hours;
-  }
- 
-  return 0;
-}
-#endif
-
-ScopeTime::ScopeTime(const char* title) : _title(title), _startTime(get_monotonic_time()) {}
-
-ScopeTime::~ScopeTime() {
-  std::cerr << _title<<" took "<<1000*(get_monotonic_time()-_startTime)<<"ms.\n";
-}
-
-double get_monotonic_time()
-{
-#if (defined(_POSIX_TIMERS) && (_POSIX_TIMERS+0 >= 0) && defined(_POSIX_MONOTONIC_CLOCK))
-  struct timespec ts;
-  clock_gettime(CLOCK_MONOTONIC, &ts);
-  return ts.tv_sec + ts.tv_nsec*1e-9;
-#else
-  return get_time();
-#endif
-}
-
-} // end namespace
diff --git a/Thirdparty/g2o/g2o/stuff/timeutil.h b/Thirdparty/g2o/g2o/stuff/timeutil.h
deleted file mode 100644
index bde8e31..0000000
--- a/Thirdparty/g2o/g2o/stuff/timeutil.h
+++ /dev/null
@@ -1,132 +0,0 @@
-// g2o - General Graph Optimization
-// Copyright (C) 2011 R. Kuemmerle, G. Grisetti, W. Burgard
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-// * Redistributions of source code must retain the above copyright notice,
-//   this list of conditions and the following disclaimer.
-// * Redistributions in binary form must reproduce the above copyright
-//   notice, this list of conditions and the following disclaimer in the
-//   documentation and/or other materials provided with the distribution.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
-// IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-// PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
-// TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-#ifndef G2O_TIMEUTIL_H
-#define G2O_TIMEUTIL_H
-
-#ifdef _WINDOWS
-#include <time.h>
-#else
-#include <sys/time.h>
-#endif
-
-#include <string>
-
-
-/** @addtogroup utils **/
-// @{
-
-/** \file timeutil.h
- * \brief utility functions for handling time related stuff
- */
-
-/// Executes code, only if secs are gone since last exec.
-/// extended version, in which the current time is given, e.g., timestamp of IPC message
-#ifndef DO_EVERY_TS
-#define DO_EVERY_TS(secs, currentTime, code) \
-if (1) {\
-  static double s_lastDone_ = (currentTime); \
-  double s_now_ = (currentTime); \
-  if (s_lastDone_ > s_now_) \
-    s_lastDone_ = s_now_; \
-  if (s_now_ - s_lastDone_ > (secs)) { \
-    code; \
-    s_lastDone_ = s_now_; \
-  }\
-} else \
-  (void)0
-#endif
-
-/// Executes code, only if secs are gone since last exec.
-#ifndef DO_EVERY
-#define DO_EVERY(secs, code) DO_EVERY_TS(secs, g2o::get_time(), code)
-#endif
-
-#ifndef MEASURE_TIME
-#define MEASURE_TIME(text, code) \
-  if(1) { \
-    double _start_time_ = g2o::get_time(); \
-    code; \
-    fprintf(stderr, "%s took %f sec\n", text, g2o::get_time() - _start_time_); \
-  } else \
-    (void) 0
-#endif
-
-namespace g2o {
-
-#ifdef _WINDOWS
-typedef struct timeval {
-  long tv_sec;
-  long tv_usec;
-} timeval;
- int gettimeofday(struct timeval *tv, struct timezone *tz);
-#endif
-
-/**
- * return the current time in seconds since 1. Jan 1970
- */
-inline double get_time() 
-{
-  struct timeval ts;
-  gettimeofday(&ts,0);
-  return ts.tv_sec + ts.tv_usec*1e-6;
-}
-
-/**
- * return a monotonic increasing time which basically does not need to
- * have a reference point. Consider this for measuring how long some
- * code fragments required to execute.
- *
- * On Linux we call clock_gettime() on other systems we currently
- * call get_time().
- */
- double get_monotonic_time();
-
-/**
- * \brief Class to measure the time spent in a scope
- *
- * To use this class, e.g. to measure the time spent in a function,
- * just create and instance at the beginning of the function.
- */
-class  ScopeTime {
-  public: 
-    ScopeTime(const char* title);
-    ~ScopeTime();
-  private:
-    std::string _title;
-    double _startTime;
-};
-
-} // end namespace
-
-#ifndef MEASURE_FUNCTION_TIME
-#define MEASURE_FUNCTION_TIME \
-  g2o::ScopeTime scopeTime(__PRETTY_FUNCTION__)
-#endif
-
-
-// @}
-#endif
diff --git a/include/Atlas.h b/include/Atlas.h
index e1e2717..5055f18 100644
--- a/include/Atlas.h
+++ b/include/Atlas.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -32,7 +33,7 @@
 #include <boost/serialization/export.hpp>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 class Viewer;
 class Map;
@@ -165,6 +166,6 @@ protected:
 
 }; // class Atlas
 
-} // namespace ORB_SLAM3
+} // namespace imx-hc-slam
 
 #endif // ATLAS_H
diff --git a/include/CameraModels/GeometricCamera.h b/include/CameraModels/GeometricCamera.h
index 6a4f5d6..3a0fbcd 100644
--- a/include/CameraModels/GeometricCamera.h
+++ b/include/CameraModels/GeometricCamera.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -32,14 +33,14 @@
 #include <boost/serialization/vector.hpp>
 #include <boost/serialization/assume_abstract.hpp>
 
-#include <sophus/se3.hpp>
+#include "Thirdparty/Sophus-imx/sophus/se3.hpp"
 
 #include <Eigen/Geometry>
 
 #include "Converter.h"
 #include "GeometricTools.h"
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
     class GeometricCamera {
 
         friend class boost::serialization::access;
diff --git a/include/CameraModels/KannalaBrandt8.h b/include/CameraModels/KannalaBrandt8.h
index b8fd2ed..1b0cdc2 100644
--- a/include/CameraModels/KannalaBrandt8.h
+++ b/include/CameraModels/KannalaBrandt8.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -26,7 +27,7 @@
 
 #include "TwoViewReconstruction.h"
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
     class KannalaBrandt8 : public GeometricCamera {
 
     friend class boost::serialization::access;
diff --git a/include/CameraModels/Pinhole.h b/include/CameraModels/Pinhole.h
index d9b3744..514f022 100644
--- a/include/CameraModels/Pinhole.h
+++ b/include/CameraModels/Pinhole.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -25,7 +26,7 @@
 
 #include "TwoViewReconstruction.h"
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
     class Pinhole : public GeometricCamera {
 
     friend class boost::serialization::access;
diff --git a/include/Config.h b/include/Config.h
index 20f3a0b..1c5e216 100644
--- a/include/Config.h
+++ b/include/Config.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -25,7 +26,7 @@
 #include <string>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class ViewerConfig
diff --git a/include/Converter.h b/include/Converter.h
index 30b051e..78f48aa 100644
--- a/include/Converter.h
+++ b/include/Converter.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -23,13 +24,13 @@
 #include<opencv2/core/core.hpp>
 
 #include<Eigen/Dense>
-#include"Thirdparty/g2o/g2o/types/types_six_dof_expmap.h"
-#include"Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h"
+#include"Thirdparty/g2o-imx/g2o/types/types_six_dof_expmap.h"
+#include"Thirdparty/g2o-imx/g2o/types/types_seven_dof_expmap.h"
 
-#include "Thirdparty/Sophus/sophus/geometry.hpp"
-#include "Thirdparty/Sophus/sophus/sim3.hpp"
+#include "Thirdparty/Sophus-imx/sophus/geometry.hpp"
+#include "Thirdparty/Sophus-imx/sophus/sim3.hpp"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Converter
diff --git a/include/Frame.h b/include/Frame.h
index 572073f..c5001ae 100644
--- a/include/Frame.h
+++ b/include/Frame.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -22,10 +23,10 @@
 
 #include<vector>
 
-#include "Thirdparty/DBoW2/DBoW2/BowVector.h"
-#include "Thirdparty/DBoW2/DBoW2/FeatureVector.h"
+#include "Thirdparty/DBoW2-imx/DBoW2/BowVector.h"
+#include "Thirdparty/DBoW2-imx/DBoW2/FeatureVector.h"
 
-#include "Thirdparty/Sophus/sophus/geometry.hpp"
+#include "Thirdparty/Sophus-imx/sophus/geometry.hpp"
 
 #include "ImuTypes.h"
 #include "ORBVocabulary.h"
@@ -37,9 +38,9 @@
 #include <opencv2/opencv.hpp>
 
 #include "Eigen/Core"
-#include "sophus/se3.hpp"
+#include "Thirdparty/Sophus-imx/sophus/se3.hpp"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 #define FRAME_GRID_ROWS 48
 #define FRAME_GRID_COLS 64
diff --git a/include/FrameDrawer.h b/include/FrameDrawer.h
index b499650..6045e86 100644
--- a/include/FrameDrawer.h
+++ b/include/FrameDrawer.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -31,7 +32,7 @@
 #include <unordered_set>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Tracking;
diff --git a/include/G2oTypes.h b/include/G2oTypes.h
index c6543f2..8d3626e 100644
--- a/include/G2oTypes.h
+++ b/include/G2oTypes.h
@@ -1,29 +1,30 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
 #ifndef G2OTYPES_H
 #define G2OTYPES_H
 
-#include "Thirdparty/g2o/g2o/core/base_vertex.h"
-#include "Thirdparty/g2o/g2o/core/base_binary_edge.h"
-#include "Thirdparty/g2o/g2o/types/types_sba.h"
-#include "Thirdparty/g2o/g2o/core/base_multi_edge.h"
-#include "Thirdparty/g2o/g2o/core/base_unary_edge.h"
+#include "Thirdparty/g2o-imx/g2o/core/base_vertex.h"
+#include "Thirdparty/g2o-imx/g2o/core/base_binary_edge.h"
+#include "Thirdparty/g2o-imx/g2o/types/types_sba.h"
+#include "Thirdparty/g2o-imx/g2o/core/base_multi_edge.h"
+#include "Thirdparty/g2o-imx/g2o/core/base_unary_edge.h"
 
 #include<opencv2/core/core.hpp>
 
@@ -37,7 +38,7 @@
 #include"Converter.h"
 #include <math.h>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class KeyFrame;
diff --git a/include/GeometricTools.h b/include/GeometricTools.h
index 6fa8cd4..1d04276 100644
--- a/include/GeometricTools.h
+++ b/include/GeometricTools.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -21,10 +22,10 @@
 #define GEOMETRIC_TOOLS_H
 
 #include <opencv2/core/core.hpp>
-#include <sophus/se3.hpp>
+#include "Thirdparty/Sophus-imx/sophus/se3.hpp"
 #include <Eigen/Core>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class KeyFrame;
diff --git a/include/ImuTypes.h b/include/ImuTypes.h
index ac78d36..b8985dc 100644
--- a/include/ImuTypes.h
+++ b/include/ImuTypes.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -26,7 +27,7 @@
 #include <Eigen/Core>
 #include <Eigen/Geometry>
 #include <Eigen/Dense>
-#include <sophus/se3.hpp>
+#include "Thirdparty/Sophus-imx/sophus/se3.hpp"
 #include <mutex>
 
 #include "SerializationUtils.h"
@@ -34,7 +35,7 @@
 #include <boost/serialization/serialization.hpp>
 #include <boost/serialization/vector.hpp>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 namespace IMU
diff --git a/include/KeyFrame.h b/include/KeyFrame.h
index 1b8d1c4..b4f006f 100644
--- a/include/KeyFrame.h
+++ b/include/KeyFrame.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -21,8 +22,8 @@
 #define KEYFRAME_H
 
 #include "MapPoint.h"
-#include "Thirdparty/DBoW2/DBoW2/BowVector.h"
-#include "Thirdparty/DBoW2/DBoW2/FeatureVector.h"
+#include "Thirdparty/DBoW2-imx/DBoW2/BowVector.h"
+#include "Thirdparty/DBoW2-imx/DBoW2/FeatureVector.h"
 #include "ORBVocabulary.h"
 #include "ORBextractor.h"
 #include "Frame.h"
@@ -39,7 +40,7 @@
 #include <boost/serialization/map.hpp>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Map;
diff --git a/include/KeyFrameDatabase.h b/include/KeyFrameDatabase.h
index e1236c9..1fa4f94 100644
--- a/include/KeyFrameDatabase.h
+++ b/include/KeyFrameDatabase.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -36,7 +37,7 @@
 #include<mutex>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class KeyFrame;
diff --git a/include/LocalMapping.h b/include/LocalMapping.h
index dd04a3d..eb5d23e 100644
--- a/include/LocalMapping.h
+++ b/include/LocalMapping.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -30,7 +31,7 @@
 #include <mutex>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class System;
diff --git a/include/LoopClosing.h b/include/LoopClosing.h
index c9ccb26..4c0db96 100644
--- a/include/LoopClosing.h
+++ b/include/LoopClosing.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -31,9 +32,9 @@
 #include <boost/algorithm/string.hpp>
 #include <thread>
 #include <mutex>
-#include "Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h"
+#include "Thirdparty/g2o-imx/g2o/types/types_seven_dof_expmap.h"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Tracking;
diff --git a/include/MLPnPsolver.h b/include/MLPnPsolver.h
index 963612c..c30a41b 100644
--- a/include/MLPnPsolver.h
+++ b/include/MLPnPsolver.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -55,7 +56,7 @@
 #include<Eigen/Dense>
 #include<Eigen/Sparse>
 
-namespace ORB_SLAM3{
+namespace imx_hc_slam{
     class MLPnPsolver {
     public:
         EIGEN_MAKE_ALIGNED_OPERATOR_NEW
diff --git a/include/Map.h b/include/Map.h
index 0e0a49c..1e6c390 100644
--- a/include/Map.h
+++ b/include/Map.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -30,7 +31,7 @@
 #include <boost/serialization/base_object.hpp>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class MapPoint;
@@ -203,6 +204,6 @@ protected:
 
 };
 
-} //namespace ORB_SLAM3
+} //namespace imx-hc-slam
 
 #endif // MAP_H
diff --git a/include/MapDrawer.h b/include/MapDrawer.h
index 635fb21..98e3cbd 100644
--- a/include/MapDrawer.h
+++ b/include/MapDrawer.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -28,7 +29,7 @@
 
 #include<mutex>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Settings;
diff --git a/include/MapPoint.h b/include/MapPoint.h
index 29cb420..ac45eb5 100644
--- a/include/MapPoint.h
+++ b/include/MapPoint.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -34,7 +35,7 @@
 #include <boost/serialization/array.hpp>
 #include <boost/serialization/map.hpp>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class KeyFrame;
diff --git a/include/ORBVocabulary.h b/include/ORBVocabulary.h
index 71628b8..227490e 100644
--- a/include/ORBVocabulary.h
+++ b/include/ORBVocabulary.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -20,10 +21,10 @@
 #ifndef ORBVOCABULARY_H
 #define ORBVOCABULARY_H
 
-#include"Thirdparty/DBoW2/DBoW2/FORB.h"
-#include"Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h"
+#include"Thirdparty/DBoW2-imx/DBoW2/FORB.h"
+#include"Thirdparty/DBoW2-imx/DBoW2/TemplatedVocabulary.h"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 typedef DBoW2::TemplatedVocabulary<DBoW2::FORB::TDescriptor, DBoW2::FORB>
diff --git a/include/ORBextractor.h b/include/ORBextractor.h
index bb7aace..90ee338 100644
--- a/include/ORBextractor.h
+++ b/include/ORBextractor.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -24,7 +25,7 @@
 #include <opencv2/opencv.hpp>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class ExtractorNode
diff --git a/include/ORBmatcher.h b/include/ORBmatcher.h
index 92bedd7..998b72d 100644
--- a/include/ORBmatcher.h
+++ b/include/ORBmatcher.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -23,14 +24,14 @@
 #include<vector>
 #include<opencv2/core/core.hpp>
 #include<opencv2/features2d/features2d.hpp>
-#include"sophus/sim3.hpp"
+#include"Thirdparty/Sophus-imx/sophus/sim3.hpp"
 
 #include"MapPoint.h"
 #include"KeyFrame.h"
 #include"Frame.h"
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
     class ORBmatcher
diff --git a/include/OptimizableTypes.h b/include/OptimizableTypes.h
index dbadb5b..789d406 100644
--- a/include/OptimizableTypes.h
+++ b/include/OptimizableTypes.h
@@ -1,33 +1,34 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
 #ifndef ORB_SLAM3_OPTIMIZABLETYPES_H
 #define ORB_SLAM3_OPTIMIZABLETYPES_H
 
-#include "Thirdparty/g2o/g2o/core/base_unary_edge.h"
-#include <Thirdparty/g2o/g2o/types/types_six_dof_expmap.h>
-#include <Thirdparty/g2o/g2o/types/sim3.h>
+#include "Thirdparty/g2o-imx/g2o/core/base_unary_edge.h"
+#include <Thirdparty/g2o-imx/g2o/types/types_six_dof_expmap.h>
+#include <Thirdparty/g2o-imx/g2o/types/sim3.h>
 
 #include <Eigen/Geometry>
 #include <include/CameraModels/GeometricCamera.h>
 
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
 class  EdgeSE3ProjectXYZOnlyPose: public  g2o::BaseUnaryEdge<2, Eigen::Vector2d, g2o::VertexSE3Expmap>{
 public:
     EIGEN_MAKE_ALIGNED_OPERATOR_NEW
@@ -172,7 +173,7 @@ public:
 };
 
 
-class EdgeSim3ProjectXYZ : public  g2o::BaseBinaryEdge<2, Eigen::Vector2d, g2o::VertexSBAPointXYZ, ORB_SLAM3::VertexSim3Expmap>
+class EdgeSim3ProjectXYZ : public  g2o::BaseBinaryEdge<2, Eigen::Vector2d, g2o::VertexSBAPointXYZ, imx_hc_slam::VertexSim3Expmap>
 {
 public:
     EIGEN_MAKE_ALIGNED_OPERATOR_NEW
@@ -182,7 +183,7 @@ public:
 
     void computeError()
     {
-        const ORB_SLAM3::VertexSim3Expmap* v1 = static_cast<const ORB_SLAM3::VertexSim3Expmap*>(_vertices[1]);
+        const imx_hc_slam::VertexSim3Expmap* v1 = static_cast<const imx_hc_slam::VertexSim3Expmap*>(_vertices[1]);
         const g2o::VertexSBAPointXYZ* v2 = static_cast<const g2o::VertexSBAPointXYZ*>(_vertices[0]);
 
         Eigen::Vector2d obs(_measurement);
@@ -203,7 +204,7 @@ public:
 
     void computeError()
     {
-        const ORB_SLAM3::VertexSim3Expmap* v1 = static_cast<const ORB_SLAM3::VertexSim3Expmap*>(_vertices[1]);
+        const imx_hc_slam::VertexSim3Expmap* v1 = static_cast<const imx_hc_slam::VertexSim3Expmap*>(_vertices[1]);
         const g2o::VertexSBAPointXYZ* v2 = static_cast<const g2o::VertexSBAPointXYZ*>(_vertices[0]);
 
         Eigen::Vector2d obs(_measurement);
diff --git a/include/Optimizer.h b/include/Optimizer.h
index 5013f9b..368681b 100644
--- a/include/Optimizer.h
+++ b/include/Optimizer.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -28,17 +29,17 @@
 
 #include <math.h>
 
-#include "Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h"
-#include "Thirdparty/g2o/g2o/core/sparse_block_matrix.h"
-#include "Thirdparty/g2o/g2o/core/block_solver.h"
-#include "Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h"
-#include "Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h"
-#include "Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h"
-#include "Thirdparty/g2o/g2o/types/types_six_dof_expmap.h"
-#include "Thirdparty/g2o/g2o/core/robust_kernel_impl.h"
-#include "Thirdparty/g2o/g2o/solvers/linear_solver_dense.h"
-
-namespace ORB_SLAM3
+#include "Thirdparty/g2o-imx/g2o/types/types_seven_dof_expmap.h"
+#include "Thirdparty/g2o-imx/g2o/core/sparse_block_matrix.h"
+#include "Thirdparty/g2o-imx/g2o/core/block_solver.h"
+#include "Thirdparty/g2o-imx/g2o/core/optimization_algorithm_levenberg.h"
+#include "Thirdparty/g2o-imx/g2o/core/optimization_algorithm_gauss_newton.h"
+#include "Thirdparty/g2o-imx/g2o/solvers/linear_solver_eigen.h"
+#include "Thirdparty/g2o-imx/g2o/types/types_six_dof_expmap.h"
+#include "Thirdparty/g2o-imx/g2o/core/robust_kernel_impl.h"
+#include "Thirdparty/g2o-imx/g2o/solvers/linear_solver_dense.h"
+
+namespace imx_hc_slam
 {
 
 class LoopClosing;
@@ -101,6 +102,6 @@ public:
     EIGEN_MAKE_ALIGNED_OPERATOR_NEW;
 };
 
-} //namespace ORB_SLAM3
+} //namespace imx-hc-slam
 
 #endif // OPTIMIZER_H
diff --git a/include/SerializationUtils.h b/include/SerializationUtils.h
index 814d325..2ccbe66 100644
--- a/include/SerializationUtils.h
+++ b/include/SerializationUtils.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -22,7 +23,7 @@
 #include <boost/serialization/serialization.hpp>
 #include <boost/serialization/vector.hpp>
 
-#include <sophus/se3.hpp>
+#include "Thirdparty/Sophus-imx/sophus/se3.hpp"
 #include <Eigen/Core>
 
 #include <opencv2/core/core.hpp>
@@ -30,7 +31,7 @@
 
 #include <vector>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 template <class Archive>
@@ -161,6 +162,6 @@ void serializeVectorKeyPoints(Archive& ar, const std::vector<cv::KeyPoint>& vKP,
     }
 }
 
-} // namespace ORB_SLAM3
+} // namespace imx-hc-slam
 
 #endif // SERIALIZATION_UTILS_H
diff --git a/include/Settings.h b/include/Settings.h
index beab7de..5473200 100644
--- a/include/Settings.h
+++ b/include/Settings.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -30,7 +31,7 @@
 #include <stdlib.h>
 #include <string>
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
 
     class System;
 
diff --git a/include/Sim3Solver.h b/include/Sim3Solver.h
index 5539987..3fd0940 100644
--- a/include/Sim3Solver.h
+++ b/include/Sim3Solver.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -27,7 +28,7 @@
 
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Sim3Solver
diff --git a/include/System.h b/include/System.h
index 872c86e..5bb218c 100644
--- a/include/System.h
+++ b/include/System.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -41,7 +42,7 @@
 #include "Settings.h"
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Verbose
diff --git a/include/Tracking.h b/include/Tracking.h
index 863c98e..c21c227 100644
--- a/include/Tracking.h
+++ b/include/Tracking.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -42,7 +43,7 @@
 #include <mutex>
 #include <unordered_set>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Viewer;
diff --git a/include/TwoViewReconstruction.h b/include/TwoViewReconstruction.h
index 044563c..7997e41 100644
--- a/include/TwoViewReconstruction.h
+++ b/include/TwoViewReconstruction.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -23,9 +24,9 @@
 #include <Eigen/Core>
 #include <unordered_set>
 
-#include <sophus/se3.hpp>
+#include "Thirdparty/Sophus-imx/sophus/se3.hpp"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
     class TwoViewReconstruction
diff --git a/include/Viewer.h b/include/Viewer.h
index 920c628..32e5985 100644
--- a/include/Viewer.h
+++ b/include/Viewer.h
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -28,7 +29,7 @@
 
 #include <mutex>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 class Tracking;
diff --git a/src/Atlas.cc b/src/Atlas.cc
index 7bdea06..27aa1e2 100644
--- a/src/Atlas.cc
+++ b/src/Atlas.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -23,7 +24,7 @@
 #include "Pinhole.h"
 #include "KannalaBrandt8.h"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 Atlas::Atlas(){
@@ -410,4 +411,4 @@ map<long unsigned int, KeyFrame*> Atlas::GetAtlasKeyframes()
     return mpIdKFs;
 }
 
-} //namespace ORB_SLAM3
+} //namespace imx-hc-slam
diff --git a/src/CameraModels/KannalaBrandt8.cpp b/src/CameraModels/KannalaBrandt8.cpp
index e5d067d..eb7e495 100644
--- a/src/CameraModels/KannalaBrandt8.cpp
+++ b/src/CameraModels/KannalaBrandt8.cpp
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -20,9 +21,9 @@
 
 #include <boost/serialization/export.hpp>
 
-//BOOST_CLASS_EXPORT_IMPLEMENT(ORB_SLAM3::KannalaBrandt8)
+//BOOST_CLASS_EXPORT_IMPLEMENT(imx-hc-slam::KannalaBrandt8)
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
 //BOOST_CLASS_EXPORT_GUID(KannalaBrandt8, "KannalaBrandt8")
 
     cv::Point2f KannalaBrandt8::project(const cv::Point3f &p3D) {
diff --git a/src/CameraModels/Pinhole.cpp b/src/CameraModels/Pinhole.cpp
index 816e4dc..c05d58d 100644
--- a/src/CameraModels/Pinhole.cpp
+++ b/src/CameraModels/Pinhole.cpp
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -20,9 +21,9 @@
 
 #include <boost/serialization/export.hpp>
 
-//BOOST_CLASS_EXPORT_IMPLEMENT(ORB_SLAM3::Pinhole)
+//BOOST_CLASS_EXPORT_IMPLEMENT(imx-hc-slam::Pinhole)
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
 //BOOST_CLASS_EXPORT_GUID(Pinhole, "Pinhole")
 
     long unsigned int GeometricCamera::nNextId=0;
diff --git a/src/Config.cc b/src/Config.cc
index aa39f2a..3809fae 100644
--- a/src/Config.cc
+++ b/src/Config.cc
@@ -1,25 +1,26 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
 
 #include "Config.h"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 bool ConfigParser::ParseConfigFile(std::string &strConfigFile)
diff --git a/src/Converter.cc b/src/Converter.cc
index daf840e..cb0f6fe 100644
--- a/src/Converter.cc
+++ b/src/Converter.cc
@@ -1,24 +1,25 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
 #include "Converter.h"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 std::vector<cv::Mat> Converter::toDescriptorVector(const cv::Mat &Descriptors)
diff --git a/src/Frame.cc b/src/Frame.cc
index 10c5fa9..ac50d36 100644
--- a/src/Frame.cc
+++ b/src/Frame.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -30,7 +31,7 @@
 #include <include/CameraModels/Pinhole.h>
 #include <include/CameraModels/KannalaBrandt8.h>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 long unsigned int Frame::nNextId=0;
diff --git a/src/FrameDrawer.cc b/src/FrameDrawer.cc
index a8cc375..fdda893 100644
--- a/src/FrameDrawer.cc
+++ b/src/FrameDrawer.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -24,7 +25,7 @@
 
 #include<mutex>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 FrameDrawer::FrameDrawer(Atlas* pAtlas):both(false),mpAtlas(pAtlas)
diff --git a/src/G2oTypes.cc b/src/G2oTypes.cc
index 7c1f349..5bc2263 100644
--- a/src/G2oTypes.cc
+++ b/src/G2oTypes.cc
@@ -1,25 +1,26 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
 #include "G2oTypes.h"
 #include "ImuTypes.h"
 #include "Converter.h"
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 ImuCamPose::ImuCamPose(KeyFrame *pKF):its(0)
diff --git a/src/GeometricTools.cc b/src/GeometricTools.cc
index 6003d44..3c87dfa 100644
--- a/src/GeometricTools.cc
+++ b/src/GeometricTools.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -20,7 +21,7 @@
 
 #include "KeyFrame.h"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 Eigen::Matrix3f GeometricTools::ComputeF12(KeyFrame* &pKF1, KeyFrame* &pKF2)
diff --git a/src/ImuTypes.cc b/src/ImuTypes.cc
index ec82cba..884af08 100644
--- a/src/ImuTypes.cc
+++ b/src/ImuTypes.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -23,7 +24,7 @@
 
 #include<iostream>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 namespace IMU
diff --git a/src/KeyFrame.cc b/src/KeyFrame.cc
index 293ab48..625c53f 100644
--- a/src/KeyFrame.cc
+++ b/src/KeyFrame.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -21,7 +22,7 @@
 #include "ImuTypes.h"
 #include<mutex>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 long unsigned int KeyFrame::nNextId=0;
diff --git a/src/KeyFrameDatabase.cc b/src/KeyFrameDatabase.cc
index 13b4da6..48ec6d6 100644
--- a/src/KeyFrameDatabase.cc
+++ b/src/KeyFrameDatabase.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -20,13 +21,13 @@
 #include "KeyFrameDatabase.h"
 
 #include "KeyFrame.h"
-#include "Thirdparty/DBoW2/DBoW2/BowVector.h"
+#include "Thirdparty/DBoW2-imx/DBoW2/BowVector.h"
 
 #include<mutex>
 
 using namespace std;
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 KeyFrameDatabase::KeyFrameDatabase (const ORBVocabulary &voc):
diff --git a/src/LocalMapping.cc b/src/LocalMapping.cc
index 895a16b..969815c 100644
--- a/src/LocalMapping.cc
+++ b/src/LocalMapping.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -27,7 +28,7 @@
 #include<mutex>
 #include<chrono>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 LocalMapping::LocalMapping(System* pSys, Atlas *pAtlas, const float bMonocular, bool bInertial, const string &_strSeqName):
diff --git a/src/LoopClosing.cc b/src/LoopClosing.cc
index db3c30f..78d0104 100644
--- a/src/LoopClosing.cc
+++ b/src/LoopClosing.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -29,7 +30,7 @@
 #include<thread>
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 LoopClosing::LoopClosing(Atlas *pAtlas, KeyFrameDatabase *pDB, ORBVocabulary *pVoc, const bool bFixScale, const bool bActiveLC):
diff --git a/src/MLPnPsolver.cpp b/src/MLPnPsolver.cpp
index 2f8702b..8c18711 100644
--- a/src/MLPnPsolver.cpp
+++ b/src/MLPnPsolver.cpp
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -51,7 +52,7 @@
 #include <Eigen/Sparse>
 
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
     MLPnPsolver::MLPnPsolver(const Frame &F, const vector<MapPoint *> &vpMapPointMatches):
             mnInliersi(0), mnIterations(0), mnBestInliers(0), N(0), mpCamera(F.mpCamera){
         mvpMapPointMatches = vpMapPointMatches;
diff --git a/src/Map.cc b/src/Map.cc
index f1f8cd0..032b2de 100644
--- a/src/Map.cc
+++ b/src/Map.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -21,7 +22,7 @@
 
 #include<mutex>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 long unsigned int Map::nNextId=0;
@@ -491,4 +492,4 @@ void Map::PostLoad(KeyFrameDatabase* pKFDB, ORBVocabulary* pORBVoc/*, map<long u
 }
 
 
-} //namespace ORB_SLAM3
+} //namespace imx-hc-slam
diff --git a/src/MapDrawer.cc b/src/MapDrawer.cc
index 701a8de..056a85f 100644
--- a/src/MapDrawer.cc
+++ b/src/MapDrawer.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -22,7 +23,7 @@
 #include <pangolin/pangolin.h>
 #include <mutex>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 
diff --git a/src/MapPoint.cc b/src/MapPoint.cc
index 1cf802c..22dd1cd 100644
--- a/src/MapPoint.cc
+++ b/src/MapPoint.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -21,7 +22,7 @@
 
 #include<mutex>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 long unsigned int MapPoint::nNextId=0;
diff --git a/src/ORBextractor.cc b/src/ORBextractor.cc
index 970b7cc..e5d25d6 100644
--- a/src/ORBextractor.cc
+++ b/src/ORBextractor.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -65,7 +66,7 @@
 using namespace cv;
 using namespace std;
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
     const int PATCH_SIZE = 31;
diff --git a/src/ORBmatcher.cc b/src/ORBmatcher.cc
index 9129683..80c35f9 100644
--- a/src/ORBmatcher.cc
+++ b/src/ORBmatcher.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -23,13 +24,13 @@
 
 #include<opencv2/core/core.hpp>
 
-#include "Thirdparty/DBoW2/DBoW2/FeatureVector.h"
+#include "Thirdparty/DBoW2-imx/DBoW2/FeatureVector.h"
 
 #include<stdint-gcc.h>
 
 using namespace std;
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
     const int ORBmatcher::TH_HIGH = 100;
diff --git a/src/OptimizableTypes.cpp b/src/OptimizableTypes.cpp
index eb8ee98..90becb2 100644
--- a/src/OptimizableTypes.cpp
+++ b/src/OptimizableTypes.cpp
@@ -1,24 +1,25 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
 #include "OptimizableTypes.h"
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
     bool EdgeSE3ProjectXYZOnlyPose::read(std::istream& is){
         for (int i=0; i<2; i++){
             is >> _measurement[i];
diff --git a/src/Optimizer.cc b/src/Optimizer.cc
index b785be3..e2a1950 100644
--- a/src/Optimizer.cc
+++ b/src/Optimizer.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -26,14 +27,14 @@
 #include <Eigen/Dense>
 #include <unsupported/Eigen/MatrixFunctions>
 
-#include "Thirdparty/g2o/g2o/core/sparse_block_matrix.h"
-#include "Thirdparty/g2o/g2o/core/block_solver.h"
-#include "Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h"
-#include "Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h"
-#include "Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h"
-#include "Thirdparty/g2o/g2o/types/types_six_dof_expmap.h"
-#include "Thirdparty/g2o/g2o/core/robust_kernel_impl.h"
-#include "Thirdparty/g2o/g2o/solvers/linear_solver_dense.h"
+#include "Thirdparty/g2o-imx/g2o/core/sparse_block_matrix.h"
+#include "Thirdparty/g2o-imx/g2o/core/block_solver.h"
+#include "Thirdparty/g2o-imx/g2o/core/optimization_algorithm_levenberg.h"
+#include "Thirdparty/g2o-imx/g2o/core/optimization_algorithm_gauss_newton.h"
+#include "Thirdparty/g2o-imx/g2o/solvers/linear_solver_eigen.h"
+#include "Thirdparty/g2o-imx/g2o/types/types_six_dof_expmap.h"
+#include "Thirdparty/g2o-imx/g2o/core/robust_kernel_impl.h"
+#include "Thirdparty/g2o-imx/g2o/solvers/linear_solver_dense.h"
 #include "G2oTypes.h"
 #include "Converter.h"
 
@@ -42,7 +43,7 @@
 #include "OptimizableTypes.h"
 
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 bool sortByVal(const pair<MapPoint*, int> &a, const pair<MapPoint*, int> &b)
 {
@@ -83,10 +84,10 @@ void Optimizer::BundleAdjustment(const vector<KeyFrame *> &vpKFs, const vector<M
 
     const int nExpectedSize = (vpKFs.size())*vpMP.size();
 
-    vector<ORB_SLAM3::EdgeSE3ProjectXYZ*> vpEdgesMono;
+    vector<imx_hc_slam::EdgeSE3ProjectXYZ*> vpEdgesMono;
     vpEdgesMono.reserve(nExpectedSize);
 
-    vector<ORB_SLAM3::EdgeSE3ProjectXYZToBody*> vpEdgesBody;
+    vector<imx_hc_slam::EdgeSE3ProjectXYZToBody*> vpEdgesBody;
     vpEdgesBody.reserve(nExpectedSize);
 
     vector<KeyFrame*> vpEdgeKFMono;
@@ -166,7 +167,7 @@ void Optimizer::BundleAdjustment(const vector<KeyFrame *> &vpKFs, const vector<M
                 Eigen::Matrix<double,2,1> obs;
                 obs << kpUn.pt.x, kpUn.pt.y;
 
-                ORB_SLAM3::EdgeSE3ProjectXYZ* e = new ORB_SLAM3::EdgeSE3ProjectXYZ();
+                imx_hc_slam::EdgeSE3ProjectXYZ* e = new imx_hc_slam::EdgeSE3ProjectXYZ();
 
                 e->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(id)));
                 e->setVertex(1, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(pKF->mnId)));
@@ -236,7 +237,7 @@ void Optimizer::BundleAdjustment(const vector<KeyFrame *> &vpKFs, const vector<M
                     cv::KeyPoint kp = pKF->mvKeysRight[rightIndex];
                     obs << kp.pt.x, kp.pt.y;
 
-                    ORB_SLAM3::EdgeSE3ProjectXYZToBody *e = new ORB_SLAM3::EdgeSE3ProjectXYZToBody();
+                    imx_hc_slam::EdgeSE3ProjectXYZToBody *e = new imx_hc_slam::EdgeSE3ProjectXYZToBody();
 
                     e->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(id)));
                     e->setVertex(1, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(pKF->mnId)));
@@ -311,7 +312,7 @@ void Optimizer::BundleAdjustment(const vector<KeyFrame *> &vpKFs, const vector<M
 
                 for(size_t i2=0, iend=vpEdgesMono.size(); i2<iend;i2++)
                 {
-                    ORB_SLAM3::EdgeSE3ProjectXYZ* e = vpEdgesMono[i2];
+                    imx_hc_slam::EdgeSE3ProjectXYZ* e = vpEdgesMono[i2];
                     MapPoint* pMP = vpMapPointEdgeMono[i2];
                     KeyFrame* pKFedge = vpEdgeKFMono[i2];
 
@@ -836,8 +837,8 @@ int Optimizer::PoseOptimization(Frame *pFrame)
     // Set MapPoint vertices
     const int N = pFrame->N;
 
-    vector<ORB_SLAM3::EdgeSE3ProjectXYZOnlyPose*> vpEdgesMono;
-    vector<ORB_SLAM3::EdgeSE3ProjectXYZOnlyPoseToBody *> vpEdgesMono_FHR;
+    vector<imx_hc_slam::EdgeSE3ProjectXYZOnlyPose*> vpEdgesMono;
+    vector<imx_hc_slam::EdgeSE3ProjectXYZOnlyPoseToBody *> vpEdgesMono_FHR;
     vector<size_t> vnIndexEdgeMono, vnIndexEdgeRight;
     vpEdgesMono.reserve(N);
     vpEdgesMono_FHR.reserve(N);
@@ -872,7 +873,7 @@ int Optimizer::PoseOptimization(Frame *pFrame)
                     const cv::KeyPoint &kpUn = pFrame->mvKeysUn[i];
                     obs << kpUn.pt.x, kpUn.pt.y;
 
-                    ORB_SLAM3::EdgeSE3ProjectXYZOnlyPose* e = new ORB_SLAM3::EdgeSE3ProjectXYZOnlyPose();
+                    imx_hc_slam::EdgeSE3ProjectXYZOnlyPose* e = new imx_hc_slam::EdgeSE3ProjectXYZOnlyPose();
 
                     e->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(0)));
                     e->setMeasurement(obs);
@@ -940,7 +941,7 @@ int Optimizer::PoseOptimization(Frame *pFrame)
                     Eigen::Matrix<double, 2, 1> obs;
                     obs << kpUn.pt.x, kpUn.pt.y;
 
-                    ORB_SLAM3::EdgeSE3ProjectXYZOnlyPose *e = new ORB_SLAM3::EdgeSE3ProjectXYZOnlyPose();
+                    imx_hc_slam::EdgeSE3ProjectXYZOnlyPose *e = new imx_hc_slam::EdgeSE3ProjectXYZOnlyPose();
 
                     e->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex *>(optimizer.vertex(0)));
                     e->setMeasurement(obs);
@@ -967,7 +968,7 @@ int Optimizer::PoseOptimization(Frame *pFrame)
 
                     pFrame->mvbOutlier[i] = false;
 
-                    ORB_SLAM3::EdgeSE3ProjectXYZOnlyPoseToBody *e = new ORB_SLAM3::EdgeSE3ProjectXYZOnlyPoseToBody();
+                    imx_hc_slam::EdgeSE3ProjectXYZOnlyPoseToBody *e = new imx_hc_slam::EdgeSE3ProjectXYZOnlyPoseToBody();
 
                     e->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex *>(optimizer.vertex(0)));
                     e->setMeasurement(obs);
@@ -1014,7 +1015,7 @@ int Optimizer::PoseOptimization(Frame *pFrame)
         nBad=0;
         for(size_t i=0, iend=vpEdgesMono.size(); i<iend; i++)
         {
-            ORB_SLAM3::EdgeSE3ProjectXYZOnlyPose* e = vpEdgesMono[i];
+            imx_hc_slam::EdgeSE3ProjectXYZOnlyPose* e = vpEdgesMono[i];
 
             const size_t idx = vnIndexEdgeMono[i];
 
@@ -1043,7 +1044,7 @@ int Optimizer::PoseOptimization(Frame *pFrame)
 
         for(size_t i=0, iend=vpEdgesMono_FHR.size(); i<iend; i++)
         {
-            ORB_SLAM3::EdgeSE3ProjectXYZOnlyPoseToBody* e = vpEdgesMono_FHR[i];
+            imx_hc_slam::EdgeSE3ProjectXYZOnlyPoseToBody* e = vpEdgesMono_FHR[i];
 
             const size_t idx = vnIndexEdgeRight[i];
 
@@ -1245,10 +1246,10 @@ void Optimizer::LocalBundleAdjustment(KeyFrame *pKF, bool* pbStopFlag, Map* pMap
     // Set MapPoint vertices
     const int nExpectedSize = (lLocalKeyFrames.size()+lFixedCameras.size())*lLocalMapPoints.size();
 
-    vector<ORB_SLAM3::EdgeSE3ProjectXYZ*> vpEdgesMono;
+    vector<imx_hc_slam::EdgeSE3ProjectXYZ*> vpEdgesMono;
     vpEdgesMono.reserve(nExpectedSize);
 
-    vector<ORB_SLAM3::EdgeSE3ProjectXYZToBody*> vpEdgesBody;
+    vector<imx_hc_slam::EdgeSE3ProjectXYZToBody*> vpEdgesBody;
     vpEdgesBody.reserve(nExpectedSize);
 
     vector<KeyFrame*> vpEdgeKFMono;
@@ -1308,7 +1309,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame *pKF, bool* pbStopFlag, Map* pMap
                     Eigen::Matrix<double,2,1> obs;
                     obs << kpUn.pt.x, kpUn.pt.y;
 
-                    ORB_SLAM3::EdgeSE3ProjectXYZ* e = new ORB_SLAM3::EdgeSE3ProjectXYZ();
+                    imx_hc_slam::EdgeSE3ProjectXYZ* e = new imx_hc_slam::EdgeSE3ProjectXYZ();
 
                     e->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(id)));
                     e->setVertex(1, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(pKFi->mnId)));
@@ -1373,7 +1374,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame *pKF, bool* pbStopFlag, Map* pMap
                         cv::KeyPoint kp = pKFi->mvKeysRight[rightIndex];
                         obs << kp.pt.x, kp.pt.y;
 
-                        ORB_SLAM3::EdgeSE3ProjectXYZToBody *e = new ORB_SLAM3::EdgeSE3ProjectXYZToBody();
+                        imx_hc_slam::EdgeSE3ProjectXYZToBody *e = new imx_hc_slam::EdgeSE3ProjectXYZToBody();
 
                         e->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(id)));
                         e->setVertex(1, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(pKFi->mnId)));
@@ -1416,7 +1417,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame *pKF, bool* pbStopFlag, Map* pMap
     // Check inlier observations       
     for(size_t i=0, iend=vpEdgesMono.size(); i<iend;i++)
     {
-        ORB_SLAM3::EdgeSE3ProjectXYZ* e = vpEdgesMono[i];
+        imx_hc_slam::EdgeSE3ProjectXYZ* e = vpEdgesMono[i];
         MapPoint* pMP = vpMapPointEdgeMono[i];
 
         if(pMP->isBad())
@@ -1431,7 +1432,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame *pKF, bool* pbStopFlag, Map* pMap
 
     for(size_t i=0, iend=vpEdgesBody.size(); i<iend;i++)
     {
-        ORB_SLAM3::EdgeSE3ProjectXYZToBody* e = vpEdgesBody[i];
+        imx_hc_slam::EdgeSE3ProjectXYZToBody* e = vpEdgesBody[i];
         MapPoint* pMP = vpMapPointEdgeBody[i];
 
         if(pMP->isBad())
@@ -2132,7 +2133,7 @@ int Optimizer::OptimizeSim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &
     const Eigen::Vector3f t2w = pKF2->GetTranslation();
 
     // Set Sim3 vertex
-    ORB_SLAM3::VertexSim3Expmap * vSim3 = new ORB_SLAM3::VertexSim3Expmap();
+    imx_hc_slam::VertexSim3Expmap * vSim3 = new imx_hc_slam::VertexSim3Expmap();
     vSim3->_fix_scale=bFixScale;
     vSim3->setEstimate(g2oS12);
     vSim3->setId(0);
@@ -2144,8 +2145,8 @@ int Optimizer::OptimizeSim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &
     // Set MapPoint vertices
     const int N = vpMatches1.size();
     const vector<MapPoint*> vpMapPoints1 = pKF1->GetMapPointMatches();
-    vector<ORB_SLAM3::EdgeSim3ProjectXYZ*> vpEdges12;
-    vector<ORB_SLAM3::EdgeInverseSim3ProjectXYZ*> vpEdges21;
+    vector<imx_hc_slam::EdgeSim3ProjectXYZ*> vpEdges12;
+    vector<imx_hc_slam::EdgeInverseSim3ProjectXYZ*> vpEdges21;
     vector<size_t> vnIndexEdge;
     vector<bool> vbIsInKF2;
 
@@ -2245,7 +2246,7 @@ int Optimizer::OptimizeSim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &
         const cv::KeyPoint &kpUn1 = pKF1->mvKeysUn[i];
         obs1 << kpUn1.pt.x, kpUn1.pt.y;
 
-        ORB_SLAM3::EdgeSim3ProjectXYZ* e12 = new ORB_SLAM3::EdgeSim3ProjectXYZ();
+        imx_hc_slam::EdgeSim3ProjectXYZ* e12 = new imx_hc_slam::EdgeSim3ProjectXYZ();
 
         e12->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(id2)));
         e12->setVertex(1, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(0)));
@@ -2283,7 +2284,7 @@ int Optimizer::OptimizeSim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &
             nOutKF2++;
         }
 
-        ORB_SLAM3::EdgeInverseSim3ProjectXYZ* e21 = new ORB_SLAM3::EdgeInverseSim3ProjectXYZ();
+        imx_hc_slam::EdgeInverseSim3ProjectXYZ* e21 = new imx_hc_slam::EdgeInverseSim3ProjectXYZ();
 
         e21->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(id1)));
         e21->setVertex(1, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(0)));
@@ -2312,8 +2313,8 @@ int Optimizer::OptimizeSim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &
     int nBadOutKF2 = 0;
     for(size_t i=0; i<vpEdges12.size();i++)
     {
-        ORB_SLAM3::EdgeSim3ProjectXYZ* e12 = vpEdges12[i];
-        ORB_SLAM3::EdgeInverseSim3ProjectXYZ* e21 = vpEdges21[i];
+        imx_hc_slam::EdgeSim3ProjectXYZ* e12 = vpEdges12[i];
+        imx_hc_slam::EdgeInverseSim3ProjectXYZ* e21 = vpEdges21[i];
         if(!e12 || !e21)
             continue;
 
@@ -2323,8 +2324,8 @@ int Optimizer::OptimizeSim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &
             vpMatches1[idx]=static_cast<MapPoint*>(NULL);
             optimizer.removeEdge(e12);
             optimizer.removeEdge(e21);
-            vpEdges12[i]=static_cast<ORB_SLAM3::EdgeSim3ProjectXYZ*>(NULL);
-            vpEdges21[i]=static_cast<ORB_SLAM3::EdgeInverseSim3ProjectXYZ*>(NULL);
+            vpEdges12[i]=static_cast<imx_hc_slam::EdgeSim3ProjectXYZ*>(NULL);
+            vpEdges21[i]=static_cast<imx_hc_slam::EdgeInverseSim3ProjectXYZ*>(NULL);
             nBad++;
 
             if(!vbIsInKF2[i])
@@ -2356,8 +2357,8 @@ int Optimizer::OptimizeSim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &
     mAcumHessian = Eigen::MatrixXd::Zero(7, 7);
     for(size_t i=0; i<vpEdges12.size();i++)
     {
-        ORB_SLAM3::EdgeSim3ProjectXYZ* e12 = vpEdges12[i];
-        ORB_SLAM3::EdgeInverseSim3ProjectXYZ* e21 = vpEdges21[i];
+        imx_hc_slam::EdgeSim3ProjectXYZ* e12 = vpEdges12[i];
+        imx_hc_slam::EdgeInverseSim3ProjectXYZ* e21 = vpEdges21[i];
         if(!e12 || !e21)
             continue;
 
@@ -3599,7 +3600,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame* pMainKF,vector<KeyFrame*> vpAdju
 
     const int nExpectedSize = (vpAdjustKF.size()+vpFixedKF.size())*vpMPs.size();
 
-    vector<ORB_SLAM3::EdgeSE3ProjectXYZ*> vpEdgesMono;
+    vector<imx_hc_slam::EdgeSE3ProjectXYZ*> vpEdgesMono;
     vpEdgesMono.reserve(nExpectedSize);
 
     vector<KeyFrame*> vpEdgeKFMono;
@@ -3657,7 +3658,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame* pMainKF,vector<KeyFrame*> vpAdju
                 Eigen::Matrix<double,2,1> obs;
                 obs << kpUn.pt.x, kpUn.pt.y;
 
-                ORB_SLAM3::EdgeSE3ProjectXYZ* e = new ORB_SLAM3::EdgeSE3ProjectXYZ();
+                imx_hc_slam::EdgeSE3ProjectXYZ* e = new imx_hc_slam::EdgeSE3ProjectXYZ();
 
                 e->setVertex(0, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(id)));
                 e->setVertex(1, dynamic_cast<g2o::OptimizableGraph::Vertex*>(optimizer.vertex(pKF->mnId)));
@@ -3736,7 +3737,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame* pMainKF,vector<KeyFrame*> vpAdju
         int badMonoMP = 0, badStereoMP = 0;
         for(size_t i=0, iend=vpEdgesMono.size(); i<iend;i++)
         {
-            ORB_SLAM3::EdgeSE3ProjectXYZ* e = vpEdgesMono[i];
+            imx_hc_slam::EdgeSE3ProjectXYZ* e = vpEdgesMono[i];
             MapPoint* pMP = vpMapPointEdgeMono[i];
 
             if(pMP->isBad())
@@ -3781,7 +3782,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame* pMainKF,vector<KeyFrame*> vpAdju
     int badMonoMP = 0, badStereoMP = 0;
     for(size_t i=0, iend=vpEdgesMono.size(); i<iend;i++)
     {
-        ORB_SLAM3::EdgeSE3ProjectXYZ* e = vpEdgesMono[i];
+        imx_hc_slam::EdgeSE3ProjectXYZ* e = vpEdgesMono[i];
         MapPoint* pMP = vpMapPointEdgeMono[i];
 
         if(pMP->isBad())
@@ -3876,7 +3877,7 @@ void Optimizer::LocalBundleAdjustment(KeyFrame* pMainKF,vector<KeyFrame*> vpAdju
 
         for(size_t i=0, iend=vpEdgesMono.size(); i<iend;i++)
         {
-            ORB_SLAM3::EdgeSE3ProjectXYZ* e = vpEdgesMono[i];
+            imx_hc_slam::EdgeSE3ProjectXYZ* e = vpEdgesMono[i];
             MapPoint* pMP = vpMapPointEdgeMono[i];
             KeyFrame* pKFedge = vpEdgeKFMono[i];
 
diff --git a/src/Settings.cc b/src/Settings.cc
index 93a50be..b0655df 100644
--- a/src/Settings.cc
+++ b/src/Settings.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -30,7 +31,7 @@
 
 using namespace std;
 
-namespace ORB_SLAM3 {
+namespace imx_hc_slam {
 
     template<>
     float Settings::readParameter<float>(cv::FileStorage& fSettings, const std::string& name, bool& found, const bool required){
diff --git a/src/Sim3Solver.cc b/src/Sim3Solver.cc
index b8d3abf..c078382 100644
--- a/src/Sim3Solver.cc
+++ b/src/Sim3Solver.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -26,9 +27,9 @@
 #include "KeyFrame.h"
 #include "ORBmatcher.h"
 
-#include "Thirdparty/DBoW2/DUtils/Random.h"
+#include "Thirdparty/DBoW2-imx/DUtils/Random.h"
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 
diff --git a/src/System.cc b/src/System.cc
index 97ec683..638ad58 100644
--- a/src/System.cc
+++ b/src/System.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -33,7 +34,7 @@
 #include <boost/archive/xml_iarchive.hpp>
 #include <boost/archive/xml_oarchive.hpp>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 Verbose::eLevel Verbose::th = Verbose::VERBOSITY_NORMAL;
@@ -45,7 +46,7 @@ System::System(const string &strVocFile, const string &strSettingsFile, const eS
 {
     // Output welcome message
     cout << endl <<
-    "ORB-SLAM3 Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza." << endl <<
+    "imx_hc_slam Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza." << endl <<
     "ORB-SLAM2 Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza." << endl <<
     "This program comes with ABSOLUTELY NO WARRANTY;" << endl  <<
     "This is free software, and you are welcome to redistribute it" << endl <<
@@ -194,7 +195,7 @@ System::System(const string &strVocFile, const string &strSettingsFile, const eS
     //Initialize the Local Mapping thread and launch
     mpLocalMapper = new LocalMapping(this, mpAtlas, mSensor==MONOCULAR || mSensor==IMU_MONOCULAR,
                                      mSensor==IMU_MONOCULAR || mSensor==IMU_STEREO || mSensor==IMU_RGBD, strSequence);
-    mptLocalMapping = new thread(&ORB_SLAM3::LocalMapping::Run,mpLocalMapper);
+    mptLocalMapping = new thread(&imx_hc_slam::LocalMapping::Run,mpLocalMapper);
     mpLocalMapper->mInitFr = initFr;
     if(settings_)
         mpLocalMapper->mThFarPoints = settings_->thFarPoints();
@@ -211,7 +212,7 @@ System::System(const string &strVocFile, const string &strSettingsFile, const eS
     //Initialize the Loop Closing thread and launch
     // mSensor!=MONOCULAR && mSensor!=IMU_MONOCULAR
     mpLoopCloser = new LoopClosing(mpAtlas, mpKeyFrameDatabase, mpVocabulary, mSensor!=MONOCULAR, activeLC); // mSensor!=MONOCULAR);
-    mptLoopClosing = new thread(&ORB_SLAM3::LoopClosing::Run, mpLoopCloser);
+    mptLoopClosing = new thread(&imx_hc_slam::LoopClosing::Run, mpLoopCloser);
 
     //Set pointers between threads
     mpTracker->SetLocalMapper(mpLocalMapper);
@@ -592,7 +593,7 @@ void System::SaveTrajectoryTUM(const string &filename)
 
     // For each frame we have a reference keyframe (lRit), the timestamp (lT) and a flag
     // which is true when tracking failed (lbL).
-    list<ORB_SLAM3::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
+    list<imx_hc_slam::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
     list<double>::iterator lT = mpTracker->mlFrameTimes.begin();
     list<bool>::iterator lbL = mpTracker->mlbLost.begin();
     for(list<Sophus::SE3f>::iterator lit=mpTracker->mlRelativeFramePoses.begin(),
@@ -705,7 +706,7 @@ void System::SaveTrajectoryEuRoC(const string &filename)
 
     // For each frame we have a reference keyframe (lRit), the timestamp (lT) and a flag
     // which is true when tracking failed (lbL).
-    list<ORB_SLAM3::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
+    list<imx_hc_slam::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
     list<double>::iterator lT = mpTracker->mlFrameTimes.begin();
     list<bool>::iterator lbL = mpTracker->mlbLost.begin();
 
@@ -810,7 +811,7 @@ void System::SaveTrajectoryEuRoC(const string &filename, Map* pMap)
 
     // For each frame we have a reference keyframe (lRit), the timestamp (lT) and a flag
     // which is true when tracking failed (lbL).
-    list<ORB_SLAM3::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
+    list<imx_hc_slam::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
     list<double>::iterator lT = mpTracker->mlFrameTimes.begin();
     list<bool>::iterator lbL = mpTracker->mlbLost.begin();
 
@@ -925,7 +926,7 @@ void System::SaveTrajectoryEuRoC(const string &filename, Map* pMap)
 
     // For each frame we have a reference keyframe (lRit), the timestamp (lT) and a flag
     // which is true when tracking failed (lbL).
-    list<ORB_SLAM3::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
+    list<imx-hc-slam::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
     list<double>::iterator lT = mpTracker->mlFrameTimes.begin();
     list<bool>::iterator lbL = mpTracker->mlbLost.begin();
 
@@ -1176,11 +1177,11 @@ void System::SaveKeyFrameTrajectoryEuRoC(const string &filename, Map* pMap)
 
     // For each frame we have a reference keyframe (lRit), the timestamp (lT) and a flag
     // which is true when tracking failed (lbL).
-    list<ORB_SLAM3::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
+    list<imx-hc-slam::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
     list<double>::iterator lT = mpTracker->mlFrameTimes.begin();
     for(list<cv::Mat>::iterator lit=mpTracker->mlRelativeFramePoses.begin(), lend=mpTracker->mlRelativeFramePoses.end();lit!=lend;lit++, lRit++, lT++)
     {
-        ORB_SLAM3::KeyFrame* pKF = *lRit;
+        imx-hc-slam::KeyFrame* pKF = *lRit;
 
         cv::Mat Trw = cv::Mat::eye(4,4,CV_32F);
 
@@ -1229,12 +1230,12 @@ void System::SaveTrajectoryKITTI(const string &filename)
 
     // For each frame we have a reference keyframe (lRit), the timestamp (lT) and a flag
     // which is true when tracking failed (lbL).
-    list<ORB_SLAM3::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
+    list<imx_hc_slam::KeyFrame*>::iterator lRit = mpTracker->mlpReferences.begin();
     list<double>::iterator lT = mpTracker->mlFrameTimes.begin();
     for(list<Sophus::SE3f>::iterator lit=mpTracker->mlRelativeFramePoses.begin(),
         lend=mpTracker->mlRelativeFramePoses.end();lit!=lend;lit++, lRit++, lT++)
     {
-        ORB_SLAM3::KeyFrame* pKF = *lRit;
+        imx_hc_slam::KeyFrame* pKF = *lRit;
 
         Sophus::SE3f Trw;
 
diff --git a/src/Tracking.cc b/src/Tracking.cc
index a407d6d..f5957ba 100644
--- a/src/Tracking.cc
+++ b/src/Tracking.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -37,7 +38,7 @@
 
 using namespace std;
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 
@@ -3981,7 +3982,7 @@ void Tracking::UpdateFrameIMU(const float s, const IMU::Bias &b, KeyFrame* pCurr
 {
     Map * pMap = pCurrentKeyFrame->GetMap();
     unsigned int index = mnFirstFrameId;
-    list<ORB_SLAM3::KeyFrame*>::iterator lRit = mlpReferences.begin();
+    list<imx_hc_slam::KeyFrame*>::iterator lRit = mlpReferences.begin();
     list<bool>::iterator lbL = mlbLost.begin();
     for(auto lit=mlRelativeFramePoses.begin(),lend=mlRelativeFramePoses.end();lit!=lend;lit++, lRit++, lbL++)
     {
diff --git a/src/TwoViewReconstruction.cc b/src/TwoViewReconstruction.cc
index 2e3448b..56d131a 100644
--- a/src/TwoViewReconstruction.cc
+++ b/src/TwoViewReconstruction.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -21,13 +22,13 @@
 #include "Converter.h"
 #include "GeometricTools.h"
 
-#include "Thirdparty/DBoW2/DUtils/Random.h"
+#include "Thirdparty/DBoW2-imx/DUtils/Random.h"
 
 #include<thread>
 
 
 using namespace std;
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
     TwoViewReconstruction::TwoViewReconstruction(const Eigen::Matrix3f& k, float sigma, int iterations)
     {
diff --git a/src/Viewer.cc b/src/Viewer.cc
index c0ecb6b..89000bb 100644
--- a/src/Viewer.cc
+++ b/src/Viewer.cc
@@ -1,18 +1,19 @@
 /**
-* This file is part of ORB-SLAM3
+* This file is part of imx-hc-slam
 *
+* Copyright (C) 2017-2022 NXP
 * Copyright (C) 2017-2021 Carlos Campos, Richard Elvira, Juan J. Gómez Rodríguez, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 * Copyright (C) 2014-2016 Raúl Mur-Artal, José M.M. Montiel and Juan D. Tardós, University of Zaragoza.
 *
-* ORB-SLAM3 is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
+* imx-hc-slam is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
-* ORB-SLAM3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
+* imx-hc-slam is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
-* You should have received a copy of the GNU General Public License along with ORB-SLAM3.
+* You should have received a copy of the GNU General Public License along with imx-hc-slam.
 * If not, see <http://www.gnu.org/licenses/>.
 */
 
@@ -22,7 +23,7 @@
 
 #include <mutex>
 
-namespace ORB_SLAM3
+namespace imx_hc_slam
 {
 
 Viewer::Viewer(System* pSystem, FrameDrawer *pFrameDrawer, MapDrawer *pMapDrawer, Tracking *pTracking, const string &strSettingPath, Settings* settings):
@@ -164,7 +165,7 @@ void Viewer::Run()
     mbFinished = false;
     mbStopped = false;
 
-    pangolin::CreateWindowAndBind("ORB-SLAM3: Map Viewer",1024,768);
+    pangolin::CreateWindowAndBind("imx_hc_slam: Map Viewer",1024,768);
 
     // 3D Mouse handler requires depth testing to be enabled
     glEnable(GL_DEPTH_TEST);
@@ -204,7 +205,7 @@ void Viewer::Run()
     Twc.SetIdentity();
     pangolin::OpenGlMatrix Ow; // Oriented with g in the z axis
     Ow.SetIdentity();
-    cv::namedWindow("ORB-SLAM3: Current Frame");
+    cv::namedWindow("imx_hc_slam: Current Frame");
 
     bool bFollow = true;
     bool bLocalizationMode = false;
@@ -335,7 +336,7 @@ void Viewer::Run()
             cv::resize(toShow, toShow, cv::Size(width, height));
         }
 
-        cv::imshow("ORB-SLAM3: Current Frame",toShow);
+        cv::imshow("imx_hc_slam: Current Frame",toShow);
         cv::waitKey(mT);
 
         if(menuReset)
-- 
2.35.1

